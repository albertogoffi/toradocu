org.apache.commons.collections4.CollectionUtils.<C>addAll(java.util.Collection<C>, C[]) throws java.lang.NullPointerException if the collection or array is null ==> [args[0]==null||args[1]==null]
org.apache.commons.collections4.CollectionUtils.<C>addAll(java.util.Collection<C>, java.lang.Iterable<? extends C>) throws java.lang.NullPointerException if the collection or iterator is null ==> [args[0]==null||args[1]==null]
org.apache.commons.collections4.CollectionUtils.<C>addAll(java.util.Collection<C>, java.util.Enumeration<? extends C>) throws java.lang.NullPointerException if the collection or enumeration is null ==> [args[0]==null||args[1]==null]
org.apache.commons.collections4.CollectionUtils.<C>addAll(java.util.Collection<C>, java.util.Iterator<? extends C>) throws java.lang.NullPointerException if the collection or iterator is null ==> [args[0]==null||args[1]==null]
org.apache.commons.collections4.CollectionUtils.<C>predicatedCollection(java.util.Collection<C>, org.apache.commons.collections4.Predicate<? super C>) throws java.lang.NullPointerException if the Collection is null ==> [args[0]==null]
org.apache.commons.collections4.CollectionUtils.<C>retainAll(java.util.Collection<C>, java.util.Collection<?>) throws java.lang.NullPointerException if either parameter is null ==> [args[0]==null||args[1]==null]
org.apache.commons.collections4.CollectionUtils.<C>synchronizedCollection(java.util.Collection<C>) throws java.lang.NullPointerException if the collection is null ==> [args[0]==null]
org.apache.commons.collections4.CollectionUtils.<C>unmodifiableCollection(java.util.Collection<? extends C>) throws java.lang.NullPointerException if the collection is null ==> [args[0]==null]
org.apache.commons.collections4.CollectionUtils.<E>extractSingleton(java.util.Collection<E>) throws java.lang.IllegalArgumentException if collection is empty or contains more than one element ==> [args[0].isEmpty()||args[0].size()>1]
org.apache.commons.collections4.CollectionUtils.<E>extractSingleton(java.util.Collection<E>) throws java.lang.NullPointerException if collection is null ==> [args[0]==null]
org.apache.commons.collections4.CollectionUtils.<E>isEqualCollection(java.util.Collection<? extends E>, java.util.Collection<? extends E>, org.apache.commons.collections4.Equator<? super E>) throws java.lang.NullPointerException if the equator is null ==> [args[2]==null]
org.apache.commons.collections4.CollectionUtils.<E>permutations(java.util.Collection<E>) throws java.lang.NullPointerException if collection is null ==> [args[0]==null]
org.apache.commons.collections4.CollectionUtils.<E>removeAll(java.lang.Iterable<E>, java.lang.Iterable<? extends E>, org.apache.commons.collections4.Equator<? super E>) throws java.lang.NullPointerException if any of the parameters is null ==> [args[0]==null||args[1]==null||args[2]==null]
org.apache.commons.collections4.CollectionUtils.<E>removeAll(java.util.Collection<E>, java.util.Collection<?>) throws java.lang.NullPointerException if either parameter is null ==> [args[0]==null||args[1]==null]
org.apache.commons.collections4.CollectionUtils.<E>retainAll(java.lang.Iterable<E>, java.lang.Iterable<? extends E>, org.apache.commons.collections4.Equator<? super E>) throws java.lang.NullPointerException if any of the parameters is null ==> [args[0]==null||args[1]==null||args[2]==null]
org.apache.commons.collections4.CollectionUtils.<E>transformingCollection(java.util.Collection<E>, org.apache.commons.collections4.Transformer<? super E, ? extends E>) throws java.lang.NullPointerException if the Collection or Transformer is null ==> [args[0]==null||args[1]==null]
org.apache.commons.collections4.CollectionUtils.<I, O, R extends java.util.Collection<? super O>>collect(java.lang.Iterable<? extends I>, org.apache.commons.collections4.Transformer<? super I, ? extends O>, R) throws java.lang.NullPointerException if the outputCollection is null and both, inputCollection and transformer are not null ==> [args[2]==null && args[0]!=null && args[1]!=null]
org.apache.commons.collections4.CollectionUtils.<I, O, R extends java.util.Collection<? super O>>collect(java.util.Iterator<? extends I>, org.apache.commons.collections4.Transformer<? super I, ? extends O>, R) throws java.lang.NullPointerException if the output collection is null and both, inputIterator and transformer are not null ==> [args[2]==null && args[0]!=null && args[1]!=null]
org.apache.commons.collections4.CollectionUtils.<I, O>collect(java.lang.Iterable<I>, org.apache.commons.collections4.Transformer<? super I, ? extends O>) throws java.lang.NullPointerException if the input collection is null ==> [args[0]==null]
org.apache.commons.collections4.CollectionUtils.<K, V>get(java.util.Map<K, V>, int) throws java.lang.IndexOutOfBoundsException if the index is invalid ==> [args[0].entrySet().size()<=args[1]]
org.apache.commons.collections4.CollectionUtils.<O extends java.lang.Comparable<? super O>>collate(java.lang.Iterable<? extends O>, java.lang.Iterable<? extends O>) throws java.lang.NullPointerException if either collection is null ==> [args[0]==null||args[1]==null]
org.apache.commons.collections4.CollectionUtils.<O extends java.lang.Comparable<? super O>>collate(java.lang.Iterable<? extends O>, java.lang.Iterable<? extends O>, boolean) throws java.lang.NullPointerException if either collection is null ==> [args[0]==null||args[1]==null]
org.apache.commons.collections4.CollectionUtils.<O>cardinality(O, java.lang.Iterable<? super O>) throws java.lang.NullPointerException if coll is null ==> [args[1]==null]
org.apache.commons.collections4.CollectionUtils.<O>collate(java.lang.Iterable<? extends O>, java.lang.Iterable<? extends O>, java.util.Comparator<? super O>) throws java.lang.NullPointerException if either collection or the comparator is null ==> [args[0]==null||args[1]==null||args[2]==null]
org.apache.commons.collections4.CollectionUtils.<O>collate(java.lang.Iterable<? extends O>, java.lang.Iterable<? extends O>, java.util.Comparator<? super O>, boolean) throws java.lang.NullPointerException if either collection or the comparator is null ==> [args[0]==null||args[1]==null||args[2]==null]
org.apache.commons.collections4.CollectionUtils.<O>select(java.lang.Iterable<? extends O>, org.apache.commons.collections4.Predicate<? super O>) throws java.lang.NullPointerException if the input collection is null ==> [args[0]==null]
org.apache.commons.collections4.CollectionUtils.<O>selectRejected(java.lang.Iterable<? extends O>, org.apache.commons.collections4.Predicate<? super O>) throws java.lang.NullPointerException if the input collection is null ==> [args[0]==null]
org.apache.commons.collections4.CollectionUtils.<T>addIgnoreNull(java.util.Collection<T>, T) throws java.lang.NullPointerException if the collection is null ==> [args[0]==null]
org.apache.commons.collections4.CollectionUtils.<T>get(java.lang.Iterable<T>, int) throws java.lang.IndexOutOfBoundsException if the index is invalid ==> [???]
org.apache.commons.collections4.CollectionUtils.<T>get(java.util.Iterator<T>, int) throws java.lang.IllegalArgumentException if the object type is invalid ==> [???]
org.apache.commons.collections4.CollectionUtils.<T>get(java.util.Iterator<T>, int) throws java.lang.IndexOutOfBoundsException if the index is invalid ==> [???]
org.apache.commons.collections4.CollectionUtils.get(java.lang.Object, int) throws java.lang.IllegalArgumentException if the object type is invalid ==> [???]
org.apache.commons.collections4.CollectionUtils.get(java.lang.Object, int) throws java.lang.IndexOutOfBoundsException if the index is invalid ==> [???]
org.apache.commons.collections4.CollectionUtils.isFull(java.util.Collection<? extends java.lang.Object>) throws java.lang.NullPointerException if the collection is null ==> [args[0]==null]
org.apache.commons.collections4.CollectionUtils.maxSize(java.util.Collection<? extends java.lang.Object>) throws java.lang.NullPointerException if the collection is null ==> [args[0]==null]
org.apache.commons.collections4.CollectionUtils.size(java.lang.Object) throws java.lang.IllegalArgumentException thrown if object is not recognised ==> [???]
org.apache.commons.collections4.CollectionUtils.sizeIsEmpty(java.lang.Object) throws java.lang.IllegalArgumentException thrown if object is not recognised ==> [???]
