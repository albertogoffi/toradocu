[
  {
    "containingClass": {
      "isArray": false,
      "name": "SubLine",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.SubLine"
    },
    "isVarArgs": false,
    "name": "SubLine",
    "paramTags": [
      {
        "comment": "underlying line",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "line",
          "type": {
            "isArray": false,
            "name": "Line",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line"
          }
        }
      },
      {
        "comment": "remaining region of the line",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "remainingRegion",
          "type": {
            "isArray": false,
            "name": "IntervalsSet",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "line",
        "type": {
          "isArray": false,
          "name": "Line",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line"
        }
      },
      {
        "name": "remainingRegion",
        "type": {
          "isArray": false,
          "name": "IntervalsSet",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet"
        }
      }
    ],
    "signature": "SubLine(org.apache.commons.math3.geometry.euclidean.threed.Line line,org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet remainingRegion)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "SubLine",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.SubLine"
    },
    "isVarArgs": false,
    "name": "SubLine",
    "paramTags": [
      {
        "comment": "start point",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "start",
          "type": {
            "isArray": false,
            "name": "Vector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
          }
        }
      },
      {
        "comment": "end point",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "end",
          "type": {
            "isArray": false,
            "name": "Vector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
          }
        }
      },
      {
        "comment": "tolerance below which points are considered identical",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tolerance",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "start",
        "type": {
          "isArray": false,
          "name": "Vector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
        }
      },
      {
        "name": "end",
        "type": {
          "isArray": false,
          "name": "Vector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
        }
      },
      {
        "name": "tolerance",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "signature": "SubLine(org.apache.commons.math3.geometry.euclidean.threed.Vector3D start,org.apache.commons.math3.geometry.euclidean.threed.Vector3D end,double tolerance)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "throwsTags": [
      {
        "comment": "if the points are equal",
        "condition": "args[1].equals(args[0])",
        "exception": {
          "isArray": false,
          "name": "MathIllegalArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "SubLine",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.SubLine"
    },
    "isVarArgs": false,
    "name": "SubLine",
    "paramTags": [
      {
        "comment": "start point",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "start",
          "type": {
            "isArray": false,
            "name": "Vector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
          }
        }
      },
      {
        "comment": "end point",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "end",
          "type": {
            "isArray": false,
            "name": "Vector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "start",
        "type": {
          "isArray": false,
          "name": "Vector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
        }
      },
      {
        "name": "end",
        "type": {
          "isArray": false,
          "name": "Vector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
        }
      }
    ],
    "signature": "SubLine(org.apache.commons.math3.geometry.euclidean.threed.Vector3D start,org.apache.commons.math3.geometry.euclidean.threed.Vector3D end)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "throwsTags": [
      {
        "comment": "if the points are equal",
        "condition": "args[1].equals(args[0])",
        "exception": {
          "isArray": false,
          "name": "MathIllegalArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "SubLine",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.SubLine"
    },
    "isVarArgs": false,
    "name": "SubLine",
    "paramTags": [
      {
        "comment": "single segment forming the sub-line",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "segment",
          "type": {
            "isArray": false,
            "name": "Segment",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Segment"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "segment",
        "type": {
          "isArray": false,
          "name": "Segment",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Segment"
        }
      }
    ],
    "signature": "SubLine(org.apache.commons.math3.geometry.euclidean.threed.Segment segment)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "throwsTags": [
      {
        "comment": "if the segment endpoints are equal",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "MathIllegalArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "SubLine",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.SubLine"
    },
    "isVarArgs": false,
    "name": "getSegments",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "list of segments endpoints",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getSegments()",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "SubLine",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.SubLine"
    },
    "isVarArgs": false,
    "name": "intersection",
    "paramTags": [
      {
        "comment": "other sub-line which may intersect instance",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "subLine",
          "type": {
            "isArray": false,
            "name": "SubLine",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.SubLine"
          }
        }
      },
      {
        "comment": "if true, endpoints are considered to belong to instance (i.e. they are closed sets) and may be returned, otherwise endpoints are considered to not belong to instance (i.e. they are open sets) and intersection occurring on endpoints lead to null being returned",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "includeEndPoints",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "subLine",
        "type": {
          "isArray": false,
          "name": "SubLine",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.SubLine"
        }
      },
      {
        "name": "includeEndPoints",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnTag": {
      "comment": "the intersection point if there is one, null if the sub-lines don't intersect",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Vector3D",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
    },
    "signature": "intersection(org.apache.commons.math3.geometry.euclidean.threed.SubLine subLine,boolean includeEndPoints)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "SubLine",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.SubLine"
    },
    "isVarArgs": false,
    "name": "buildIntervalSet",
    "paramTags": [
      {
        "comment": "start point",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "start",
          "type": {
            "isArray": false,
            "name": "Vector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
          }
        }
      },
      {
        "comment": "end point",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "end",
          "type": {
            "isArray": false,
            "name": "Vector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
          }
        }
      },
      {
        "comment": "tolerance below which points are considered identical",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tolerance",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "start",
        "type": {
          "isArray": false,
          "name": "Vector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
        }
      },
      {
        "name": "end",
        "type": {
          "isArray": false,
          "name": "Vector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
        }
      },
      {
        "name": "tolerance",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "an interval set",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "IntervalsSet",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet"
    },
    "signature": "buildIntervalSet(org.apache.commons.math3.geometry.euclidean.threed.Vector3D start,org.apache.commons.math3.geometry.euclidean.threed.Vector3D end,double tolerance)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
    "throwsTags": [
      {
        "comment": "if the points are equal",
        "condition": "args[0].equals(args[1])",
        "exception": {
          "isArray": false,
          "name": "MathIllegalArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  }
]
