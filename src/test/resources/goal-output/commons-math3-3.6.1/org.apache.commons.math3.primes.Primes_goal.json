[
  {
    "signature": "isPrime(int n)",
    "name": "isPrime",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.primes.Primes",
      "name": "Primes",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.primes.Primes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "number to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if n is prime. (All numbers < 2 return false).",
      "kind": "RETURN",
      "condition": "args[0]<2 ? methodResultID==false"
    },
    "throwsTags": []
  },
  {
    "signature": "nextPrime(int n)",
    "name": "nextPrime",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.primes.Primes",
      "name": "Primes",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.primes.Primes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "a positive number.",
        "kind": "PARAM",
        "condition": "args[0]>0"
      }
    ],
    "returnTag": {
      "comment": "the smallest prime greater than or equal to n.",
      "kind": "RETURN",
      "condition": "true?methodResultID>=args[0]"
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if n < 0.",
        "kind": "THROWS",
        "condition": "args[0]<0"
      }
    ]
  },
  {
    "signature": "primeFactors(int n)",
    "name": "primeFactors",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.primes.Primes",
      "name": "Primes",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.primes.Primes",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "number to factorize: must be â‰¥ 2",
        "kind": "PARAM",
        "condition": "args[0]>=2"
      }
    ],
    "returnTag": {
      "comment": "list of prime factors of n",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if n < 2.",
        "kind": "THROWS",
        "condition": "args[0]<2"
      }
    ]
  }
]
