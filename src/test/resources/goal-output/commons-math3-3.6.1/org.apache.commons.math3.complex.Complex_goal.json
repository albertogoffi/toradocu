[
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "Complex",
    "paramTags": [
      {
        "comment": "Real part.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "real",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "real",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "signature": "Complex(double real)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "Complex",
    "paramTags": [
      {
        "comment": "Real part.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "real",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Imaginary part.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "imaginary",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "real",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "imaginary",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "signature": "Complex(double real,double imaginary)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "abs",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the absolute value.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "abs()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "add",
    "paramTags": [
      {
        "comment": "Value to be added to this Complex.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "addend",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "addend",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      }
    ],
    "returnTag": {
      "comment": "this + addend.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "add(org.apache.commons.math3.complex.Complex addend)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": [
      {
        "codeTags": [
          "addend",
          "null"
        ],
        "comment": "if addend is null.",
        "condition": "args[0]==null",
        "exception": {
          "isArray": false,
          "name": "NullArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException"
        },
        "kind": "THROWS"
      },
      {
        "codeTags": [
          "a",
          "null"
        ],
        "comment": "if a is null.",
        "condition": "target.add()==null || target.abs()==null || target.tan()==null",
        "exception": {
          "isArray": false,
          "name": "NullArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException"
        },
        "kind": "THROWS"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "add",
    "paramTags": [
      {
        "comment": "Value to be added to this Complex.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "addend",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "addend",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "this + addend.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "add(double addend)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "conjugate",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the conjugate of this Complex object.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "conjugate()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "divide",
    "paramTags": [
      {
        "comment": "Value by which this Complex is to be divided.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "divisor",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "divisor",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      }
    ],
    "returnTag": {
      "comment": "this / divisor.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "divide(org.apache.commons.math3.complex.Complex divisor)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": [
      {
        "codeTags": [
          "divisor",
          "null"
        ],
        "comment": "if divisor is null.",
        "condition": "args[0]==null",
        "exception": {
          "isArray": false,
          "name": "NullArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException"
        },
        "kind": "THROWS"
      },
      {
        "codeTags": [
          "a",
          "null"
        ],
        "comment": "if a is null.",
        "condition": "target.add()==null || target.abs()==null || target.tan()==null",
        "exception": {
          "isArray": false,
          "name": "NullArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException"
        },
        "kind": "THROWS"
      },
      {
        "codeTags": [
          "a"
        ],
        "comment": "if a is zero",
        "condition": "target.add()==0 || target.abs()==0 || target.tan()==0",
        "exception": {
          "isArray": false,
          "name": "MathArithmeticException",
          "qualifiedName": "org.apache.commons.math3.exception.MathArithmeticException"
        },
        "kind": "THROWS"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "divide",
    "paramTags": [
      {
        "comment": "Value by which this Complex is to be divided.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "divisor",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "divisor",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "this / divisor.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "divide(double divisor)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "reciprocal",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the inverse of this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "reciprocal()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": [
      {
        "codeTags": [
          "this"
        ],
        "comment": "if this is zero",
        "condition": "target.abs()==0",
        "exception": {
          "isArray": false,
          "name": "MathArithmeticException",
          "qualifiedName": "org.apache.commons.math3.exception.MathArithmeticException"
        },
        "kind": "THROWS"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "equals",
    "paramTags": [
      {
        "comment": "Object to test for equality with this instance.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "other",
          "type": {
            "isArray": false,
            "name": "Object",
            "qualifiedName": "java.lang.Object"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "other",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      }
    ],
    "returnTag": {
      "comment": "true if the objects are equal, false if object is null, not an instance of Complex, or not equal to this instance.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "equals(java.lang.Object other)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "equals",
    "paramTags": [
      {
        "comment": "First value (cannot be null).",
        "condition": "(args[0]==null) == false",
        "kind": "PARAM",
        "parameter": {
          "name": "x",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      },
      {
        "comment": "Second value (cannot be null).",
        "condition": "(args[1]==null) == false",
        "kind": "PARAM",
        "parameter": {
          "name": "y",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      },
      {
        "comment": "(maxUlps - 1) is the number of floating point values between the real (resp. imaginary) parts of x and y.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "maxUlps",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "x",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      },
      {
        "name": "y",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      },
      {
        "name": "maxUlps",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "true if there are fewer than maxUlps floating point values between the real (resp. imaginary) parts of x and y.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "equals(org.apache.commons.math3.complex.Complex x,org.apache.commons.math3.complex.Complex y,int maxUlps)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "equals",
    "paramTags": [
      {
        "comment": "First value (cannot be null).",
        "condition": "(args[0]==null) == false",
        "kind": "PARAM",
        "parameter": {
          "name": "x",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      },
      {
        "comment": "Second value (cannot be null).",
        "condition": "(args[1]==null) == false",
        "kind": "PARAM",
        "parameter": {
          "name": "y",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "x",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      },
      {
        "name": "y",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      }
    ],
    "returnTag": {
      "comment": "true if the values are equal.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "equals(org.apache.commons.math3.complex.Complex x,org.apache.commons.math3.complex.Complex y)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "equals",
    "paramTags": [
      {
        "comment": "First value (cannot be null).",
        "condition": "(args[0]==null) == false",
        "kind": "PARAM",
        "parameter": {
          "name": "x",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      },
      {
        "comment": "Second value (cannot be null).",
        "condition": "(args[1]==null) == false",
        "kind": "PARAM",
        "parameter": {
          "name": "y",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      },
      {
        "comment": "Amount of allowed absolute error.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "eps",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "x",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      },
      {
        "name": "y",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      },
      {
        "name": "eps",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "true if the values are two adjacent floating point numbers or they are within range of each other.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "equals(org.apache.commons.math3.complex.Complex x,org.apache.commons.math3.complex.Complex y,double eps)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "equalsWithRelativeTolerance",
    "paramTags": [
      {
        "comment": "First value (cannot be null).",
        "condition": "(args[0]==null) == false",
        "kind": "PARAM",
        "parameter": {
          "name": "x",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      },
      {
        "comment": "Second value (cannot be null).",
        "condition": "(args[1]==null) == false",
        "kind": "PARAM",
        "parameter": {
          "name": "y",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      },
      {
        "comment": "Amount of allowed relative error.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "eps",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "x",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      },
      {
        "name": "y",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      },
      {
        "name": "eps",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "true if the values are two adjacent floating point numbers or they are within range of each other.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "equalsWithRelativeTolerance(org.apache.commons.math3.complex.Complex x,org.apache.commons.math3.complex.Complex y,double eps)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "hashCode",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "a hash code value for this object.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "hashCode()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "getImaginary",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the imaginary part.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getImaginary()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "getReal",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the real part.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getReal()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "isNaN",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "true if either or both parts of this complex number is NaN; false otherwise.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isNaN()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "isInfinite",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "true if one or both parts of this complex number are infinite and neither part is NaN.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isInfinite()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "multiply",
    "paramTags": [
      {
        "comment": "value to be multiplied by this Complex.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "factor",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "factor",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      }
    ],
    "returnTag": {
      "comment": "this * factor.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "multiply(org.apache.commons.math3.complex.Complex factor)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": [
      {
        "codeTags": [
          "factor",
          "null"
        ],
        "comment": "if factor is null.",
        "condition": "args[0]==null",
        "exception": {
          "isArray": false,
          "name": "NullArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException"
        },
        "kind": "THROWS"
      },
      {
        "codeTags": [
          "a",
          "null"
        ],
        "comment": "if a is null.",
        "condition": "target.add()==null || target.abs()==null || target.tan()==null",
        "exception": {
          "isArray": false,
          "name": "NullArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException"
        },
        "kind": "THROWS"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "multiply",
    "paramTags": [
      {
        "comment": "value to be multiplied by this Complex.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "factor",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "factor",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "this * factor.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "multiply(int factor)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "multiply",
    "paramTags": [
      {
        "comment": "value to be multiplied by this Complex.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "factor",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "factor",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "this * factor.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "multiply(double factor)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "negate",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "-this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "negate()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "subtract",
    "paramTags": [
      {
        "comment": "value to be subtracted from this Complex.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "subtrahend",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "subtrahend",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      }
    ],
    "returnTag": {
      "comment": "this - subtrahend.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "subtract(org.apache.commons.math3.complex.Complex subtrahend)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": [
      {
        "codeTags": [
          "subtrahend",
          "null"
        ],
        "comment": "if subtrahend is null.",
        "condition": "args[0]==null",
        "exception": {
          "isArray": false,
          "name": "NullArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException"
        },
        "kind": "THROWS"
      },
      {
        "codeTags": [
          "a",
          "null"
        ],
        "comment": "if a is null.",
        "condition": "target.add()==null || target.abs()==null || target.tan()==null",
        "exception": {
          "isArray": false,
          "name": "NullArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException"
        },
        "kind": "THROWS"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "subtract",
    "paramTags": [
      {
        "comment": "value to be subtracted from this Complex.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "subtrahend",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "subtrahend",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "this - subtrahend.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "subtract(double subtrahend)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "acos",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the inverse cosine of this complex number.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "acos()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "asin",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the inverse sine of this complex number.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "asin()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "atan",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the inverse tangent of this complex number",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "atan()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "cos",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the cosine of this complex number.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "cos()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "cosh",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the hyperbolic cosine of this complex number.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "cosh()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "exp",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "ethis.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "exp()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "log",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the value ln \u00a0 this, the natural logarithm of this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "log()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "pow",
    "paramTags": [
      {
        "comment": "exponent to which this Complex is to be raised.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "x",
          "type": {
            "isArray": false,
            "name": "Complex",
            "qualifiedName": "org.apache.commons.math3.complex.Complex"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "x",
        "type": {
          "isArray": false,
          "name": "Complex",
          "qualifiedName": "org.apache.commons.math3.complex.Complex"
        }
      }
    ],
    "returnTag": {
      "comment": "thisx.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "pow(org.apache.commons.math3.complex.Complex x)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": [
      {
        "codeTags": [
          "null"
        ],
        "comment": "if x is null.",
        "condition": "args[0]==null",
        "exception": {
          "isArray": false,
          "name": "NullArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException"
        },
        "kind": "THROWS"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "pow",
    "paramTags": [
      {
        "comment": "exponent to which this Complex is to be raised.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "x",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "x",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "thisx.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "pow(double x)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "sin",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the sine of this complex number.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "sin()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "sinh",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the hyperbolic sine of this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "sinh()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "sqrt",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the square root of this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "sqrt()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "sqrt1z",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the square root of 1 - this2.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "sqrt1z()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "tan",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the tangent of this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "tan()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "tanh",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the hyperbolic tangent of this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "tanh()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "getArgument",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the argument of this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getArgument()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "nthRoot",
    "paramTags": [
      {
        "comment": "Degree of root.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "n",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "n",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "a List of all n-th roots of this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "nthRoot(int n)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": [
      {
        "codeTags": [
          "n <= 0"
        ],
        "comment": "if n <= 0.",
        "condition": "args[0]<=0",
        "exception": {
          "isArray": false,
          "name": "NotPositiveException",
          "qualifiedName": "org.apache.commons.math3.exception.NotPositiveException"
        },
        "kind": "THROWS"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "createComplex",
    "paramTags": [
      {
        "comment": "Real part.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "realPart",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Imaginary part.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "imaginaryPart",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "realPart",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "imaginaryPart",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "a new complex number instance.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "createComplex(double realPart,double imaginaryPart)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "valueOf",
    "paramTags": [
      {
        "comment": "Real part.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "realPart",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Imaginary part.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "imaginaryPart",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "realPart",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "imaginaryPart",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "a Complex instance.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "valueOf(double realPart,double imaginaryPart)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "valueOf",
    "paramTags": [
      {
        "comment": "Real part.",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "realPart",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "realPart",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "a Complex instance.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "signature": "valueOf(double realPart)",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "readResolve",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A Complex instance with all fields resolved.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Object",
      "qualifiedName": "java.lang.Object"
    },
    "signature": "readResolve()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "getField",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "Field to which the instance belongs",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "ComplexField",
      "qualifiedName": "org.apache.commons.math3.complex.ComplexField"
    },
    "signature": "getField()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Complex",
      "qualifiedName": "org.apache.commons.math3.complex.Complex"
    },
    "isVarArgs": false,
    "name": "toString",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "toString()",
    "targetClass": "org.apache.commons.math3.complex.Complex",
    "throwsTags": []
  }
]
