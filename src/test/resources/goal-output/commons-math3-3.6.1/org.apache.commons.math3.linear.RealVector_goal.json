[
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getDimension",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the size of this vector.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getDimension()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getEntry",
    "paramTags": [
      {
        "comment": "Index location of entry to be fetched.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "index",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "index",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "the vector entry at index.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getEntry(int index)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if the index is not valid.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "OutOfRangeException",
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "setEntry",
    "paramTags": [
      {
        "comment": "element index.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "index",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      },
      {
        "comment": "new value for the element.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "value",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "index",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "value",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setEntry(int index,double value)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if the index is not valid.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "OutOfRangeException",
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "addToEntry",
    "paramTags": [
      {
        "comment": "Index location of entry to be set.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "index",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      },
      {
        "comment": "Value to add to the vector entry.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "increment",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "index",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "increment",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "addToEntry(int index,double increment)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if the index is not valid.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "OutOfRangeException",
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "append",
    "paramTags": [
      {
        "comment": "vector to append to this one.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "a new vector.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "append(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "append",
    "paramTags": [
      {
        "comment": "double to append.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "d",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "d",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "a new vector.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "append(double d)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getSubVector",
    "paramTags": [
      {
        "comment": "index of first element.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "index",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      },
      {
        "comment": "number of elements to be retrieved.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "n",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "index",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "n",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "a vector containing n elements.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "getSubVector(int index,int n)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if the index is not valid.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "OutOfRangeException",
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if the number of elements is not positive.",
        "condition": "(args[1]>0) == false",
        "exception": {
          "isArray": false,
          "name": "NotPositiveException",
          "qualifiedName": "org.apache.commons.math3.exception.NotPositiveException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "setSubVector",
    "paramTags": [
      {
        "comment": "index of first element to be set.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "index",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      },
      {
        "comment": "vector containing the values to set.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "index",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setSubVector(int index,org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if the index is not valid.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "OutOfRangeException",
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "isNaN",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "true if any coordinate of this vector is NaN, false otherwise.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isNaN()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "isInfinite",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "true if any coordinate of this vector is infinite and none are NaN, false otherwise.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isInfinite()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "checkVectorDimensions",
    "paramTags": [
      {
        "comment": "Vector to compare instance with.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "checkVectorDimensions(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if the vectors do not have the same dimension.",
        "condition": "target.checkVectorsDimensions(args[0])",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "checkVectorDimensions",
    "paramTags": [
      {
        "comment": "Expected dimension.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "n",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "n",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "checkVectorDimensions(int n)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if the dimension is inconsistent with the vector size.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "checkIndex",
    "paramTags": [
      {
        "comment": "Index to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "index",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "index",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "checkIndex(int index)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if index is not valid.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "OutOfRangeException",
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "checkIndices",
    "paramTags": [
      {
        "comment": "the index of the first entry of the subvector",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "start",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      },
      {
        "comment": "the index of the last entry of the subvector (inclusive)",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "end",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "start",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "end",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "checkIndices(int start,int end)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if start of end are not valid",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "OutOfRangeException",
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if end < start",
        "condition": "args[1]<args[0]",
        "exception": {
          "isArray": false,
          "name": "NumberIsTooSmallException",
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "add",
    "paramTags": [
      {
        "comment": "Vector to be added.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "this + v.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "add(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if v is not the same size as this vector.",
        "condition": "target.checkVectorDimensions(args[0])",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "subtract",
    "paramTags": [
      {
        "comment": "Vector to be subtracted.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "this - v.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "subtract(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if v is not the same size as this vector.",
        "condition": "target.checkVectorsDimensions(args[0])",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "mapAdd",
    "paramTags": [
      {
        "comment": "Value to be added to each entry.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "d",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "d",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "this + d.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "mapAdd(double d)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "mapAddToSelf",
    "paramTags": [
      {
        "comment": "Value to be added to each entry.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "d",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "d",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "mapAddToSelf(double d)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "copy",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "a vector copy.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "copy()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "dotProduct",
    "paramTags": [
      {
        "comment": "Vector with which dot product should be computed",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "the scalar dot product between this instance and v.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "dotProduct(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if v is not the same size as this vector.",
        "condition": "target.checkVectorDimensions(args[0])",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "cosine",
    "paramTags": [
      {
        "comment": "Vector.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "the cosine of the angle between this vector and v.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "cosine(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if this or v is the null vector",
        "condition": "target.getNorm()==0 || args[0].getNorm()==0",
        "exception": {
          "isArray": false,
          "name": "MathArithmeticException",
          "qualifiedName": "org.apache.commons.math3.exception.MathArithmeticException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if the dimensions of this and v do not match",
        "condition": "target.getDimension() != args[0].getDimension()",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "ebeDivide",
    "paramTags": [
      {
        "comment": "Vector by which instance elements must be divided.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "a vector containing this[i] / v[i] for all i.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "ebeDivide(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if v is not the same size as this vector.",
        "condition": "args[0].getDimension() != target.getDimension()",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "ebeMultiply",
    "paramTags": [
      {
        "comment": "Vector by which instance elements must be multiplied",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "a vector containing this[i] * v[i] for all i.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "ebeMultiply(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if v is not the same size as this vector.",
        "condition": "args[0].getDimension() != target.getDimension()",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getDistance",
    "paramTags": [
      {
        "comment": "Vector to which distance is requested.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "the distance between two vectors.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getDistance(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if v is not the same size as this vector.",
        "condition": "args[0].getDimension() != target.getDimension()",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getNorm",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the norm.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getNorm()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getL1Norm",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the norm.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getL1Norm()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getLInfNorm",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the norm.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getLInfNorm()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getL1Distance",
    "paramTags": [
      {
        "comment": "Vector to which distance is requested.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "the distance between two vectors.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getL1Distance(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if v is not the same size as this vector.",
        "condition": "args[0].getDimension() != target.getDimension()",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getLInfDistance",
    "paramTags": [
      {
        "comment": "Vector to which distance is requested.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "the distance between two vectors.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getLInfDistance(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if v is not the same size as this vector.",
        "condition": "args[0].getDimension() != target.getDimension()",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getMinIndex",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the index of the minimum entry or -1 if vector length is 0 or all entries are NaN.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getMinIndex()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getMinValue",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the value of the minimum entry or NaN if all entries are NaN.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getMinValue()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getMaxIndex",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the index of the maximum entry or -1 if vector length is 0 or all entries are NaN",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getMaxIndex()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "getMaxValue",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the value of the maximum entry or NaN if all entries are NaN.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getMaxValue()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "mapMultiply",
    "paramTags": [
      {
        "comment": "Multiplication factor.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "d",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "d",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "this * d.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "mapMultiply(double d)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "mapMultiplyToSelf",
    "paramTags": [
      {
        "comment": "Multiplication factor.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "d",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "d",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "mapMultiplyToSelf(double d)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "mapSubtract",
    "paramTags": [
      {
        "comment": "Value to be subtracted.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "d",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "d",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "this - d.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "mapSubtract(double d)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "mapSubtractToSelf",
    "paramTags": [
      {
        "comment": "Value to be subtracted.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "d",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "d",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "mapSubtractToSelf(double d)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "mapDivide",
    "paramTags": [
      {
        "comment": "Value to divide by.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "d",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "d",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "this / d.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "mapDivide(double d)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "mapDivideToSelf",
    "paramTags": [
      {
        "comment": "Value to divide by.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "d",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "d",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "this.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "mapDivideToSelf(double d)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "outerProduct",
    "paramTags": [
      {
        "comment": "Vector with which outer product should be computed.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "the matrix outer product between this instance and v.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealMatrix",
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix"
    },
    "signature": "outerProduct(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "projection",
    "paramTags": [
      {
        "comment": "vector onto which instance must be projected.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "projection of the instance onto v.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "projection(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if v is not the same size as this vector.",
        "condition": "args[0].getDimension() != target.getDimension()",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if this or v is the null vector",
        "condition": "target.getNorm()==0 || args[0].getNorm()==0",
        "exception": {
          "isArray": false,
          "name": "MathArithmeticException",
          "qualifiedName": "org.apache.commons.math3.exception.MathArithmeticException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "set",
    "paramTags": [
      {
        "comment": "Single value to set for all elements.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "value",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "value",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "set(double value)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "toArray",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "an array containing a copy of the vector elements.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "double",
        "qualifiedName": "double"
      },
      "isArray": true,
      "name": "double[]",
      "qualifiedName": "double[]"
    },
    "signature": "toArray()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "unitVector",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "a unit vector pointing in direction of this vector.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "unitVector()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if the norm is zero.",
        "condition": "target.getNorm()==0",
        "exception": {
          "isArray": false,
          "name": "MathArithmeticException",
          "qualifiedName": "org.apache.commons.math3.exception.MathArithmeticException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "unitize",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "unitize()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if the norm is zero.",
        "condition": "target.getNorm()==0",
        "exception": {
          "isArray": false,
          "name": "MathArithmeticException",
          "qualifiedName": "org.apache.commons.math3.exception.MathArithmeticException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "sparseIterator",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "a sparse iterator.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Iterator",
      "qualifiedName": "java.util.Iterator"
    },
    "signature": "sparseIterator()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "iterator",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "a dense iterator.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Iterator",
      "qualifiedName": "java.util.Iterator"
    },
    "signature": "iterator()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "map",
    "paramTags": [
      {
        "comment": "Function to apply to each entry.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "function",
          "type": {
            "isArray": false,
            "name": "UnivariateFunction",
            "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "function",
        "type": {
          "isArray": false,
          "name": "UnivariateFunction",
          "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction"
        }
      }
    ],
    "returnTag": {
      "comment": "a new vector.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "map(org.apache.commons.math3.analysis.UnivariateFunction function)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "mapToSelf",
    "paramTags": [
      {
        "comment": "Function to apply to each entry.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "function",
          "type": {
            "isArray": false,
            "name": "UnivariateFunction",
            "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "function",
        "type": {
          "isArray": false,
          "name": "UnivariateFunction",
          "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction"
        }
      }
    ],
    "returnTag": {
      "comment": "a reference to this vector.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction function)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "combine",
    "paramTags": [
      {
        "comment": "Coefficient of this.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "a",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Coefficient of y.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "b",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Vector with which this is linearly combined.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "y",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "a",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "b",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "y",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "a vector containing a * this[i] + b * y[i] for all i.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "combine(double a,double b,org.apache.commons.math3.linear.RealVector y)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if y is not the same size as this vector.",
        "condition": "args[2].getDimension() != target.getDimension()",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "combineToSelf",
    "paramTags": [
      {
        "comment": "Weight of this.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "a",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Weight of y.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "b",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Vector with which this is linearly combined.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "y",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "a",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "b",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "y",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "this, with components equal to a * this[i] + b * y[i] for all i.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "combineToSelf(double a,double b,org.apache.commons.math3.linear.RealVector y)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if y is not the same size as this vector.",
        "condition": "args[2].getDimension() != target.getDimension()",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "walkInDefaultOrder",
    "paramTags": [
      {
        "comment": "the visitor to be used to process the entries of this vector",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "visitor",
          "type": {
            "isArray": false,
            "name": "RealVectorPreservingVisitor",
            "qualifiedName": "org.apache.commons.math3.linear.RealVectorPreservingVisitor"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "visitor",
        "type": {
          "isArray": false,
          "name": "RealVectorPreservingVisitor",
          "qualifiedName": "org.apache.commons.math3.linear.RealVectorPreservingVisitor"
        }
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealVectorPreservingVisitor.end() at the end of the walk",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor visitor)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "walkInDefaultOrder",
    "paramTags": [
      {
        "comment": "visitor to be used to process the entries of this vector",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "visitor",
          "type": {
            "isArray": false,
            "name": "RealVectorPreservingVisitor",
            "qualifiedName": "org.apache.commons.math3.linear.RealVectorPreservingVisitor"
          }
        }
      },
      {
        "comment": "the index of the first entry to be visited",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "start",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      },
      {
        "comment": "the index of the last entry to be visited (inclusive)",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "end",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "visitor",
        "type": {
          "isArray": false,
          "name": "RealVectorPreservingVisitor",
          "qualifiedName": "org.apache.commons.math3.linear.RealVectorPreservingVisitor"
        }
      },
      {
        "name": "start",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "end",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealVectorPreservingVisitor.end() at the end of the walk",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor visitor,int start,int end)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if end < start.",
        "condition": "args[2]<args[1]",
        "exception": {
          "isArray": false,
          "name": "NumberIsTooSmallException",
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if the indices are not valid.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "OutOfRangeException",
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "walkInOptimizedOrder",
    "paramTags": [
      {
        "comment": "the visitor to be used to process the entries of this vector",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "visitor",
          "type": {
            "isArray": false,
            "name": "RealVectorPreservingVisitor",
            "qualifiedName": "org.apache.commons.math3.linear.RealVectorPreservingVisitor"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "visitor",
        "type": {
          "isArray": false,
          "name": "RealVectorPreservingVisitor",
          "qualifiedName": "org.apache.commons.math3.linear.RealVectorPreservingVisitor"
        }
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealVectorPreservingVisitor.end() at the end of the walk",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor visitor)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "walkInOptimizedOrder",
    "paramTags": [
      {
        "comment": "visitor to be used to process the entries of this vector",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "visitor",
          "type": {
            "isArray": false,
            "name": "RealVectorPreservingVisitor",
            "qualifiedName": "org.apache.commons.math3.linear.RealVectorPreservingVisitor"
          }
        }
      },
      {
        "comment": "the index of the first entry to be visited",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "start",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      },
      {
        "comment": "the index of the last entry to be visited (inclusive)",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "end",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "visitor",
        "type": {
          "isArray": false,
          "name": "RealVectorPreservingVisitor",
          "qualifiedName": "org.apache.commons.math3.linear.RealVectorPreservingVisitor"
        }
      },
      {
        "name": "start",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "end",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealVectorPreservingVisitor.end() at the end of the walk",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor visitor,int start,int end)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if end < start.",
        "condition": "args[2]<args[1]",
        "exception": {
          "isArray": false,
          "name": "NumberIsTooSmallException",
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if the indices are not valid.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "OutOfRangeException",
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "walkInDefaultOrder",
    "paramTags": [
      {
        "comment": "the visitor to be used to process and modify the entries of this vector",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "visitor",
          "type": {
            "isArray": false,
            "name": "RealVectorChangingVisitor",
            "qualifiedName": "org.apache.commons.math3.linear.RealVectorChangingVisitor"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "visitor",
        "type": {
          "isArray": false,
          "name": "RealVectorChangingVisitor",
          "qualifiedName": "org.apache.commons.math3.linear.RealVectorChangingVisitor"
        }
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealVectorChangingVisitor.end() at the end of the walk",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor visitor)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "walkInDefaultOrder",
    "paramTags": [
      {
        "comment": "visitor to be used to process the entries of this vector",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "visitor",
          "type": {
            "isArray": false,
            "name": "RealVectorChangingVisitor",
            "qualifiedName": "org.apache.commons.math3.linear.RealVectorChangingVisitor"
          }
        }
      },
      {
        "comment": "the index of the first entry to be visited",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "start",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      },
      {
        "comment": "the index of the last entry to be visited (inclusive)",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "end",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "visitor",
        "type": {
          "isArray": false,
          "name": "RealVectorChangingVisitor",
          "qualifiedName": "org.apache.commons.math3.linear.RealVectorChangingVisitor"
        }
      },
      {
        "name": "start",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "end",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealVectorChangingVisitor.end() at the end of the walk",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor visitor,int start,int end)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if end < start.",
        "condition": "args[2]<args[1]",
        "exception": {
          "isArray": false,
          "name": "NumberIsTooSmallException",
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if the indices are not valid.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "OutOfRangeException",
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "walkInOptimizedOrder",
    "paramTags": [
      {
        "comment": "the visitor to be used to process the entries of this vector",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "visitor",
          "type": {
            "isArray": false,
            "name": "RealVectorChangingVisitor",
            "qualifiedName": "org.apache.commons.math3.linear.RealVectorChangingVisitor"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "visitor",
        "type": {
          "isArray": false,
          "name": "RealVectorChangingVisitor",
          "qualifiedName": "org.apache.commons.math3.linear.RealVectorChangingVisitor"
        }
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealVectorChangingVisitor.end() at the end of the walk",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor visitor)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "walkInOptimizedOrder",
    "paramTags": [
      {
        "comment": "visitor to be used to process the entries of this vector",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "visitor",
          "type": {
            "isArray": false,
            "name": "RealVectorChangingVisitor",
            "qualifiedName": "org.apache.commons.math3.linear.RealVectorChangingVisitor"
          }
        }
      },
      {
        "comment": "the index of the first entry to be visited",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "start",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      },
      {
        "comment": "the index of the last entry to be visited (inclusive)",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "end",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "visitor",
        "type": {
          "isArray": false,
          "name": "RealVectorChangingVisitor",
          "qualifiedName": "org.apache.commons.math3.linear.RealVectorChangingVisitor"
        }
      },
      {
        "name": "start",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "end",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealVectorChangingVisitor.end() at the end of the walk",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor visitor,int start,int end)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if end < start.",
        "condition": "args[2]<args[1]",
        "exception": {
          "isArray": false,
          "name": "NumberIsTooSmallException",
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if the indices are not valid.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "OutOfRangeException",
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "equals",
    "paramTags": [
      {
        "comment": "Object to test for equality.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "other",
          "type": {
            "isArray": false,
            "name": "Object",
            "qualifiedName": "java.lang.Object"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "other",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      }
    ],
    "returnTag": {
      "comment": "true if two vector objects are equal, false if other is null, not an instance of RealVector, or not equal to this RealVector instance.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "equals(java.lang.Object other)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if this method is not overridden.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "MathUnsupportedOperationException",
          "qualifiedName": "org.apache.commons.math3.exception.MathUnsupportedOperationException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "hashCode",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "hashCode()",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": [
      {
        "comment": "if this method is not overridden.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "MathUnsupportedOperationException",
          "qualifiedName": "org.apache.commons.math3.exception.MathUnsupportedOperationException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "isVarArgs": false,
    "name": "unmodifiableRealVector",
    "paramTags": [
      {
        "comment": "Vector for which an unmodifiable view is to be returned.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "RealVector",
            "qualifiedName": "org.apache.commons.math3.linear.RealVector"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "RealVector",
          "qualifiedName": "org.apache.commons.math3.linear.RealVector"
        }
      }
    ],
    "returnTag": {
      "comment": "an unmodifiable view of v.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "RealVector",
      "qualifiedName": "org.apache.commons.math3.linear.RealVector"
    },
    "signature": "unmodifiableRealVector(org.apache.commons.math3.linear.RealVector v)",
    "targetClass": "org.apache.commons.math3.linear.RealVector",
    "throwsTags": []
  }
]
