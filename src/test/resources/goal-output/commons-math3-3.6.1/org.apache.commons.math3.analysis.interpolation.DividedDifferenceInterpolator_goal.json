[
  {
    "signature": "interpolate(double[] x,double[] y)",
    "name": "interpolate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator",
      "name": "DividedDifferenceInterpolator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm",
      "name": "PolynomialFunctionNewtonForm",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "y"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "x"
        },
        "comment": "Interpolating points array.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "y"
        },
        "comment": "Interpolating values array.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a function which interpolates the dataset.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array lengths are different.",
        "kind": "THROWS",
        "condition": "args[0].length != args[1].length"
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the number of points is less than 2.",
        "kind": "THROWS",
        "condition": "args[0].length<2"
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
          "name": "NonMonotonicSequenceException",
          "isArray": false
        },
        "codeTags": [
          "x"
        ],
        "comment": "if x is not sorted in strictly increasing order.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "computeDividedDifference(double[] x,double[] y)",
    "name": "computeDividedDifference",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator",
      "name": "DividedDifferenceInterpolator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "y"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "x"
        },
        "comment": "Interpolating points array.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "y"
        },
        "comment": "Interpolating values array.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a fresh copy of the divided difference array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array lengths are different.",
        "kind": "THROWS",
        "condition": "args[0].length != args[1].length"
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the number of points is less than 2.",
        "kind": "THROWS",
        "condition": "args[0].length<2"
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
          "name": "NonMonotonicSequenceException",
          "isArray": false
        },
        "codeTags": [
          "x"
        ],
        "comment": "if x is not sorted in strictly increasing order.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]
