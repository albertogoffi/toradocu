[
  {
    "signature": "verify(boolean expression)",
    "name": "verify",
    "containingClass": {
      "qualifiedName": "com.google.common.base.Verify",
      "name": "Verify",
      "isArray": false
    },
    "targetClass": "com.google.common.base.Verify",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "expression"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "com.google.common.base.VerifyException",
          "name": "VerifyException",
          "isArray": false
        },
        "codeTags": [
          "expression",
          "false"
        ],
        "comment": "if expression is false",
        "kind": "THROWS",
        "condition": "args[0]==false"
      }
    ]
  },
  {
    "signature": "verify(boolean expression,java.lang.String errorMessageTemplate,java.lang.Object[] errorMessageArgs)",
    "name": "verify",
    "containingClass": {
      "qualifiedName": "com.google.common.base.Verify",
      "name": "Verify",
      "isArray": false
    },
    "targetClass": "com.google.common.base.Verify",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "expression"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "errorMessageTemplate",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "errorMessageArgs",
        "nullable": true
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "expression"
        },
        "comment": "a boolean expression",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "errorMessageTemplate",
          "nullable": true
        },
        "comment": "a template for the exception message should the check fail. The message is formed by replacing each %s placeholder in the template with an argument. These are matched by position - the first %s gets errorMessageArgs[0], etc. Unmatched arguments will be appended to the formatted message in square braces. Unmatched placeholders will be left as-is.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "errorMessageArgs",
          "nullable": true
        },
        "comment": "the arguments to be substituted into the message template. Arguments are converted to strings using String.valueOf(Object).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "com.google.common.base.VerifyException",
          "name": "VerifyException",
          "isArray": false
        },
        "codeTags": [
          "expression",
          "false"
        ],
        "comment": "if expression is false",
        "kind": "THROWS",
        "condition": "args[0]==false"
      }
    ]
  },
  {
    "signature": "verifyNotNull(java.lang.Object reference)",
    "name": "verifyNotNull",
    "containingClass": {
      "qualifiedName": "com.google.common.base.Verify",
      "name": "Verify",
      "isArray": false
    },
    "targetClass": "com.google.common.base.Verify",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "reference",
        "nullable": true
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "reference, guaranteed to be non-null, for convenience",
      "kind": "RETURN",
      "condition": "true ? result!=null"
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "com.google.common.base.VerifyException",
          "name": "VerifyException",
          "isArray": false
        },
        "codeTags": [
          "reference",
          "null"
        ],
        "comment": "if reference is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "verifyNotNull(java.lang.Object reference,java.lang.String errorMessageTemplate,java.lang.Object[] errorMessageArgs)",
    "name": "verifyNotNull",
    "containingClass": {
      "qualifiedName": "com.google.common.base.Verify",
      "name": "Verify",
      "isArray": false
    },
    "targetClass": "com.google.common.base.Verify",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "reference",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "errorMessageTemplate",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "errorMessageArgs",
        "nullable": true
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "errorMessageTemplate",
          "nullable": true
        },
        "comment": "a template for the exception message should the check fail. The message is formed by replacing each %s placeholder in the template with an argument. These are matched by position - the first %s gets errorMessageArgs[0], etc. Unmatched arguments will be appended to the formatted message in square braces. Unmatched placeholders will be left as-is.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "errorMessageArgs",
          "nullable": true
        },
        "comment": "the arguments to be substituted into the message template. Arguments are converted to strings using String.valueOf(Object).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "reference, guaranteed to be non-null, for convenience",
      "kind": "RETURN",
      "condition": "true ? result!=null"
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "com.google.common.base.VerifyException",
          "name": "VerifyException",
          "isArray": false
        },
        "codeTags": [
          "reference",
          "null"
        ],
        "comment": "if reference is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  }
]
