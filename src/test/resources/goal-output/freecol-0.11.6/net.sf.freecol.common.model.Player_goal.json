[
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "Player",
    "paramTags": [
      {
        "comment": "The enclosing Game.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "game",
          "type": {
            "isArray": false,
            "name": "Game",
            "qualifiedName": "net.sf.freecol.common.model.Game"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "game",
        "type": {
          "isArray": false,
          "name": "Game",
          "qualifiedName": "net.sf.freecol.common.model.Game"
        }
      }
    ],
    "signature": "Player(net.sf.freecol.common.model.Game game)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "Player",
    "paramTags": [
      {
        "comment": "The enclosing Game.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "game",
          "type": {
            "isArray": false,
            "name": "Game",
            "qualifiedName": "net.sf.freecol.common.model.Game"
          }
        }
      },
      {
        "comment": "An XML-element that will be used to initialize this object.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "e",
          "type": {
            "isArray": false,
            "name": "Element",
            "qualifiedName": "org.w3c.dom.Element"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "game",
        "type": {
          "isArray": false,
          "name": "Game",
          "qualifiedName": "net.sf.freecol.common.model.Game"
        }
      },
      {
        "name": "e",
        "type": {
          "isArray": false,
          "name": "Element",
          "qualifiedName": "org.w3c.dom.Element"
        }
      }
    ],
    "signature": "Player(net.sf.freecol.common.model.Game game,org.w3c.dom.Element e)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "Player",
    "paramTags": [
      {
        "comment": "The Game this object belongs to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "game",
          "type": {
            "isArray": false,
            "name": "Game",
            "qualifiedName": "net.sf.freecol.common.model.Game"
          }
        }
      },
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "game",
        "type": {
          "isArray": false,
          "name": "Game",
          "qualifiedName": "net.sf.freecol.common.model.Game"
        }
      },
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "signature": "Player(net.sf.freecol.common.model.Game game,java.lang.String id)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getName",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The name of this player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getName()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setName",
    "paramTags": [
      {
        "comment": "The new name value.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newName",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "newName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setName(java.lang.String newName)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getLabel",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A suitable StringTemplate.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "StringTemplate",
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate"
    },
    "signature": "getLabel()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isUnknownEnemy",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this player is the unknown enemy.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isUnknownEnemy()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getIndependentNationName",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The post-declaration player name.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getIndependentNationName()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setIndependentNationName",
    "paramTags": [
      {
        "comment": "The new player name.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newIndependentNationName",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "newIndependentNationName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setIndependentNationName(java.lang.String newIndependentNationName)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNewLandName",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The name of the new world as chosen by the Player, or null if none chosen yet.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getNewLandName()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isNewLandNamed",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if the new world has been named by this player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isNewLandNamed()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setNewLandName",
    "paramTags": [
      {
        "comment": "This Player's name for the new world.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newLandName",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "newLandName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setNewLandName(java.lang.String newLandName)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNameForNewLand",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A suitable name.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getNameForNewLand()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getEuropeNameKey",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A name key, or null if Europe is null.",
      "condition": "target.getEurope()==null ? null",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getEuropeNameKey()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNationResourceKey",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A nation resource key.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getNationResourceKey()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNationLabel",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A template for this nation name.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "StringTemplate",
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate"
    },
    "signature": "getNationLabel()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getCountryLabel",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A template for this country.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "StringTemplate",
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate"
    },
    "signature": "getCountryLabel()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getForcesLabel",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A suitable StringTemplate.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "StringTemplate",
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate"
    },
    "signature": "getForcesLabel()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getWaitingLabel",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A suitable StringTemplate.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "StringTemplate",
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate"
    },
    "signature": "getWaitingLabel()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getDebugName",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A short name for this player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getDebugName()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getRulerNameKey",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The ruler name key.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getRulerNameKey()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getMonarchKey",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The monarch image key.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getMonarchKey()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getMarketName",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A StringTemplate for the player market.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "StringTemplate",
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate"
    },
    "signature": "getMarketName()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getCapitalName",
    "paramTags": [
      {
        "comment": "An optional pseudo-random number source.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "random",
          "type": {
            "isArray": false,
            "name": "Random",
            "qualifiedName": "java.util.Random"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "random",
        "type": {
          "isArray": false,
          "name": "Random",
          "qualifiedName": "java.util.Random"
        }
      }
    ],
    "returnTag": {
      "comment": "The name of this players capital.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getCapitalName(java.util.Random random)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getSettlementName",
    "paramTags": [
      {
        "comment": "An optional pseudo-random number source.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "random",
          "type": {
            "isArray": false,
            "name": "Random",
            "qualifiedName": "java.util.Random"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "random",
        "type": {
          "isArray": false,
          "name": "Random",
          "qualifiedName": "java.util.Random"
        }
      }
    ],
    "returnTag": {
      "comment": "A new settlement name.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getSettlementName(java.util.Random random)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "putSettlementName",
    "paramTags": [
      {
        "comment": "A formerly suggested settlement name.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "name",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "name",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "putSettlementName(java.lang.String name)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNameForRegion",
    "paramTags": [
      {
        "comment": "The Region to name.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "region",
          "type": {
            "isArray": false,
            "name": "Region",
            "qualifiedName": "net.sf.freecol.common.model.Region"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "region",
        "type": {
          "isArray": false,
          "name": "Region",
          "qualifiedName": "net.sf.freecol.common.model.Region"
        }
      }
    ],
    "returnTag": {
      "comment": "A suitable name.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getNameForRegion(net.sf.freecol.common.model.Region region)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNameForUnit",
    "paramTags": [
      {
        "comment": "The UnitType to choose a name for.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "type",
          "type": {
            "isArray": false,
            "name": "UnitType",
            "qualifiedName": "net.sf.freecol.common.model.UnitType"
          }
        }
      },
      {
        "comment": "A pseudo-random number source.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "random",
          "type": {
            "isArray": false,
            "name": "Random",
            "qualifiedName": "java.util.Random"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "type",
        "type": {
          "isArray": false,
          "name": "UnitType",
          "qualifiedName": "net.sf.freecol.common.model.UnitType"
        }
      },
      {
        "name": "random",
        "type": {
          "isArray": false,
          "name": "Random",
          "qualifiedName": "java.util.Random"
        }
      }
    ],
    "returnTag": {
      "comment": "A name for the unit, or null if not available.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getNameForUnit(net.sf.freecol.common.model.UnitType type,java.util.Random random)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getPlayerType",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The player type.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "PlayerType",
      "qualifiedName": "net.sf.freecol.common.model.Player.PlayerType"
    },
    "signature": "getPlayerType()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setPlayerType",
    "paramTags": [
      {
        "comment": "The new player type.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "type",
          "type": {
            "isArray": false,
            "name": "PlayerType",
            "qualifiedName": "net.sf.freecol.common.model.Player.PlayerType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "type",
        "type": {
          "isArray": false,
          "name": "PlayerType",
          "qualifiedName": "net.sf.freecol.common.model.Player.PlayerType"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setPlayerType(net.sf.freecol.common.model.Player.PlayerType type)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "changePlayerType",
    "paramTags": [
      {
        "comment": "The new player type.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "type",
          "type": {
            "isArray": false,
            "name": "PlayerType",
            "qualifiedName": "net.sf.freecol.common.model.Player.PlayerType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "type",
        "type": {
          "isArray": false,
          "name": "PlayerType",
          "qualifiedName": "net.sf.freecol.common.model.Player.PlayerType"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "changePlayerType(net.sf.freecol.common.model.Player.PlayerType type)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isColonial",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this player is colonial.",
      "condition": "target.isColonial() ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isColonial()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isEuropean",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this player is European.",
      "condition": "target.isEuropean() ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isEuropean()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isIndian",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this player is a native player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isIndian()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isRebel",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this player is a rebel player.",
      "condition": "target.isRebel() ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isRebel()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isUndead",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this player is undead.",
      "condition": "target.isUndead() ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isUndead()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isREF",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this is a REF player.",
      "condition": "target.isREF() ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isREF()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isPotentialEnemy",
    "paramTags": [
      {
        "comment": "The Player to possibly declare war on.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnTag": {
      "comment": "True if this player is a potential enemy.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isPotentialEnemy(net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isPotentialFriend",
    "paramTags": [
      {
        "comment": "The Player to possibly declare peace with.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnTag": {
      "comment": "True if this player is a potential friend.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isPotentialFriend(net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNationType",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The NationType of this player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "NationType",
      "qualifiedName": "net.sf.freecol.common.model.NationType"
    },
    "signature": "getNationType()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setNationType",
    "paramTags": [
      {
        "comment": "The new NationType.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newNationType",
          "type": {
            "isArray": false,
            "name": "NationType",
            "qualifiedName": "net.sf.freecol.common.model.NationType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "newNationType",
        "type": {
          "isArray": false,
          "name": "NationType",
          "qualifiedName": "net.sf.freecol.common.model.NationType"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setNationType(net.sf.freecol.common.model.NationType newNationType)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "changeNationType",
    "paramTags": [
      {
        "comment": "The new NationType.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newNationType",
          "type": {
            "isArray": false,
            "name": "NationType",
            "qualifiedName": "net.sf.freecol.common.model.NationType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "newNationType",
        "type": {
          "isArray": false,
          "name": "NationType",
          "qualifiedName": "net.sf.freecol.common.model.NationType"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "changeNationType(net.sf.freecol.common.model.NationType newNationType)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canBuildColonies",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this player can found colonies.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "canBuildColonies()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canHaveFoundingFathers",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this player can recruit founding fathers.",
      "condition": "target.canHaveFoundingFathers() ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "canHaveFoundingFathers()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNationId",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The nation identifier.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getNationId()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNation",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The player Nation.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Nation",
      "qualifiedName": "net.sf.freecol.common.model.Nation"
    },
    "signature": "getNation()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setNation",
    "paramTags": [
      {
        "comment": "The new Nation.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newNation",
          "type": {
            "isArray": false,
            "name": "Nation",
            "qualifiedName": "net.sf.freecol.common.model.Nation"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "newNation",
        "type": {
          "isArray": false,
          "name": "Nation",
          "qualifiedName": "net.sf.freecol.common.model.Nation"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setNation(net.sf.freecol.common.model.Nation newNation)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isAdmin",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if the player is an admin.",
      "condition": "target.isAdmin() ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isAdmin()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isAI",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this is an AI player.",
      "condition": "target.isAI() ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isAI()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setAI",
    "paramTags": [
      {
        "comment": "The AI player value.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "ai",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "ai",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setAI(boolean ai)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isReady",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this Player is ready to start the game.",
      "condition": "target.isReady() ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isReady()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setReady",
    "paramTags": [
      {
        "comment": "The new readiness state.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "ready",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "ready",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setReady(boolean ready)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isDead",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this Player is dead.",
      "condition": "target.getDead() ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isDead()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getDead",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this Player is dead.",
      "condition": "target.getDead() ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "getDead()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setDead",
    "paramTags": [
      {
        "comment": "The new death state.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "dead",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "dead",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setDead(boolean dead)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getAttackedByPrivateers",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this player has been attacked by privateers.",
      "condition": "target.getAttackedByPrivateers ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "getAttackedByPrivateers()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setAttackedByPrivateers",
    "paramTags": [
      {
        "comment": "True if the player has been attacked by privateers.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "attacked",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "attacked",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setAttackedByPrivateers(boolean attacked)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isWorkForREF",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if any of our units are located in the new world or a nation is in rebellion against us.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isWorkForREF()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getRebels",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A list of nations in rebellion against us.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getRebels()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getREFPlayer",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The player, or null if this player does not have a royal expeditionary force.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "signature": "getREFPlayer()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNationColor",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The Color.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Color",
      "qualifiedName": "java.awt.Color"
    },
    "signature": "getNationColor()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getScore",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The score.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getScore()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setScore",
    "paramTags": [
      {
        "comment": "The new score.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "score",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "score",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setScore(int score)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getSpanishSuccessionScore",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A strength score.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getSpanishSuccessionScore()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getGold",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The amount of gold that this player has.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getGold()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setGold",
    "paramTags": [
      {
        "comment": "The new player gold value.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newGold",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "newGold",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setGold(int newGold)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "checkGold",
    "paramTags": [
      {
        "comment": "The purchase price to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "amount",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "amount",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the player can afford the purchase.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "checkGold(int amount)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "modifyGold",
    "paramTags": [
      {
        "comment": "The amount of gold to be added to this player.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "amount",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "amount",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "The amount of gold post-modification.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "modifyGold(int amount)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getBankrupt",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this player is bankrupt.",
      "condition": "target.getBankrupt()",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "getBankrupt()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setBankrupt",
    "paramTags": [
      {
        "comment": "The new bankruptcy value.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newBankrupt",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "newBankrupt",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setBankrupt(boolean newBankrupt)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getImmigration",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The immigration value.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getImmigration()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setImmigration",
    "paramTags": [
      {
        "comment": "The immigration value for this player.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "immigration",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "immigration",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setImmigration(int immigration)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "reduceImmigration",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "reduceImmigration()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "modifyImmigration",
    "paramTags": [
      {
        "comment": "The amount to modify the immigration by.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "amount",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "amount",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "modifyImmigration(int amount)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getImmigrationRequired",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The immigration points required to trigger emigration.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getImmigrationRequired()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setImmigrationRequired",
    "paramTags": [
      {
        "comment": "The new number of immigration points.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "immigrationRequired",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "immigrationRequired",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setImmigrationRequired(int immigrationRequired)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "updateImmigrationRequired",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "updateImmigrationRequired()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "checkEmigrate",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "Whether a new colonist should emigrate.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "checkEmigrate()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getTotalImmigrationProduction",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The total immigration production.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getTotalImmigrationProduction()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getEmigrationMessage",
    "paramTags": [
      {
        "comment": "The Unit that is migrating.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "unit",
          "type": {
            "isArray": false,
            "name": "Unit",
            "qualifiedName": "net.sf.freecol.common.model.Unit"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "unit",
        "type": {
          "isArray": false,
          "name": "Unit",
          "qualifiedName": "net.sf.freecol.common.model.Unit"
        }
      }
    ],
    "returnTag": {
      "comment": "A suitable ModelMessage.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "ModelMessage",
      "qualifiedName": "net.sf.freecol.common.model.ModelMessage"
    },
    "signature": "getEmigrationMessage(net.sf.freecol.common.model.Unit unit)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getLiberty",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The amount of liberty points.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getLiberty()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setLiberty",
    "paramTags": [
      {
        "comment": "The new amount of liberty.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "liberty",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "liberty",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setLiberty(int liberty)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "modifyLiberty",
    "paramTags": [
      {
        "comment": "The amount of liberty to add.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "amount",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "amount",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "modifyLiberty(int amount)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "recalculateBellsBonus",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if a bells bonus was set.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "recalculateBellsBonus()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getLibertyProductionNextTurn",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The total amount of liberty this Player's Colonys will make next turn.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getLibertyProductionNextTurn()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getSoL",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The total percentage of rebels in all this player's colonies.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getSoL()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getFathers",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A set of FoundingFathers in congress.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Set",
      "qualifiedName": "java.util.Set"
    },
    "signature": "getFathers()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasFather",
    "paramTags": [
      {
        "comment": "The FoundingFather to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "someFather",
          "type": {
            "isArray": false,
            "name": "FoundingFather",
            "qualifiedName": "net.sf.freecol.common.model.FoundingFather"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "someFather",
        "type": {
          "isArray": false,
          "name": "FoundingFather",
          "qualifiedName": "net.sf.freecol.common.model.FoundingFather"
        }
      }
    ],
    "returnTag": {
      "comment": "Whether this player has this Founding father",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasFather(net.sf.freecol.common.model.FoundingFather someFather)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getFatherCount",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The number of founding fathers in this players congress",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getFatherCount()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "addFather",
    "paramTags": [
      {
        "comment": "The FoundingFather to add.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "father",
          "type": {
            "isArray": false,
            "name": "FoundingFather",
            "qualifiedName": "net.sf.freecol.common.model.FoundingFather"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "father",
        "type": {
          "isArray": false,
          "name": "FoundingFather",
          "qualifiedName": "net.sf.freecol.common.model.FoundingFather"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "addFather(net.sf.freecol.common.model.FoundingFather father)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getCurrentFather",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The current FoundingFather, or null if there is none.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FoundingFather",
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather"
    },
    "signature": "getCurrentFather()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setCurrentFather",
    "paramTags": [
      {
        "comment": "The FoundingFather to recruit.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "someFather",
          "type": {
            "isArray": false,
            "name": "FoundingFather",
            "qualifiedName": "net.sf.freecol.common.model.FoundingFather"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "someFather",
        "type": {
          "isArray": false,
          "name": "FoundingFather",
          "qualifiedName": "net.sf.freecol.common.model.FoundingFather"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setCurrentFather(net.sf.freecol.common.model.FoundingFather someFather)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getOfferedFathers",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A list of the current offered FoundingFathers.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getOfferedFathers()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "clearOfferedFathers",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "clearOfferedFathers()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setOfferedFathers",
    "paramTags": [
      {
        "comment": "A list of FoundingFathers to offer.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fathers",
          "type": {
            "isArray": false,
            "name": "List",
            "qualifiedName": "java.util.List"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "fathers",
        "type": {
          "isArray": false,
          "name": "List",
          "qualifiedName": "java.util.List"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setOfferedFathers(java.util.List fathers)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getRemainingFoundingFatherCost",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "How many more liberty points the Player needs in order to recruit the next FoundingFather.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getRemainingFoundingFatherCost()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getTotalFoundingFatherCost",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "Total number of liberty points the Player needs to recruit the next FoundingFather.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getTotalFoundingFatherCost()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getElectionTurns",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A map of father id to Turns.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Map",
      "qualifiedName": "java.util.Map"
    },
    "signature": "getElectionTurns()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "checkDeclareIndependence",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "Null if there is no barrier to declaration, otherwise a StringTemplate explaining the problem.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "StringTemplate",
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate"
    },
    "signature": "checkDeclareIndependence()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "calculateStrength",
    "paramTags": [
      {
        "comment": "If true consider naval units, otherwise land units.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "naval",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "naval",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnTag": {
      "comment": "A measure of naval or land offensive power.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "calculateStrength(boolean naval)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getRebelStrengthRatio",
    "paramTags": [
      {
        "comment": "If true consider naval units, otherwise land units.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "naval",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "naval",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnTag": {
      "comment": "A measure of the military viability of this player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getRebelStrengthRatio(boolean naval)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getTax",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The current tax.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getTax()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setTax",
    "paramTags": [
      {
        "comment": "The new tax amount.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "amount",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "amount",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setTax(int amount)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getMarket",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The Market.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Market",
      "qualifiedName": "net.sf.freecol.common.model.Market"
    },
    "signature": "getMarket()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "reinitialiseMarket",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "reinitialiseMarket()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getLastSale",
    "paramTags": [
      {
        "comment": "The Location of the sale.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "where",
          "type": {
            "isArray": false,
            "name": "Location",
            "qualifiedName": "net.sf.freecol.common.model.Location"
          }
        }
      },
      {
        "comment": "The GoodsType sold.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "what",
          "type": {
            "isArray": false,
            "name": "GoodsType",
            "qualifiedName": "net.sf.freecol.common.model.GoodsType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "where",
        "type": {
          "isArray": false,
          "name": "Location",
          "qualifiedName": "net.sf.freecol.common.model.Location"
        }
      },
      {
        "name": "what",
        "type": {
          "isArray": false,
          "name": "GoodsType",
          "qualifiedName": "net.sf.freecol.common.model.GoodsType"
        }
      }
    ],
    "returnTag": {
      "comment": "An appropriate LastSaleData record, or null if no appropriate sale can be found.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "LastSale",
      "qualifiedName": "net.sf.freecol.common.model.LastSale"
    },
    "signature": "getLastSale(net.sf.freecol.common.model.Location where,net.sf.freecol.common.model.GoodsType what)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "addLastSale",
    "paramTags": [
      {
        "comment": "The LastSale to save.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "sale",
          "type": {
            "isArray": false,
            "name": "LastSale",
            "qualifiedName": "net.sf.freecol.common.model.LastSale"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "sale",
        "type": {
          "isArray": false,
          "name": "LastSale",
          "qualifiedName": "net.sf.freecol.common.model.LastSale"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "addLastSale(net.sf.freecol.common.model.LastSale sale)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getLastSaleString",
    "paramTags": [
      {
        "comment": "The Location of the sale.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "where",
          "type": {
            "isArray": false,
            "name": "Location",
            "qualifiedName": "net.sf.freecol.common.model.Location"
          }
        }
      },
      {
        "comment": "The GoodsType sold.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "what",
          "type": {
            "isArray": false,
            "name": "GoodsType",
            "qualifiedName": "net.sf.freecol.common.model.GoodsType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "where",
        "type": {
          "isArray": false,
          "name": "Location",
          "qualifiedName": "net.sf.freecol.common.model.Location"
        }
      },
      {
        "name": "what",
        "type": {
          "isArray": false,
          "name": "GoodsType",
          "qualifiedName": "net.sf.freecol.common.model.GoodsType"
        }
      }
    ],
    "returnTag": {
      "comment": "An abbreviation for the sale price, or null if none found.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getLastSaleString(net.sf.freecol.common.model.Location where,net.sf.freecol.common.model.GoodsType what)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getArrears",
    "paramTags": [
      {
        "comment": "The GoodsType to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "type",
          "type": {
            "isArray": false,
            "name": "GoodsType",
            "qualifiedName": "net.sf.freecol.common.model.GoodsType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "type",
        "type": {
          "isArray": false,
          "name": "GoodsType",
          "qualifiedName": "net.sf.freecol.common.model.GoodsType"
        }
      }
    ],
    "returnTag": {
      "comment": "The arrears due for this type of goods.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getArrears(net.sf.freecol.common.model.GoodsType type)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canTrade",
    "paramTags": [
      {
        "comment": "The GoodsType to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "type",
          "type": {
            "isArray": false,
            "name": "GoodsType",
            "qualifiedName": "net.sf.freecol.common.model.GoodsType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "type",
        "type": {
          "isArray": false,
          "name": "GoodsType",
          "qualifiedName": "net.sf.freecol.common.model.GoodsType"
        }
      }
    ],
    "returnTag": {
      "comment": "True if there are no arrears due for this type of goods.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "canTrade(net.sf.freecol.common.model.GoodsType type)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canTrade",
    "paramTags": [
      {
        "comment": "The GoodsType to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "type",
          "type": {
            "isArray": false,
            "name": "GoodsType",
            "qualifiedName": "net.sf.freecol.common.model.GoodsType"
          }
        }
      },
      {
        "comment": "The way the goods are traded (Europe OR Custom)",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "access",
          "type": {
            "isArray": false,
            "name": "Access",
            "qualifiedName": "net.sf.freecol.common.model.Market.Access"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "type",
        "type": {
          "isArray": false,
          "name": "GoodsType",
          "qualifiedName": "net.sf.freecol.common.model.GoodsType"
        }
      },
      {
        "name": "access",
        "type": {
          "isArray": false,
          "name": "Access",
          "qualifiedName": "net.sf.freecol.common.model.Market.Access"
        }
      }
    ],
    "returnTag": {
      "comment": "True if type of goods can be traded.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "canTrade(net.sf.freecol.common.model.GoodsType type,net.sf.freecol.common.model.Market.Access access)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getSales",
    "paramTags": [
      {
        "comment": "The GoodsType to query.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "goodsType",
          "type": {
            "isArray": false,
            "name": "GoodsType",
            "qualifiedName": "net.sf.freecol.common.model.GoodsType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "goodsType",
        "type": {
          "isArray": false,
          "name": "GoodsType",
          "qualifiedName": "net.sf.freecol.common.model.GoodsType"
        }
      }
    ],
    "returnTag": {
      "comment": "The current sales.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getSales(net.sf.freecol.common.model.GoodsType goodsType)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "modifySales",
    "paramTags": [
      {
        "comment": "The GoodsType to modify.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "goodsType",
          "type": {
            "isArray": false,
            "name": "GoodsType",
            "qualifiedName": "net.sf.freecol.common.model.GoodsType"
          }
        }
      },
      {
        "comment": "The new sales.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "amount",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "goodsType",
        "type": {
          "isArray": false,
          "name": "GoodsType",
          "qualifiedName": "net.sf.freecol.common.model.GoodsType"
        }
      },
      {
        "name": "amount",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "modifySales(net.sf.freecol.common.model.GoodsType goodsType,int amount)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasTraded",
    "paramTags": [
      {
        "comment": "The GoodsType to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "goodsType",
          "type": {
            "isArray": false,
            "name": "GoodsType",
            "qualifiedName": "net.sf.freecol.common.model.GoodsType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "goodsType",
        "type": {
          "isArray": false,
          "name": "GoodsType",
          "qualifiedName": "net.sf.freecol.common.model.GoodsType"
        }
      }
    ],
    "returnTag": {
      "comment": "Whether these goods have been traded.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasTraded(net.sf.freecol.common.model.GoodsType goodsType)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getMostValuableGoods",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A goods object, or null if nothing suitable found.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Goods",
      "qualifiedName": "net.sf.freecol.common.model.Goods"
    },
    "signature": "getMostValuableGoods()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getIncomeBeforeTaxes",
    "paramTags": [
      {
        "comment": "The GoodsType to query.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "goodsType",
          "type": {
            "isArray": false,
            "name": "GoodsType",
            "qualifiedName": "net.sf.freecol.common.model.GoodsType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "goodsType",
        "type": {
          "isArray": false,
          "name": "GoodsType",
          "qualifiedName": "net.sf.freecol.common.model.GoodsType"
        }
      }
    ],
    "returnTag": {
      "comment": "The current incomeBeforeTaxes.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getIncomeBeforeTaxes(net.sf.freecol.common.model.GoodsType goodsType)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "modifyIncomeBeforeTaxes",
    "paramTags": [
      {
        "comment": "The GoodsType to modify.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "goodsType",
          "type": {
            "isArray": false,
            "name": "GoodsType",
            "qualifiedName": "net.sf.freecol.common.model.GoodsType"
          }
        }
      },
      {
        "comment": "The new incomeBeforeTaxes.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "amount",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "goodsType",
        "type": {
          "isArray": false,
          "name": "GoodsType",
          "qualifiedName": "net.sf.freecol.common.model.GoodsType"
        }
      },
      {
        "name": "amount",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "modifyIncomeBeforeTaxes(net.sf.freecol.common.model.GoodsType goodsType,int amount)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getIncomeAfterTaxes",
    "paramTags": [
      {
        "comment": "The GoodsType to query.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "goodsType",
          "type": {
            "isArray": false,
            "name": "GoodsType",
            "qualifiedName": "net.sf.freecol.common.model.GoodsType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "goodsType",
        "type": {
          "isArray": false,
          "name": "GoodsType",
          "qualifiedName": "net.sf.freecol.common.model.GoodsType"
        }
      }
    ],
    "returnTag": {
      "comment": "The current incomeAfterTaxes.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getIncomeAfterTaxes(net.sf.freecol.common.model.GoodsType goodsType)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "modifyIncomeAfterTaxes",
    "paramTags": [
      {
        "comment": "The GoodsType to modify.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "goodsType",
          "type": {
            "isArray": false,
            "name": "GoodsType",
            "qualifiedName": "net.sf.freecol.common.model.GoodsType"
          }
        }
      },
      {
        "comment": "The new incomeAfterTaxes.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "amount",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "goodsType",
        "type": {
          "isArray": false,
          "name": "GoodsType",
          "qualifiedName": "net.sf.freecol.common.model.GoodsType"
        }
      },
      {
        "name": "amount",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "modifyIncomeAfterTaxes(net.sf.freecol.common.model.GoodsType goodsType,int amount)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getEurope",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The Europe object, or null if the player is not European or indpendent.",
      "condition": "(target.isEuropean()) == false ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Europe",
      "qualifiedName": "net.sf.freecol.common.model.Europe"
    },
    "signature": "getEurope()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setEurope",
    "paramTags": [
      {
        "comment": "The new Europe object.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "europe",
          "type": {
            "isArray": false,
            "name": "Europe",
            "qualifiedName": "net.sf.freecol.common.model.Europe"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "europe",
        "type": {
          "isArray": false,
          "name": "Europe",
          "qualifiedName": "net.sf.freecol.common.model.Europe"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setEurope(net.sf.freecol.common.model.Europe europe)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canMoveToEurope",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this player has an instance of Europe.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "canMoveToEurope()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getRecruitPrice",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The price of a single recruit in Europe.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getRecruitPrice()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getPrice",
    "paramTags": [
      {
        "comment": "The proposed AbstractUnit.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "au",
          "type": {
            "isArray": false,
            "name": "AbstractUnit",
            "qualifiedName": "net.sf.freecol.common.model.AbstractUnit"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "au",
        "type": {
          "isArray": false,
          "name": "AbstractUnit",
          "qualifiedName": "net.sf.freecol.common.model.AbstractUnit"
        }
      }
    ],
    "returnTag": {
      "comment": "The price for the unit.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getPrice(net.sf.freecol.common.model.AbstractUnit au)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getMonarch",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The Monarch object this player has, or null if there is no monarch.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Monarch",
      "qualifiedName": "net.sf.freecol.common.model.Monarch"
    },
    "signature": "getMonarch()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setMonarch",
    "paramTags": [
      {
        "comment": "The new Monarch object.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "monarch",
          "type": {
            "isArray": false,
            "name": "Monarch",
            "qualifiedName": "net.sf.freecol.common.model.Monarch"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "monarch",
        "type": {
          "isArray": false,
          "name": "Monarch",
          "qualifiedName": "net.sf.freecol.common.model.Monarch"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setMonarch(net.sf.freecol.common.model.Monarch monarch)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasUnit",
    "paramTags": [
      {
        "comment": "The Unit to test.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "unit",
          "type": {
            "isArray": false,
            "name": "Unit",
            "qualifiedName": "net.sf.freecol.common.model.Unit"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "unit",
        "type": {
          "isArray": false,
          "name": "Unit",
          "qualifiedName": "net.sf.freecol.common.model.Unit"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the player has the unit.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasUnit(net.sf.freecol.common.model.Unit unit)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getUnits",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A list of the player Units.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getUnits()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getUnitByName",
    "paramTags": [
      {
        "comment": "The name of the unit.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "name",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "name",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "The unit with the given name, or null if none found.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Unit",
      "qualifiedName": "net.sf.freecol.common.model.Unit"
    },
    "signature": "getUnitByName(java.lang.String name)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getUnitIterator",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "An Iterator over the player Units.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Iterator",
      "qualifiedName": "java.util.Iterator"
    },
    "signature": "getUnitIterator()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "addUnit",
    "paramTags": [
      {
        "comment": "The new Unit value.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newUnit",
          "type": {
            "isArray": false,
            "name": "Unit",
            "qualifiedName": "net.sf.freecol.common.model.Unit"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "newUnit",
        "type": {
          "isArray": false,
          "name": "Unit",
          "qualifiedName": "net.sf.freecol.common.model.Unit"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the units container changed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "addUnit(net.sf.freecol.common.model.Unit newUnit)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "removeUnit",
    "paramTags": [
      {
        "comment": "The Unit to remove.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "oldUnit",
          "type": {
            "isArray": false,
            "name": "Unit",
            "qualifiedName": "net.sf.freecol.common.model.Unit"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "oldUnit",
        "type": {
          "isArray": false,
          "name": "Unit",
          "qualifiedName": "net.sf.freecol.common.model.Unit"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the units container changed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "removeUnit(net.sf.freecol.common.model.Unit oldUnit)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getCarriersForUnit",
    "paramTags": [
      {
        "comment": "The Unit to carry.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "unit",
          "type": {
            "isArray": false,
            "name": "Unit",
            "qualifiedName": "net.sf.freecol.common.model.Unit"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "unit",
        "type": {
          "isArray": false,
          "name": "Unit",
          "qualifiedName": "net.sf.freecol.common.model.Unit"
        }
      }
    ],
    "returnTag": {
      "comment": "A list of suitable carriers.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getCarriersForUnit(net.sf.freecol.common.model.Unit unit)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getUnitCount",
    "paramTags": [
      {
        "comment": "If true, count naval units, else count land units.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "naval",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "naval",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnTag": {
      "comment": "The number of units.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getUnitCount(boolean naval)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNumberOfKingLandUnits",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The number of units",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getNumberOfKingLandUnits()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasUnitType",
    "paramTags": [
      {
        "comment": "The identifier for the unit type to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "typeId",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "typeId",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "True if this player owns at least one of the specified unit type.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasUnitType(java.lang.String typeId)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNextActiveUnit",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A Unit that can be made active.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Unit",
      "qualifiedName": "net.sf.freecol.common.model.Unit"
    },
    "signature": "getNextActiveUnit()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setNextActiveUnit",
    "paramTags": [
      {
        "comment": "A Unit to make the next one to be active.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "unit",
          "type": {
            "isArray": false,
            "name": "Unit",
            "qualifiedName": "net.sf.freecol.common.model.Unit"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "unit",
        "type": {
          "isArray": false,
          "name": "Unit",
          "qualifiedName": "net.sf.freecol.common.model.Unit"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the operation succeeded.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "setNextActiveUnit(net.sf.freecol.common.model.Unit unit)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasNextActiveUnit",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if there is a potential active unit.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasNextActiveUnit()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNextGoingToUnit",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A Unit that can be made active.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Unit",
      "qualifiedName": "net.sf.freecol.common.model.Unit"
    },
    "signature": "getNextGoingToUnit()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setNextGoingToUnit",
    "paramTags": [
      {
        "comment": "A Unit to make the next one to be active.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "unit",
          "type": {
            "isArray": false,
            "name": "Unit",
            "qualifiedName": "net.sf.freecol.common.model.Unit"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "unit",
        "type": {
          "isArray": false,
          "name": "Unit",
          "qualifiedName": "net.sf.freecol.common.model.Unit"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the operation succeeded.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "setNextGoingToUnit(net.sf.freecol.common.model.Unit unit)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasNextGoingToUnit",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if there is a unit with a destination.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasNextGoingToUnit()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNextTradeRouteUnit",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A Unit that has a trade route to follow.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Unit",
      "qualifiedName": "net.sf.freecol.common.model.Unit"
    },
    "signature": "getNextTradeRouteUnit()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasNextTradeRouteUnit",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if there is a unit with a trade route.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasNextTradeRouteUnit()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "resetIterators",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "resetIterators()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getTradeRoutes",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The list of TradeRoutes for this player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getTradeRoutes()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getTradeRouteByName",
    "paramTags": [
      {
        "comment": "The trade route name.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "name",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "name",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "TradeRoute",
      "qualifiedName": "net.sf.freecol.common.model.TradeRoute"
    },
    "signature": "getTradeRouteByName(java.lang.String name)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setTradeRoutes",
    "paramTags": [
      {
        "comment": "The new list of TradeRoutes.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newTradeRoutes",
          "type": {
            "isArray": false,
            "name": "List",
            "qualifiedName": "java.util.List"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "newTradeRoutes",
        "type": {
          "isArray": false,
          "name": "List",
          "qualifiedName": "java.util.List"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setTradeRoutes(java.util.List newTradeRoutes)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNameForTradeRoute",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getNameForTradeRoute()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "addOwnable",
    "paramTags": [
      {
        "comment": "The Ownable to add.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "o",
          "type": {
            "isArray": false,
            "name": "Ownable",
            "qualifiedName": "net.sf.freecol.common.model.Ownable"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "o",
        "type": {
          "isArray": false,
          "name": "Ownable",
          "qualifiedName": "net.sf.freecol.common.model.Ownable"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the container changed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "addOwnable(net.sf.freecol.common.model.Ownable o)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "removeOwnable",
    "paramTags": [
      {
        "comment": "The Ownable to remove.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "o",
          "type": {
            "isArray": false,
            "name": "Ownable",
            "qualifiedName": "net.sf.freecol.common.model.Ownable"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "o",
        "type": {
          "isArray": false,
          "name": "Ownable",
          "qualifiedName": "net.sf.freecol.common.model.Ownable"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the container changed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "removeOwnable(net.sf.freecol.common.model.Ownable o)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getSettlements",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The list of Settlements this player owns.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getSettlements()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNumberOfSettlements",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The number of settlements this player has.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getNumberOfSettlements()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNumberOfPorts",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The number of port settlements this player has.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getNumberOfPorts()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getPorts",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A list of port Colonys.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getPorts()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasSettlement",
    "paramTags": [
      {
        "comment": "The Settlement to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "settlement",
          "type": {
            "isArray": false,
            "name": "Settlement",
            "qualifiedName": "net.sf.freecol.common.model.Settlement"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "settlement",
        "type": {
          "isArray": false,
          "name": "Settlement",
          "qualifiedName": "net.sf.freecol.common.model.Settlement"
        }
      }
    ],
    "returnTag": {
      "comment": "True if this Player owns the given Settlement.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasSettlement(net.sf.freecol.common.model.Settlement settlement)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "addSettlement",
    "paramTags": [
      {
        "comment": "The Settlement to add.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "settlement",
          "type": {
            "isArray": false,
            "name": "Settlement",
            "qualifiedName": "net.sf.freecol.common.model.Settlement"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "settlement",
        "type": {
          "isArray": false,
          "name": "Settlement",
          "qualifiedName": "net.sf.freecol.common.model.Settlement"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the settlements container changed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "addSettlement(net.sf.freecol.common.model.Settlement settlement)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "removeSettlement",
    "paramTags": [
      {
        "comment": "The Settlement to remove.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "settlement",
          "type": {
            "isArray": false,
            "name": "Settlement",
            "qualifiedName": "net.sf.freecol.common.model.Settlement"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "settlement",
        "type": {
          "isArray": false,
          "name": "Settlement",
          "qualifiedName": "net.sf.freecol.common.model.Settlement"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the settlements container changed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "removeSettlement(net.sf.freecol.common.model.Settlement settlement)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getColoniesPopulation",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The sum of the units currently working in the colonies.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getColoniesPopulation()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getColonyByName",
    "paramTags": [
      {
        "comment": "The name of the Colony.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "name",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "name",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "The Colony with the given name, or null if not found.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Colony",
      "qualifiedName": "net.sf.freecol.common.model.Colony"
    },
    "signature": "getColonyByName(java.lang.String name)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getIndianSettlementByName",
    "paramTags": [
      {
        "comment": "The name of the IndianSettlement.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "name",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "name",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "The IndianSettlement with the given name, or null if not found.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "IndianSettlement",
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement"
    },
    "signature": "getIndianSettlementByName(java.lang.String name)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getColonies",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A fresh list of the Colonys this player owns.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getColonies()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getSortedColonies",
    "paramTags": [
      {
        "comment": "A comparator to operate on the colony list.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "c",
          "type": {
            "isArray": false,
            "name": "Comparator",
            "qualifiedName": "java.util.Comparator"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "c",
        "type": {
          "isArray": false,
          "name": "Comparator",
          "qualifiedName": "java.util.Comparator"
        }
      }
    ],
    "returnTag": {
      "comment": "A fresh list of the Colonys this player owns.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getSortedColonies(java.util.Comparator c)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getIndianSettlements",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The indian settlements this player owns.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getIndianSettlements()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getSettlementByName",
    "paramTags": [
      {
        "comment": "The name of the Settlement.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "name",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "name",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "The Settlement, or null if not found.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Settlement",
      "qualifiedName": "net.sf.freecol.common.model.Settlement"
    },
    "signature": "getSettlementByName(java.lang.String name)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getClosestPortForEurope",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "This players closest port.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Settlement",
      "qualifiedName": "net.sf.freecol.common.model.Settlement"
    },
    "signature": "getClosestPortForEurope()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getModelMessages",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A copy of the ModelMessages for this Player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getModelMessages()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNewModelMessages",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "all The new ModelMessages for this Player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getNewModelMessages()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "addModelMessage",
    "paramTags": [
      {
        "comment": "The ModelMessage to add.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "modelMessage",
          "type": {
            "isArray": false,
            "name": "ModelMessage",
            "qualifiedName": "net.sf.freecol.common.model.ModelMessage"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "modelMessage",
        "type": {
          "isArray": false,
          "name": "ModelMessage",
          "qualifiedName": "net.sf.freecol.common.model.ModelMessage"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "addModelMessage(net.sf.freecol.common.model.ModelMessage modelMessage)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "refilterModelMessages",
    "paramTags": [
      {
        "comment": "The OptionGroup for message display to enforce.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "options",
          "type": {
            "isArray": false,
            "name": "OptionGroup",
            "qualifiedName": "net.sf.freecol.common.option.OptionGroup"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "options",
        "type": {
          "isArray": false,
          "name": "OptionGroup",
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "refilterModelMessages(net.sf.freecol.common.option.OptionGroup options)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "removeDisplayedModelMessages",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "removeDisplayedModelMessages()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "clearModelMessages",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "clearModelMessages()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "divertModelMessages",
    "paramTags": [
      {
        "comment": "The source field that has become invalid.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "source",
          "type": {
            "isArray": false,
            "name": "FreeColGameObject",
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
          }
        }
      },
      {
        "comment": "A new source field to replace the old with, or if null then remove the message",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newSource",
          "type": {
            "isArray": false,
            "name": "FreeColGameObject",
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "source",
        "type": {
          "isArray": false,
          "name": "FreeColGameObject",
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
        }
      },
      {
        "name": "newSource",
        "type": {
          "isArray": false,
          "name": "FreeColGameObject",
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "divertModelMessages(net.sf.freecol.common.model.FreeColGameObject source,net.sf.freecol.common.model.FreeColGameObject newSource)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "addStartGameMessage",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "addStartGameMessage()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getHistory",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The list of HistoryEvents for this player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getHistory()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "addHistory",
    "paramTags": [
      {
        "comment": "The HistoryEvent to add.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "event",
          "type": {
            "isArray": false,
            "name": "HistoryEvent",
            "qualifiedName": "net.sf.freecol.common.model.HistoryEvent"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "event",
        "type": {
          "isArray": false,
          "name": "HistoryEvent",
          "qualifiedName": "net.sf.freecol.common.model.HistoryEvent"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "addHistory(net.sf.freecol.common.model.HistoryEvent event)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getEntryLocation",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The entry Location.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Location",
      "qualifiedName": "net.sf.freecol.common.model.Location"
    },
    "signature": "getEntryLocation()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setEntryLocation",
    "paramTags": [
      {
        "comment": "The new entry Location.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "entryLocation",
          "type": {
            "isArray": false,
            "name": "Location",
            "qualifiedName": "net.sf.freecol.common.model.Location"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "entryLocation",
        "type": {
          "isArray": false,
          "name": "Location",
          "qualifiedName": "net.sf.freecol.common.model.Location"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setEntryLocation(net.sf.freecol.common.model.Location entryLocation)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getFallbackTile",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A suitable Tile.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Tile",
      "qualifiedName": "net.sf.freecol.common.model.Tile"
    },
    "signature": "getFallbackTile()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getHighSeas",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The HighSeas for this player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "HighSeas",
      "qualifiedName": "net.sf.freecol.common.model.HighSeas"
    },
    "signature": "getHighSeas()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "initializeHighSeas",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "initializeHighSeas()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canSee",
    "paramTags": [
      {
        "comment": "The Tile to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "True if this player can see the given Tile.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "canSee(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "invalidateCanSeeTiles",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "invalidateCanSeeTiles()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "resetCanSeeTiles",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if successful.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "resetCanSeeTiles()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasExplored",
    "paramTags": [
      {
        "comment": "The Tile to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the Tile has been explored.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasExplored(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "makeCanSeeTiles",
    "paramTags": [
      {
        "comment": "The Map to use.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "map",
          "type": {
            "isArray": false,
            "name": "Map",
            "qualifiedName": "net.sf.freecol.common.model.Map"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "map",
        "type": {
          "isArray": false,
          "name": "Map",
          "qualifiedName": "net.sf.freecol.common.model.Map"
        }
      }
    ],
    "returnTag": {
      "comment": "A canSeeTiles array.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "boolean",
        "qualifiedName": "boolean"
      },
      "isArray": true,
      "name": "boolean[][]",
      "qualifiedName": "boolean[][]"
    },
    "signature": "makeCanSeeTiles(net.sf.freecol.common.model.Map map)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getTension",
    "paramTags": [
      {
        "comment": "The other Player.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnTag": {
      "comment": "An object representing the tension level.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Tension",
      "qualifiedName": "net.sf.freecol.common.model.Tension"
    },
    "signature": "getTension(net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setTension",
    "paramTags": [
      {
        "comment": "The other Player.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      },
      {
        "comment": "The new Tension.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newTension",
          "type": {
            "isArray": false,
            "name": "Tension",
            "qualifiedName": "net.sf.freecol.common.model.Tension"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      },
      {
        "name": "newTension",
        "type": {
          "isArray": false,
          "name": "Tension",
          "qualifiedName": "net.sf.freecol.common.model.Tension"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setTension(net.sf.freecol.common.model.Player player,net.sf.freecol.common.model.Tension newTension)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "removeTension",
    "paramTags": [
      {
        "comment": "The Player to remove tension for.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "removeTension(net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "missionsBanned",
    "paramTags": [
      {
        "comment": "The other Player to test.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the given player is banned.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "missionsBanned(net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "addMissionBan",
    "paramTags": [
      {
        "comment": "The Player to ban.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "addMissionBan(net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "removeMissionBan",
    "paramTags": [
      {
        "comment": "The Player to clear the ban for.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "removeMissionBan(net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getStance",
    "paramTags": [
      {
        "comment": "The other Player to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnTag": {
      "comment": "The stance.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Stance",
      "qualifiedName": "net.sf.freecol.common.model.Stance"
    },
    "signature": "getStance(net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "setStance",
    "paramTags": [
      {
        "comment": "The Player to set the Stance for.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      },
      {
        "comment": "The new Stance.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newStance",
          "type": {
            "isArray": false,
            "name": "Stance",
            "qualifiedName": "net.sf.freecol.common.model.Stance"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      },
      {
        "name": "newStance",
        "type": {
          "isArray": false,
          "name": "Stance",
          "qualifiedName": "net.sf.freecol.common.model.Stance"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the stance change was valid.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "setStance(net.sf.freecol.common.model.Player player,net.sf.freecol.common.model.Stance newStance)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": [
      {
        "comment": "if player is null or this.",
        "condition": "args[0]==null || args[0]==target",
        "exception": {
          "isArray": false,
          "name": "IllegalArgumentException",
          "qualifiedName": "java.lang.IllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "atWarWith",
    "paramTags": [
      {
        "comment": "The other Player to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the players are at war.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "atWarWith(net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "isAtWar",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this player is at war with any other.",
      "condition": "target.isAtWar() ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isAtWar()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasContacted",
    "paramTags": [
      {
        "comment": "The other Player to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnTag": {
      "comment": "True if this Player has contacted the other.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasContacted(net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasContactedEuropeans",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this Player has contacted any Europeans.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasContactedEuropeans()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasContactedIndians",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this Player has contacted any natives.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasContactedIndians()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "makeContact",
    "paramTags": [
      {
        "comment": "One Player to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player1",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      },
      {
        "comment": "The other Player to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player2",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player1",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      },
      {
        "name": "player2",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "makeContact(net.sf.freecol.common.model.Player player1,net.sf.freecol.common.model.Player player2)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getLandPrice",
    "paramTags": [
      {
        "comment": "The Tile to get the price for.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "The price of the land if it is for sale, zero if it is already ours, unclaimed or unwanted, negative if it is not for sale.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getLandPrice(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getNationSummary",
    "paramTags": [
      {
        "comment": "The Player to get the summary for.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnTag": {
      "comment": "The current NationSummary for a player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "NationSummary",
      "qualifiedName": "net.sf.freecol.common.model.NationSummary"
    },
    "signature": "getNationSummary(net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "putNationSummary",
    "paramTags": [
      {
        "comment": "The Player to get the summary for.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      },
      {
        "comment": "The new NationSummary for the player.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "ns",
          "type": {
            "isArray": false,
            "name": "NationSummary",
            "qualifiedName": "net.sf.freecol.common.model.NationSummary"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      },
      {
        "name": "ns",
        "type": {
          "isArray": false,
          "name": "NationSummary",
          "qualifiedName": "net.sf.freecol.common.model.NationSummary"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "putNationSummary(net.sf.freecol.common.model.Player player,net.sf.freecol.common.model.NationSummary ns)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "clearNationCache",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "clearNationCache()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getStrengthRatio",
    "paramTags": [
      {
        "comment": "The other Player.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "other",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      },
      {
        "comment": "If true, get the naval strength, else the land strength.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "naval",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "other",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      },
      {
        "name": "naval",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnTag": {
      "comment": "The strength ratio (strength/sum(strengths)), or negative on error.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "getStrengthRatio(net.sf.freecol.common.model.Player other,boolean naval)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "strengthRatio",
    "paramTags": [
      {
        "comment": "The player strength.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "ours",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "The enemy strength.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "theirs",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "ours",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "theirs",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "The resulting strength ratio.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "strengthRatio(double ours,double theirs)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canOwnTile",
    "paramTags": [
      {
        "comment": "The Tile to consider.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the tile can be owned by this player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "canOwnTile(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canOwnTileReason",
    "paramTags": [
      {
        "comment": "The Tile to consider.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "The reason why/not the tile can be owned by this player.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "NoClaimReason",
      "qualifiedName": "net.sf.freecol.common.model.Player.NoClaimReason"
    },
    "signature": "canOwnTileReason(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canClaimForSettlement",
    "paramTags": [
      {
        "comment": "The Tile to try to claim.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the tile can be claimed to found a settlement.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "canClaimForSettlement(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canClaimForSettlementReason",
    "paramTags": [
      {
        "comment": "The Tile to try to claim.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "The reason why/not the tile can be claimed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "NoClaimReason",
      "qualifiedName": "net.sf.freecol.common.model.Player.NoClaimReason"
    },
    "signature": "canClaimForSettlementReason(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canClaimToFoundSettlement",
    "paramTags": [
      {
        "comment": "The Tile to try to claim.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the tile can be claimed to found a settlement.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "canClaimToFoundSettlement(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canClaimToFoundSettlementReason",
    "paramTags": [
      {
        "comment": "The Tile to try to claim.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "The reason why/not the tile can be claimed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "NoClaimReason",
      "qualifiedName": "net.sf.freecol.common.model.Player.NoClaimReason"
    },
    "signature": "canClaimToFoundSettlementReason(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canClaimFreeCenterTile",
    "paramTags": [
      {
        "comment": "The Tile to try to claim.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the tile can be claimed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "canClaimFreeCenterTile(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "hasZeroSettlements",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if the player has no settlements (on the map) yet.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasZeroSettlements()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canClaimForImprovement",
    "paramTags": [
      {
        "comment": "The Tile to consider.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the tile ownership can be claimed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "canClaimForImprovement(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "canAcquireForImprovement",
    "paramTags": [
      {
        "comment": "The Tile to consider.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the tile ownership can be claimed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "canAcquireForImprovement(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getClaimableTiles",
    "paramTags": [
      {
        "comment": "The intended settlement center Tile.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "centerTile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      },
      {
        "comment": "The radius of the settlement.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "radius",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "centerTile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      },
      {
        "name": "radius",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "A list of potentially claimable tiles.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getClaimableTiles(net.sf.freecol.common.model.Tile centerTile,int radius)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getAllColonyValues",
    "paramTags": [
      {
        "comment": "The Tile",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "A list of values.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getAllColonyValues(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getColonyValue",
    "paramTags": [
      {
        "comment": "The Tile",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tile",
          "type": {
            "isArray": false,
            "name": "Tile",
            "qualifiedName": "net.sf.freecol.common.model.Tile"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "tile",
        "type": {
          "isArray": false,
          "name": "Tile",
          "qualifiedName": "net.sf.freecol.common.model.Tile"
        }
      }
    ],
    "returnTag": {
      "comment": "A score for the tile.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getColonyValue(net.sf.freecol.common.model.Tile tile)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "logCheat",
    "paramTags": [
      {
        "comment": "A description of the cheating.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "what",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "what",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "logCheat(java.lang.String what)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getMaximumFoodConsumption",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A maximum food consumption value.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getMaximumFoodConsumption()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "owns",
    "paramTags": [
      {
        "comment": "The Ownable to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "ownable",
          "type": {
            "isArray": false,
            "name": "Ownable",
            "qualifiedName": "net.sf.freecol.common.model.Ownable"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "ownable",
        "type": {
          "isArray": false,
          "name": "Ownable",
          "qualifiedName": "net.sf.freecol.common.model.Ownable"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the Ownable is ours.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "owns(net.sf.freecol.common.model.Ownable ownable)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getOurFreeColGameObject",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      },
      {
        "comment": "The expected class of the object.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "returnClass",
          "type": {
            "isArray": false,
            "name": "Class",
            "qualifiedName": "java.lang.Class"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "returnClass",
        "type": {
          "isArray": false,
          "name": "Class",
          "qualifiedName": "java.lang.Class"
        }
      }
    ],
    "returnTag": {
      "comment": "The game object, or null if not found.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "T",
      "qualifiedName": "T"
    },
    "signature": "getOurFreeColGameObject(java.lang.String id,java.lang.Class returnClass)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": [
      {
        "comment": "on failure to validate the object in any way.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "IllegalStateException",
          "qualifiedName": "java.lang.IllegalStateException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "checkIntegrity",
    "paramTags": [],
    "parameters": [
      {
        "name": "fix",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "checkIntegrity(boolean fix)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getFeatureContainer",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "FeatureContainer",
      "qualifiedName": "net.sf.freecol.common.model.FeatureContainer"
    },
    "signature": "getFeatureContainer()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "writeAttributes",
    "paramTags": [],
    "parameters": [
      {
        "name": "xw",
        "type": {
          "isArray": false,
          "name": "FreeColXMLWriter",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "writeChildren",
    "paramTags": [],
    "parameters": [
      {
        "name": "xw",
        "type": {
          "isArray": false,
          "name": "FreeColXMLWriter",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "readAttributes",
    "paramTags": [],
    "parameters": [
      {
        "name": "xr",
        "type": {
          "isArray": false,
          "name": "FreeColXMLReader",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "readChildren",
    "paramTags": [],
    "parameters": [
      {
        "name": "xr",
        "type": {
          "isArray": false,
          "name": "FreeColXMLReader",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "readChild",
    "paramTags": [],
    "parameters": [
      {
        "name": "xr",
        "type": {
          "isArray": false,
          "name": "FreeColXMLReader",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "toString",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "toString()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getXMLTagName",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getXMLTagName()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Player",
      "qualifiedName": "net.sf.freecol.common.model.Player"
    },
    "isVarArgs": false,
    "name": "getXMLElementTagName",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "\"player\"",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getXMLElementTagName()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "getGame",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The Game this object belongs to.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Game",
      "qualifiedName": "net.sf.freecol.common.model.Game"
    },
    "signature": "getGame()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "setGame",
    "paramTags": [
      {
        "comment": "The Game to set.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "game",
          "type": {
            "isArray": false,
            "name": "Game",
            "qualifiedName": "net.sf.freecol.common.model.Game"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "game",
        "type": {
          "isArray": false,
          "name": "Game",
          "qualifiedName": "net.sf.freecol.common.model.Game"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setGame(net.sf.freecol.common.model.Game game)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "isUninitialized",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this object is not initialized.",
      "condition": "(target.isUninitialized()) == false ? true",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isUninitialized()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "isDisposed",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "True if this object has been disposed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isDisposed()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "getDisposeList",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A list of FreeColGameObjects to dispose of.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getDisposeList()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "fundamentalDispose",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "fundamentalDispose()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "disposeResources",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "disposeResources()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "dispose",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "dispose()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "cloneFreeColGameObject",
    "paramTags": [
      {
        "comment": "The class to clone.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "returnClass",
          "type": {
            "isArray": false,
            "name": "Class",
            "qualifiedName": "java.lang.Class"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "returnClass",
        "type": {
          "isArray": false,
          "name": "Class",
          "qualifiedName": "java.lang.Class"
        }
      }
    ],
    "returnTag": {
      "comment": "The \"clone\" of the FreeColGameObject.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "T",
      "qualifiedName": "T"
    },
    "signature": "cloneFreeColGameObject(java.lang.Class returnClass)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "getLinkTarget",
    "paramTags": [
      {
        "comment": "The Player to make a link for.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnTag": {
      "comment": "A suitable link target if available, although usually null.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "signature": "getLinkTarget(net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "internId",
    "paramTags": [
      {
        "comment": "The unique identifier of this object.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newId",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "newId",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "internId(java.lang.String newId)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "getSpecification",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The Specification of this game.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Specification",
      "qualifiedName": "net.sf.freecol.common.model.Specification"
    },
    "signature": "getSpecification()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "equals",
    "paramTags": [],
    "parameters": [
      {
        "name": "o",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "equals(java.lang.Object o)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "hashCode",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "hashCode()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColGameObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject"
    },
    "isVarArgs": false,
    "name": "readFromXML",
    "paramTags": [
      {
        "comment": "The input FreeColXMLReader.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "xr",
          "type": {
            "isArray": false,
            "name": "FreeColXMLReader",
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "xr",
        "type": {
          "isArray": false,
          "name": "FreeColXMLReader",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "readFromXML(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": [
      {
        "comment": "if there problems reading the stream.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "XMLStreamException",
          "qualifiedName": "javax.xml.stream.XMLStreamException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getId",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The identifier.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getId()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "setId",
    "paramTags": [
      {
        "comment": "The new object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "newId",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "newId",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setId(java.lang.String newId)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getSuffix",
    "paramTags": [
      {
        "comment": "The prefix to test.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "prefix",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "prefix",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "An identifier.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getSuffix(java.lang.String prefix)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getSuffix",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The usual identifier suffix.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getSuffix()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "setSpecification",
    "paramTags": [
      {
        "comment": "The Specification to use.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "specification",
          "type": {
            "isArray": false,
            "name": "Specification",
            "qualifiedName": "net.sf.freecol.common.model.Specification"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "specification",
        "type": {
          "isArray": false,
          "name": "Specification",
          "qualifiedName": "net.sf.freecol.common.model.Specification"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setSpecification(net.sf.freecol.common.model.Specification specification)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getIdType",
    "paramTags": [],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "The type part of the identifier, or null on error.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getIdType(java.lang.String id)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getIdType",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The type part of the identifier, or null on error.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "getIdType()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getIdNumber",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The numeric part of the identifier, or negative on error.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "getIdNumber()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "compareIds",
    "paramTags": [
      {
        "comment": "The first FreeColObject to compare.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fco1",
          "type": {
            "isArray": false,
            "name": "FreeColObject",
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
          }
        }
      },
      {
        "comment": "The second FreeColObject to compare.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fco2",
          "type": {
            "isArray": false,
            "name": "FreeColObject",
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "fco1",
        "type": {
          "isArray": false,
          "name": "FreeColObject",
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
        }
      },
      {
        "name": "fco2",
        "type": {
          "isArray": false,
          "name": "FreeColObject",
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
        }
      }
    ],
    "returnTag": {
      "comment": "The comparison result.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "compareIds(net.sf.freecol.common.model.FreeColObject fco1,net.sf.freecol.common.model.FreeColObject fco2)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "compareTo",
    "paramTags": [
      {
        "comment": "The other FreeColObject subclass to compare.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "other",
          "type": {
            "isArray": false,
            "name": "FreeColObject",
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "other",
        "type": {
          "isArray": false,
          "name": "FreeColObject",
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
        }
      }
    ],
    "returnTag": {
      "comment": "The comparison result.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "compareTo(net.sf.freecol.common.model.FreeColObject other)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getSortedCopy",
    "paramTags": [
      {
        "comment": "The Collection to sort.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "c",
          "type": {
            "isArray": false,
            "name": "Collection",
            "qualifiedName": "java.util.Collection"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "c",
        "type": {
          "isArray": false,
          "name": "Collection",
          "qualifiedName": "java.util.Collection"
        }
      }
    ],
    "returnTag": {
      "comment": "A sorted copy of the collection.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getSortedCopy(java.util.Collection c)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "logFreeColObjects",
    "paramTags": [
      {
        "comment": "The Collection to log.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "c",
          "type": {
            "isArray": false,
            "name": "Collection",
            "qualifiedName": "java.util.Collection"
          }
        }
      },
      {
        "comment": "A LogBuilder to log to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "lb",
          "type": {
            "isArray": false,
            "name": "LogBuilder",
            "qualifiedName": "net.sf.freecol.common.util.LogBuilder"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "c",
        "type": {
          "isArray": false,
          "name": "Collection",
          "qualifiedName": "java.util.Collection"
        }
      },
      {
        "name": "lb",
        "type": {
          "isArray": false,
          "name": "LogBuilder",
          "qualifiedName": "net.sf.freecol.common.util.LogBuilder"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "logFreeColObjects(java.util.Collection c,net.sf.freecol.common.util.LogBuilder lb)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "invokeMethod",
    "paramTags": [
      {
        "comment": "The name of the method.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "methodName",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      },
      {
        "comment": "The class of the return value.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "returnClass",
          "type": {
            "isArray": false,
            "name": "Class",
            "qualifiedName": "java.lang.Class"
          }
        }
      },
      {
        "comment": "The default value.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "defaultValue",
          "type": {
            "isArray": false,
            "name": "Object",
            "qualifiedName": "java.lang.Object"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "methodName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "returnClass",
        "type": {
          "isArray": false,
          "name": "Class",
          "qualifiedName": "java.lang.Class"
        }
      },
      {
        "name": "defaultValue",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      }
    ],
    "returnTag": {
      "comment": "The result of invoking the method, or the default value on failure.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "T",
      "qualifiedName": "T"
    },
    "signature": "invokeMethod(java.lang.String methodName,java.lang.Class returnClass,java.lang.Object defaultValue)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "addPropertyChangeListener",
    "paramTags": [],
    "parameters": [
      {
        "name": "listener",
        "type": {
          "isArray": false,
          "name": "PropertyChangeListener",
          "qualifiedName": "java.beans.PropertyChangeListener"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "addPropertyChangeListener(java.beans.PropertyChangeListener listener)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "addPropertyChangeListener",
    "paramTags": [],
    "parameters": [
      {
        "name": "propertyName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "listener",
        "type": {
          "isArray": false,
          "name": "PropertyChangeListener",
          "qualifiedName": "java.beans.PropertyChangeListener"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "addPropertyChangeListener(java.lang.String propertyName,java.beans.PropertyChangeListener listener)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "fireIndexedPropertyChange",
    "paramTags": [],
    "parameters": [
      {
        "name": "propertyName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "index",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "oldValue",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      },
      {
        "name": "newValue",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "fireIndexedPropertyChange(java.lang.String propertyName,int index,boolean oldValue,boolean newValue)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "fireIndexedPropertyChange",
    "paramTags": [],
    "parameters": [
      {
        "name": "propertyName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "index",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "oldValue",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "newValue",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "fireIndexedPropertyChange(java.lang.String propertyName,int index,int oldValue,int newValue)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "fireIndexedPropertyChange",
    "paramTags": [],
    "parameters": [
      {
        "name": "propertyName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "index",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "oldValue",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      },
      {
        "name": "newValue",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "fireIndexedPropertyChange(java.lang.String propertyName,int index,java.lang.Object oldValue,java.lang.Object newValue)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "firePropertyChange",
    "paramTags": [],
    "parameters": [
      {
        "name": "event",
        "type": {
          "isArray": false,
          "name": "PropertyChangeEvent",
          "qualifiedName": "java.beans.PropertyChangeEvent"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "firePropertyChange(java.beans.PropertyChangeEvent event)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "firePropertyChange",
    "paramTags": [],
    "parameters": [
      {
        "name": "propertyName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "oldValue",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      },
      {
        "name": "newValue",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "firePropertyChange(java.lang.String propertyName,boolean oldValue,boolean newValue)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "firePropertyChange",
    "paramTags": [],
    "parameters": [
      {
        "name": "propertyName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "oldValue",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "newValue",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "firePropertyChange(java.lang.String propertyName,int oldValue,int newValue)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "firePropertyChange",
    "paramTags": [],
    "parameters": [
      {
        "name": "propertyName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "oldValue",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      },
      {
        "name": "newValue",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "firePropertyChange(java.lang.String propertyName,java.lang.Object oldValue,java.lang.Object newValue)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getPropertyChangeListeners",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "PropertyChangeListener",
        "qualifiedName": "java.beans.PropertyChangeListener"
      },
      "isArray": true,
      "name": "PropertyChangeListener[]",
      "qualifiedName": "java.beans.PropertyChangeListener[]"
    },
    "signature": "getPropertyChangeListeners()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getPropertyChangeListeners",
    "paramTags": [],
    "parameters": [
      {
        "name": "propertyName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "PropertyChangeListener",
        "qualifiedName": "java.beans.PropertyChangeListener"
      },
      "isArray": true,
      "name": "PropertyChangeListener[]",
      "qualifiedName": "java.beans.PropertyChangeListener[]"
    },
    "signature": "getPropertyChangeListeners(java.lang.String propertyName)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "hasListeners",
    "paramTags": [],
    "parameters": [
      {
        "name": "propertyName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasListeners(java.lang.String propertyName)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "removePropertyChangeListener",
    "paramTags": [],
    "parameters": [
      {
        "name": "listener",
        "type": {
          "isArray": false,
          "name": "PropertyChangeListener",
          "qualifiedName": "java.beans.PropertyChangeListener"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "removePropertyChangeListener(java.beans.PropertyChangeListener listener)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "removePropertyChangeListener",
    "paramTags": [],
    "parameters": [
      {
        "name": "propertyName",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "listener",
        "type": {
          "isArray": false,
          "name": "PropertyChangeListener",
          "qualifiedName": "java.beans.PropertyChangeListener"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "removePropertyChangeListener(java.lang.String propertyName,java.beans.PropertyChangeListener listener)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "hasAbility",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the ability is present.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasAbility(java.lang.String id)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "hasAbility",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      },
      {
        "comment": "An optional FreeColGameObjectType the ability applies to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fcgot",
          "type": {
            "isArray": false,
            "name": "FreeColGameObjectType",
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "fcgot",
        "type": {
          "isArray": false,
          "name": "FreeColGameObjectType",
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the ability is present.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasAbility(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "hasAbility",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      },
      {
        "comment": "An optional FreeColGameObjectType the ability applies to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fcgot",
          "type": {
            "isArray": false,
            "name": "FreeColGameObjectType",
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
          }
        }
      },
      {
        "comment": "An optional applicable Turn.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "turn",
          "type": {
            "isArray": false,
            "name": "Turn",
            "qualifiedName": "net.sf.freecol.common.model.Turn"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "fcgot",
        "type": {
          "isArray": false,
          "name": "FreeColGameObjectType",
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
        }
      },
      {
        "name": "turn",
        "type": {
          "isArray": false,
          "name": "Turn",
          "qualifiedName": "net.sf.freecol.common.model.Turn"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the ability is present.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasAbility(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot,net.sf.freecol.common.model.Turn turn)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "containsAbilityKey",
    "paramTags": [
      {
        "comment": "The key to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "key",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "key",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the key is present.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "containsAbilityKey(java.lang.String key)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getSortedAbilities",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A list of abilities.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getSortedAbilities()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getAbilities",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A set of abilities.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Set",
      "qualifiedName": "java.util.Set"
    },
    "signature": "getAbilities()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getAbilities",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "A set of abilities.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Set",
      "qualifiedName": "java.util.Set"
    },
    "signature": "getAbilities(java.lang.String id)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getAbilities",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      },
      {
        "comment": "An optional FreeColGameObjectType the ability applies to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fcgot",
          "type": {
            "isArray": false,
            "name": "FreeColGameObjectType",
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "fcgot",
        "type": {
          "isArray": false,
          "name": "FreeColGameObjectType",
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
        }
      }
    ],
    "returnTag": {
      "comment": "A set of abilities.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Set",
      "qualifiedName": "java.util.Set"
    },
    "signature": "getAbilities(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getAbilities",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      },
      {
        "comment": "An optional FreeColGameObjectType the ability applies to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fcgot",
          "type": {
            "isArray": false,
            "name": "FreeColGameObjectType",
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
          }
        }
      },
      {
        "comment": "An optional applicable Turn.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "turn",
          "type": {
            "isArray": false,
            "name": "Turn",
            "qualifiedName": "net.sf.freecol.common.model.Turn"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "fcgot",
        "type": {
          "isArray": false,
          "name": "FreeColGameObjectType",
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
        }
      },
      {
        "name": "turn",
        "type": {
          "isArray": false,
          "name": "Turn",
          "qualifiedName": "net.sf.freecol.common.model.Turn"
        }
      }
    ],
    "returnTag": {
      "comment": "A set of abilities.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Set",
      "qualifiedName": "java.util.Set"
    },
    "signature": "getAbilities(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot,net.sf.freecol.common.model.Turn turn)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "addAbility",
    "paramTags": [
      {
        "comment": "An Ability to add.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "ability",
          "type": {
            "isArray": false,
            "name": "Ability",
            "qualifiedName": "net.sf.freecol.common.model.Ability"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "ability",
        "type": {
          "isArray": false,
          "name": "Ability",
          "qualifiedName": "net.sf.freecol.common.model.Ability"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the ability was added.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "addAbility(net.sf.freecol.common.model.Ability ability)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "removeAbility",
    "paramTags": [
      {
        "comment": "An Ability to remove.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "ability",
          "type": {
            "isArray": false,
            "name": "Ability",
            "qualifiedName": "net.sf.freecol.common.model.Ability"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "ability",
        "type": {
          "isArray": false,
          "name": "Ability",
          "qualifiedName": "net.sf.freecol.common.model.Ability"
        }
      }
    ],
    "returnTag": {
      "comment": "The ability removed or null on failure.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Ability",
      "qualifiedName": "net.sf.freecol.common.model.Ability"
    },
    "signature": "removeAbility(net.sf.freecol.common.model.Ability ability)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "removeAbilities",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "removeAbilities(java.lang.String id)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "hasModifier",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the modifier is present.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasModifier(java.lang.String id)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "hasModifier",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      },
      {
        "comment": "An optional FreeColGameObjectType the modifier applies to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fcgot",
          "type": {
            "isArray": false,
            "name": "FreeColGameObjectType",
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "fcgot",
        "type": {
          "isArray": false,
          "name": "FreeColGameObjectType",
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the modifier is present.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasModifier(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "hasModifier",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      },
      {
        "comment": "An optional FreeColGameObjectType the modifier applies to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fcgot",
          "type": {
            "isArray": false,
            "name": "FreeColGameObjectType",
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
          }
        }
      },
      {
        "comment": "An optional applicable Turn.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "turn",
          "type": {
            "isArray": false,
            "name": "Turn",
            "qualifiedName": "net.sf.freecol.common.model.Turn"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "fcgot",
        "type": {
          "isArray": false,
          "name": "FreeColGameObjectType",
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
        }
      },
      {
        "name": "turn",
        "type": {
          "isArray": false,
          "name": "Turn",
          "qualifiedName": "net.sf.freecol.common.model.Turn"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the modifier is present.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "hasModifier(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot,net.sf.freecol.common.model.Turn turn)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "containsModifierKey",
    "paramTags": [
      {
        "comment": "The key to check.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "key",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "key",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the key is present.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "containsModifierKey(java.lang.String key)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getSortedModifiers",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A list of modifiers.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getSortedModifiers()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getModifiers",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A set of modifiers.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Set",
      "qualifiedName": "java.util.Set"
    },
    "signature": "getModifiers()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getModifiers",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "A set of modifiers.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Set",
      "qualifiedName": "java.util.Set"
    },
    "signature": "getModifiers(java.lang.String id)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getModifiers",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      },
      {
        "comment": "An optional FreeColGameObjectType the modifier applies to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fcgot",
          "type": {
            "isArray": false,
            "name": "FreeColGameObjectType",
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "fcgot",
        "type": {
          "isArray": false,
          "name": "FreeColGameObjectType",
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
        }
      }
    ],
    "returnTag": {
      "comment": "A set of modifiers.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Set",
      "qualifiedName": "java.util.Set"
    },
    "signature": "getModifiers(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getModifiers",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      },
      {
        "comment": "An optional FreeColGameObjectType the modifier applies to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fcgot",
          "type": {
            "isArray": false,
            "name": "FreeColGameObjectType",
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
          }
        }
      },
      {
        "comment": "An optional applicable Turn.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "turn",
          "type": {
            "isArray": false,
            "name": "Turn",
            "qualifiedName": "net.sf.freecol.common.model.Turn"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "fcgot",
        "type": {
          "isArray": false,
          "name": "FreeColGameObjectType",
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
        }
      },
      {
        "name": "turn",
        "type": {
          "isArray": false,
          "name": "Turn",
          "qualifiedName": "net.sf.freecol.common.model.Turn"
        }
      }
    ],
    "returnTag": {
      "comment": "A set of modifiers.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Set",
      "qualifiedName": "java.util.Set"
    },
    "signature": "getModifiers(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot,net.sf.freecol.common.model.Turn turn)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "applyModifiers",
    "paramTags": [
      {
        "comment": "The number to modify.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "number",
          "type": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          }
        }
      },
      {
        "comment": "An optional applicable Turn.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "turn",
          "type": {
            "isArray": false,
            "name": "Turn",
            "qualifiedName": "net.sf.freecol.common.model.Turn"
          }
        }
      },
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "number",
        "type": {
          "isArray": false,
          "name": "float",
          "qualifiedName": "float"
        }
      },
      {
        "name": "turn",
        "type": {
          "isArray": false,
          "name": "Turn",
          "qualifiedName": "net.sf.freecol.common.model.Turn"
        }
      },
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "The modified number.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "float",
      "qualifiedName": "float"
    },
    "signature": "applyModifiers(float number,net.sf.freecol.common.model.Turn turn,java.lang.String id)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "applyModifiers",
    "paramTags": [
      {
        "comment": "The number to modify.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "number",
          "type": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          }
        }
      },
      {
        "comment": "An optional applicable Turn.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "turn",
          "type": {
            "isArray": false,
            "name": "Turn",
            "qualifiedName": "net.sf.freecol.common.model.Turn"
          }
        }
      },
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      },
      {
        "comment": "An optional FreeColGameObjectType the modifier applies to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fcgot",
          "type": {
            "isArray": false,
            "name": "FreeColGameObjectType",
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "number",
        "type": {
          "isArray": false,
          "name": "float",
          "qualifiedName": "float"
        }
      },
      {
        "name": "turn",
        "type": {
          "isArray": false,
          "name": "Turn",
          "qualifiedName": "net.sf.freecol.common.model.Turn"
        }
      },
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "fcgot",
        "type": {
          "isArray": false,
          "name": "FreeColGameObjectType",
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType"
        }
      }
    ],
    "returnTag": {
      "comment": "The modified number.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "float",
      "qualifiedName": "float"
    },
    "signature": "applyModifiers(float number,net.sf.freecol.common.model.Turn turn,java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "applyModifiers",
    "paramTags": [
      {
        "comment": "The number to modify.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "number",
          "type": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          }
        }
      },
      {
        "comment": "An optional applicable Turn.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "turn",
          "type": {
            "isArray": false,
            "name": "Turn",
            "qualifiedName": "net.sf.freecol.common.model.Turn"
          }
        }
      },
      {
        "comment": "The Modifiers to apply.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "mods",
          "type": {
            "isArray": false,
            "name": "Collection",
            "qualifiedName": "java.util.Collection"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "number",
        "type": {
          "isArray": false,
          "name": "float",
          "qualifiedName": "float"
        }
      },
      {
        "name": "turn",
        "type": {
          "isArray": false,
          "name": "Turn",
          "qualifiedName": "net.sf.freecol.common.model.Turn"
        }
      },
      {
        "name": "mods",
        "type": {
          "isArray": false,
          "name": "Collection",
          "qualifiedName": "java.util.Collection"
        }
      }
    ],
    "returnTag": {
      "comment": "The modified number.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "float",
      "qualifiedName": "float"
    },
    "signature": "applyModifiers(float number,net.sf.freecol.common.model.Turn turn,java.util.Collection mods)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "addModifier",
    "paramTags": [
      {
        "comment": "An Modifier to add.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "modifier",
          "type": {
            "isArray": false,
            "name": "Modifier",
            "qualifiedName": "net.sf.freecol.common.model.Modifier"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "modifier",
        "type": {
          "isArray": false,
          "name": "Modifier",
          "qualifiedName": "net.sf.freecol.common.model.Modifier"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the modifier was added.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "addModifier(net.sf.freecol.common.model.Modifier modifier)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "removeModifier",
    "paramTags": [
      {
        "comment": "An Modifier to remove.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "modifier",
          "type": {
            "isArray": false,
            "name": "Modifier",
            "qualifiedName": "net.sf.freecol.common.model.Modifier"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "modifier",
        "type": {
          "isArray": false,
          "name": "Modifier",
          "qualifiedName": "net.sf.freecol.common.model.Modifier"
        }
      }
    ],
    "returnTag": {
      "comment": "The modifier removed.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Modifier",
      "qualifiedName": "net.sf.freecol.common.model.Modifier"
    },
    "signature": "removeModifier(net.sf.freecol.common.model.Modifier modifier)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "removeModifiers",
    "paramTags": [
      {
        "comment": "The object identifier.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "id",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "id",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "removeModifiers(java.lang.String id)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "addFeatures",
    "paramTags": [
      {
        "comment": "The FreeColObject to add features from.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fco",
          "type": {
            "isArray": false,
            "name": "FreeColObject",
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "fco",
        "type": {
          "isArray": false,
          "name": "FreeColObject",
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "addFeatures(net.sf.freecol.common.model.FreeColObject fco)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "removeFeatures",
    "paramTags": [
      {
        "comment": "The FreeColObject to find features to remove in.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fco",
          "type": {
            "isArray": false,
            "name": "FreeColObject",
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "fco",
        "type": {
          "isArray": false,
          "name": "FreeColObject",
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "removeFeatures(net.sf.freecol.common.model.FreeColObject fco)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "getDefenceModifiers",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "A set of defence Modifiers.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Set",
      "qualifiedName": "java.util.Set"
    },
    "signature": "getDefenceModifiers()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "toXMLElement",
    "paramTags": [
      {
        "comment": "The Document.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "document",
          "type": {
            "isArray": false,
            "name": "Document",
            "qualifiedName": "org.w3c.dom.Document"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "document",
        "type": {
          "isArray": false,
          "name": "Document",
          "qualifiedName": "org.w3c.dom.Document"
        }
      }
    ],
    "returnTag": {
      "comment": "An XML-representation of this object.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Element",
      "qualifiedName": "org.w3c.dom.Element"
    },
    "signature": "toXMLElement(org.w3c.dom.Document document)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "toXMLElement",
    "paramTags": [
      {
        "comment": "The Document.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "document",
          "type": {
            "isArray": false,
            "name": "Document",
            "qualifiedName": "org.w3c.dom.Document"
          }
        }
      },
      {
        "comment": "The Player to write to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "player",
          "type": {
            "isArray": false,
            "name": "Player",
            "qualifiedName": "net.sf.freecol.common.model.Player"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "document",
        "type": {
          "isArray": false,
          "name": "Document",
          "qualifiedName": "org.w3c.dom.Document"
        }
      },
      {
        "name": "player",
        "type": {
          "isArray": false,
          "name": "Player",
          "qualifiedName": "net.sf.freecol.common.model.Player"
        }
      }
    ],
    "returnTag": {
      "comment": "An XML-representation of this object.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Element",
      "qualifiedName": "org.w3c.dom.Element"
    },
    "signature": "toXMLElement(org.w3c.dom.Document document,net.sf.freecol.common.model.Player player)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "toXMLElement",
    "paramTags": [
      {
        "comment": "The Document.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "document",
          "type": {
            "isArray": false,
            "name": "Document",
            "qualifiedName": "org.w3c.dom.Document"
          }
        }
      },
      {
        "comment": "The WriteScope to apply.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "writeScope",
          "type": {
            "isArray": false,
            "name": "WriteScope",
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "document",
        "type": {
          "isArray": false,
          "name": "Document",
          "qualifiedName": "org.w3c.dom.Document"
        }
      },
      {
        "name": "writeScope",
        "type": {
          "isArray": false,
          "name": "WriteScope",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope"
        }
      }
    ],
    "returnTag": {
      "comment": "An XML-representation of this object.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Element",
      "qualifiedName": "org.w3c.dom.Element"
    },
    "signature": "toXMLElement(org.w3c.dom.Document document,net.sf.freecol.common.io.FreeColXMLWriter.WriteScope writeScope)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": true,
    "name": "toXMLElementPartial",
    "paramTags": [
      {
        "comment": "The Document.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "document",
          "type": {
            "isArray": false,
            "name": "Document",
            "qualifiedName": "org.w3c.dom.Document"
          }
        }
      },
      {
        "comment": "The fields to write.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fields",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "String",
              "qualifiedName": "java.lang.String"
            },
            "isArray": true,
            "name": "String[]",
            "qualifiedName": "java.lang.String[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "document",
        "type": {
          "isArray": false,
          "name": "Document",
          "qualifiedName": "org.w3c.dom.Document"
        }
      },
      {
        "name": "fields",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          },
          "isArray": true,
          "name": "String[]",
          "qualifiedName": "java.lang.String[]"
        }
      }
    ],
    "returnTag": {
      "comment": "An XML-representation of this object.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Element",
      "qualifiedName": "org.w3c.dom.Element"
    },
    "signature": "toXMLElementPartial(org.w3c.dom.Document document,java.lang.String[] fields)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "toXMLElement",
    "paramTags": [
      {
        "comment": "The Document.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "document",
          "type": {
            "isArray": false,
            "name": "Document",
            "qualifiedName": "org.w3c.dom.Document"
          }
        }
      },
      {
        "comment": "The WriteScope to apply.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "writeScope",
          "type": {
            "isArray": false,
            "name": "WriteScope",
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope"
          }
        }
      },
      {
        "comment": "An array of field names, which if non-null indicates this should be a partial write.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fields",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "String",
              "qualifiedName": "java.lang.String"
            },
            "isArray": true,
            "name": "String[]",
            "qualifiedName": "java.lang.String[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "document",
        "type": {
          "isArray": false,
          "name": "Document",
          "qualifiedName": "org.w3c.dom.Document"
        }
      },
      {
        "name": "writeScope",
        "type": {
          "isArray": false,
          "name": "WriteScope",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope"
        }
      },
      {
        "name": "fields",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          },
          "isArray": true,
          "name": "String[]",
          "qualifiedName": "java.lang.String[]"
        }
      }
    ],
    "returnTag": {
      "comment": "An XML-representation of this object.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Element",
      "qualifiedName": "org.w3c.dom.Element"
    },
    "signature": "toXMLElement(org.w3c.dom.Document document,net.sf.freecol.common.io.FreeColXMLWriter.WriteScope writeScope,java.lang.String[] fields)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "readId",
    "paramTags": [
      {
        "comment": "An element to read the id attribute from.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "element",
          "type": {
            "isArray": false,
            "name": "Element",
            "qualifiedName": "org.w3c.dom.Element"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "element",
        "type": {
          "isArray": false,
          "name": "Element",
          "qualifiedName": "org.w3c.dom.Element"
        }
      }
    ],
    "returnTag": {
      "comment": "The identifier attribute value.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "readId(org.w3c.dom.Element element)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "readFromXMLElement",
    "paramTags": [
      {
        "comment": "An XML-element that will be used to initialize this object.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "element",
          "type": {
            "isArray": false,
            "name": "Element",
            "qualifiedName": "org.w3c.dom.Element"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "element",
        "type": {
          "isArray": false,
          "name": "Element",
          "qualifiedName": "org.w3c.dom.Element"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "readFromXMLElement(org.w3c.dom.Element element)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "dumpObject",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "dumpObject()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "dumpCollection",
    "paramTags": [],
    "parameters": [
      {
        "name": "items",
        "type": {
          "isArray": false,
          "name": "Collection",
          "qualifiedName": "java.util.Collection"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "dumpCollection(java.util.Collection items)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "save",
    "paramTags": [
      {
        "comment": "The File to write to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "file",
          "type": {
            "isArray": false,
            "name": "File",
            "qualifiedName": "java.io.File"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "file",
        "type": {
          "isArray": false,
          "name": "File",
          "qualifiedName": "java.io.File"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the save proceeded without error.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "save(java.io.File file)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": [
      {
        "comment": "",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "FileNotFoundException",
          "qualifiedName": "java.io.FileNotFoundException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "save",
    "paramTags": [
      {
        "comment": "The File to write to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "file",
          "type": {
            "isArray": false,
            "name": "File",
            "qualifiedName": "java.io.File"
          }
        }
      },
      {
        "comment": "The WriteScope to use.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "scope",
          "type": {
            "isArray": false,
            "name": "WriteScope",
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "file",
        "type": {
          "isArray": false,
          "name": "File",
          "qualifiedName": "java.io.File"
        }
      },
      {
        "name": "scope",
        "type": {
          "isArray": false,
          "name": "WriteScope",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the save proceeded without error.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "save(java.io.File file,net.sf.freecol.common.io.FreeColXMLWriter.WriteScope scope)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": [
      {
        "comment": "",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "FileNotFoundException",
          "qualifiedName": "java.io.FileNotFoundException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "save",
    "paramTags": [
      {
        "comment": "The File to write to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "file",
          "type": {
            "isArray": false,
            "name": "File",
            "qualifiedName": "java.io.File"
          }
        }
      },
      {
        "comment": "The WriteScope to use.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "scope",
          "type": {
            "isArray": false,
            "name": "WriteScope",
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope"
          }
        }
      },
      {
        "comment": "Attempt to indent the output nicely.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "pretty",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "file",
        "type": {
          "isArray": false,
          "name": "File",
          "qualifiedName": "java.io.File"
        }
      },
      {
        "name": "scope",
        "type": {
          "isArray": false,
          "name": "WriteScope",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope"
        }
      },
      {
        "name": "pretty",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the save proceeded without error.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "save(java.io.File file,net.sf.freecol.common.io.FreeColXMLWriter.WriteScope scope,boolean pretty)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": [
      {
        "comment": "",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "FileNotFoundException",
          "qualifiedName": "java.io.FileNotFoundException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "save",
    "paramTags": [
      {
        "comment": "The OutputStream to write to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "out",
          "type": {
            "isArray": false,
            "name": "OutputStream",
            "qualifiedName": "java.io.OutputStream"
          }
        }
      },
      {
        "comment": "The WriteScope to use.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "scope",
          "type": {
            "isArray": false,
            "name": "WriteScope",
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope"
          }
        }
      },
      {
        "comment": "Attempt to indent the output nicely.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "pretty",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "out",
        "type": {
          "isArray": false,
          "name": "OutputStream",
          "qualifiedName": "java.io.OutputStream"
        }
      },
      {
        "name": "scope",
        "type": {
          "isArray": false,
          "name": "WriteScope",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope"
        }
      },
      {
        "name": "pretty",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "returnTag": {
      "comment": "True if the save proceeded without error.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "save(java.io.OutputStream out,net.sf.freecol.common.io.FreeColXMLWriter.WriteScope scope,boolean pretty)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "serialize",
    "paramTags": [
      {
        "comment": "The write scope to use.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "scope",
          "type": {
            "isArray": false,
            "name": "WriteScope",
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "scope",
        "type": {
          "isArray": false,
          "name": "WriteScope",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope"
        }
      }
    ],
    "returnTag": {
      "comment": "The serialized object, or null if the stream could not be created.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "serialize(net.sf.freecol.common.io.FreeColXMLWriter.WriteScope scope)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": [
      {
        "comment": "if there are any problems writing to the stream.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "XMLStreamException",
          "qualifiedName": "javax.xml.stream.XMLStreamException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "serialize",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The serialized object, or null if the stream could not be created.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "serialize()",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": [
      {
        "comment": "if there are any problems writing to the stream.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "XMLStreamException",
          "qualifiedName": "javax.xml.stream.XMLStreamException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "copy",
    "paramTags": [
      {
        "comment": "The Game to add the object to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "game",
          "type": {
            "isArray": false,
            "name": "Game",
            "qualifiedName": "net.sf.freecol.common.model.Game"
          }
        }
      },
      {
        "comment": "The required object class.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "returnClass",
          "type": {
            "isArray": false,
            "name": "Class",
            "qualifiedName": "java.lang.Class"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "game",
        "type": {
          "isArray": false,
          "name": "Game",
          "qualifiedName": "net.sf.freecol.common.model.Game"
        }
      },
      {
        "name": "returnClass",
        "type": {
          "isArray": false,
          "name": "Class",
          "qualifiedName": "java.lang.Class"
        }
      }
    ],
    "returnTag": {
      "comment": "The copied object, or null on error.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "T",
      "qualifiedName": "T"
    },
    "signature": "copy(net.sf.freecol.common.model.Game game,java.lang.Class returnClass)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "toXML",
    "paramTags": [
      {
        "comment": "The FreeColXMLWriter to write to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "xw",
          "type": {
            "isArray": false,
            "name": "FreeColXMLWriter",
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "xw",
        "type": {
          "isArray": false,
          "name": "FreeColXMLWriter",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "toXML(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": [
      {
        "comment": "if there are any problems writing to the stream.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "XMLStreamException",
          "qualifiedName": "javax.xml.stream.XMLStreamException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "toXML",
    "paramTags": [
      {
        "comment": "The FreeColXMLWriter to write to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "xw",
          "type": {
            "isArray": false,
            "name": "FreeColXMLWriter",
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter"
          }
        }
      },
      {
        "comment": "The tag to use.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "tag",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "xw",
        "type": {
          "isArray": false,
          "name": "FreeColXMLWriter",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter"
        }
      },
      {
        "name": "tag",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "toXML(net.sf.freecol.common.io.FreeColXMLWriter xw,java.lang.String tag)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": [
      {
        "comment": "if there are any problems writing to the stream.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "XMLStreamException",
          "qualifiedName": "javax.xml.stream.XMLStreamException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "toXMLPartial",
    "paramTags": [
      {
        "comment": "The FreeColXMLWriter to write to.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "xw",
          "type": {
            "isArray": false,
            "name": "FreeColXMLWriter",
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter"
          }
        }
      },
      {
        "comment": "The fields to write.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "fields",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "String",
              "qualifiedName": "java.lang.String"
            },
            "isArray": true,
            "name": "String[]",
            "qualifiedName": "java.lang.String[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "xw",
        "type": {
          "isArray": false,
          "name": "FreeColXMLWriter",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter"
        }
      },
      {
        "name": "fields",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          },
          "isArray": true,
          "name": "String[]",
          "qualifiedName": "java.lang.String[]"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "toXMLPartial(net.sf.freecol.common.io.FreeColXMLWriter xw,java.lang.String[] fields)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": [
      {
        "comment": "if there are any problems writing to the stream.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "XMLStreamException",
          "qualifiedName": "javax.xml.stream.XMLStreamException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FreeColObject",
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject"
    },
    "isVarArgs": false,
    "name": "readFromXMLPartial",
    "paramTags": [
      {
        "comment": "The input stream with the XML.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "xr",
          "type": {
            "isArray": false,
            "name": "FreeColXMLReader",
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "xr",
        "type": {
          "isArray": false,
          "name": "FreeColXMLReader",
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "readFromXMLPartial(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "targetClass": "net.sf.freecol.common.model.Player",
    "throwsTags": [
      {
        "comment": "if a problem was encountered during parsing.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "XMLStreamException",
          "qualifiedName": "javax.xml.stream.XMLStreamException"
        },
        "kind": "@throws"
      }
    ]
  }
]
