[
  {
    "signature": "net.sf.freecol.common.model.UnitLocation(net.sf.freecol.common.model.Game game)",
    "name": "net.sf.freecol.common.model.UnitLocation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "net.sf.freecol.common.model.UnitLocation(net.sf.freecol.common.model.Game game, java.lang.String id)",
    "name": "net.sf.freecol.common.model.UnitLocation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "net.sf.freecol.common.model.UnitLocation(net.sf.freecol.common.model.Game game, org.w3c.dom.Element e)",
    "name": "net.sf.freecol.common.model.UnitLocation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Element",
            "name": "Element",
            "isArray": false
          },
          "name": "e"
        },
        "comment": "The Element to read from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a boolean value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isFull()",
    "name": "isFull",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this location is full.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFirstUnit()",
    "name": "getFirstUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Unit",
      "name": "net.sf.freecol.common.model.Unit",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The first Unit.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLastUnit()",
    "name": "getLastUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Unit",
      "name": "net.sf.freecol.common.model.Unit",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The last Unit.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTotalUnitCount()",
    "name": "getTotalUnitCount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The total number of Units at this Location.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasCarrierWithSpace(int space)",
    "name": "hasCarrierWithSpace",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "space"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "space"
        },
        "comment": "The amount of space to require.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if there is a suitable unit present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNavalUnits()",
    "name": "getNavalUnits",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<net.sf.freecol.common.model.Unit>",
      "name": "java.util.List<net.sf.freecol.common.model.Unit>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of naval Units present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCarrierForUnit(net.sf.freecol.common.model.Unit unit)",
    "name": "getCarrierForUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Unit",
      "name": "net.sf.freecol.common.model.Unit",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to carry.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A suitable carrier or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDisposeList()",
    "name": "getDisposeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<net.sf.freecol.common.model.FreeColGameObject>",
      "name": "java.util.List<net.sf.freecol.common.model.FreeColGameObject>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "disposeResources()",
    "name": "disposeResources",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTile()",
    "name": "getTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Tile",
      "name": "net.sf.freecol.common.model.Tile",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLocationLabel()",
    "name": "getLocationLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "net.sf.freecol.common.model.StringTemplate",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLocationLabelFor(net.sf.freecol.common.model.Player player)",
    "name": "getLocationLabelFor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "net.sf.freecol.common.model.StringTemplate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "add(net.sf.freecol.common.model.Locatable locatable)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Locatable",
          "name": "Locatable",
          "isArray": false
        },
        "name": "locatable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "remove(net.sf.freecol.common.model.Locatable locatable)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Locatable",
          "name": "Locatable",
          "isArray": false
        },
        "name": "locatable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "contains(net.sf.freecol.common.model.Locatable locatable)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Locatable",
          "name": "Locatable",
          "isArray": false
        },
        "name": "locatable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "canAdd(net.sf.freecol.common.model.Locatable locatable)",
    "name": "canAdd",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Locatable",
          "name": "Locatable",
          "isArray": false
        },
        "name": "locatable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getUnitCount()",
    "name": "getUnitCount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getUnitList()",
    "name": "getUnitList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<net.sf.freecol.common.model.Unit>",
      "name": "java.util.List<net.sf.freecol.common.model.Unit>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getUnitIterator()",
    "name": "getUnitIterator",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<net.sf.freecol.common.model.Unit>",
      "name": "java.util.Iterator<net.sf.freecol.common.model.Unit>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getGoodsContainer()",
    "name": "getGoodsContainer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "net.sf.freecol.common.model.GoodsContainer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSettlement()",
    "name": "getSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "net.sf.freecol.common.model.Settlement",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getColony()",
    "name": "getColony",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Colony",
      "name": "net.sf.freecol.common.model.Colony",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getIndianSettlement()",
    "name": "getIndianSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "net.sf.freecol.common.model.IndianSettlement",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSpaceTaken()",
    "name": "getSpaceTaken",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The sum of the space taken by the units in this location.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "moveToFront(net.sf.freecol.common.model.Unit u)",
    "name": "moveToFront",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "u"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "u"
        },
        "comment": "The Unit to move to the front.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "clearUnitList()",
    "name": "clearUnitList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNoAddReason(net.sf.freecol.common.model.Locatable locatable)",
    "name": "getNoAddReason",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation$NoAddReason",
      "name": "net.sf.freecol.common.model.UnitLocation$NoAddReason",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Locatable",
          "name": "Locatable",
          "isArray": false
        },
        "name": "locatable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Locatable",
            "name": "Locatable",
            "isArray": false
          },
          "name": "locatable"
        },
        "comment": "The Locatable to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The reason why adding would fail.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUnitCapacity()",
    "name": "getUnitCapacity",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Integer.MAX_VALUE, denoting no effective limit.",
      "kind": "RETURN",
      "condition": "true ? methodResultID==Integer.MAX_VALUE"
    },
    "throwsTags": []
  },
  {
    "signature": "priceGoods(java.util.List<net.sf.freecol.common.model.AbstractGoods> goods)",
    "name": "priceGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The list of AbstractGoods to check for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "Negative if the goods are unavailable, otherwise the price (may be zero).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equipForRole(net.sf.freecol.common.model.Unit unit, net.sf.freecol.common.model.Role role, int roleCount)",
    "name": "equipForRole",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Role",
          "name": "Role",
          "isArray": false
        },
        "name": "role"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "roleCount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to equip.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Role",
            "name": "Role",
            "isArray": false
          },
          "name": "role"
        },
        "comment": "The Role to build for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "roleCount"
        },
        "comment": "The role count.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the equipping succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation",
      "name": "UnitLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.UnitLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]
