[
  {
    "signature": "net.sf.freecol.common.model.BuildingType(java.lang.String id, net.sf.freecol.common.model.Specification specification)",
    "name": "net.sf.freecol.common.model.BuildingType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to refer to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLevel()",
    "name": "getLevel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The building level.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWorkPlaces()",
    "name": "getWorkPlaces",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The number of work places.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUpkeep()",
    "name": "getUpkeep",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The per turn upkeep for this building type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPriority()",
    "name": "getPriority",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The consumption priority.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNoAddReason(net.sf.freecol.common.model.UnitType unitType)",
    "name": "getNoAddReason",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation$NoAddReason",
      "name": "net.sf.freecol.common.model.UnitLocation$NoAddReason",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "unitType"
        },
        "comment": "The UnitType to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The reason why adding would fail.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canAdd(net.sf.freecol.common.model.UnitType unitType)",
    "name": "canAdd",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "unitType"
        },
        "comment": "The UnitType to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the unit type can be added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getType()",
    "name": "getType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
      "name": "net.sf.freecol.common.model.FreeColGameObjectType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "This.",
      "kind": "RETURN",
      "condition": "true ? result==receiverObjectID"
    },
    "throwsTags": []
  },
  {
    "signature": "getUpgradesFrom()",
    "name": "getUpgradesFrom",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "net.sf.freecol.common.model.BuildingType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The BuildingType that upgrades to this one.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUpgradesTo()",
    "name": "getUpgradesTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "net.sf.freecol.common.model.BuildingType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The BuildingType to upgrade to from this one.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFirstLevel()",
    "name": "getFirstLevel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "net.sf.freecol.common.model.BuildingType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The base BuildingType.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isAutomaticBuild()",
    "name": "isAutomaticBuild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this building type is automatically built.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addProductionType(net.sf.freecol.common.model.ProductionType productionType)",
    "name": "addProductionType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.ProductionType",
          "name": "ProductionType",
          "isArray": false
        },
        "name": "productionType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.ProductionType",
            "name": "ProductionType",
            "isArray": false
          },
          "name": "productionType"
        },
        "comment": "The ProductionType to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getAvailableProductionTypes(boolean unattended)",
    "name": "getAvailableProductionTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<net.sf.freecol.common.model.ProductionType>",
      "name": "java.util.List<net.sf.freecol.common.model.ProductionType>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "unattended"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "unattended"
        },
        "comment": "Whether the production is unattended.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of ProductionTypes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAvailableProductionTypes(boolean unattended, java.lang.String level)",
    "name": "getAvailableProductionTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<net.sf.freecol.common.model.ProductionType>",
      "name": "java.util.List<net.sf.freecol.common.model.ProductionType>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "unattended"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "level"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "unattended"
        },
        "comment": "Whether the production is unattended.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "level"
        },
        "comment": "The production level (NYI).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of ProductionTypes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getProducedGoodsType()",
    "name": "getProducedGoodsType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "net.sf.freecol.common.model.GoodsType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The produced GoodsType.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isDefenceType()",
    "name": "isDefenceType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a defence related building.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canProduce(net.sf.freecol.common.model.GoodsType goodsType, net.sf.freecol.common.model.UnitType unitType)",
    "name": "canProduce",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to produce.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "unitType"
        },
        "comment": "An optional UnitType that is to do the work. unitType is if null the unattended production is considered.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if this tile type produces the goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBaseProduction(net.sf.freecol.common.model.ProductionType productionType, net.sf.freecol.common.model.GoodsType goodsType, net.sf.freecol.common.model.UnitType unitType)",
    "name": "getBaseProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.ProductionType",
          "name": "ProductionType",
          "isArray": false
        },
        "name": "productionType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.ProductionType",
            "name": "ProductionType",
            "isArray": false
          },
          "name": "productionType"
        },
        "comment": "An optional ProductionType to use. productionType is if null the best available one is used.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to produce.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "unitType"
        },
        "comment": "An optional UnitType that is to do the work. unitType is if null the unattended production is considered.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The amount of goods produced.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPotentialProduction(net.sf.freecol.common.model.GoodsType goodsType, net.sf.freecol.common.model.UnitType unitType)",
    "name": "getPotentialProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to produce.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "unitType"
        },
        "comment": "An optional UnitType that is to do the work. unitType is if null the unattended production is considered.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The amount of goods produced.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compareTo(net.sf.freecol.common.model.FreeColObject other)",
    "name": "compareTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
          "name": "FreeColObject",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.BuildingType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"building-type\".",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]
