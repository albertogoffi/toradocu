[
  {
    "signature": "getStream(java.lang.String name)",
    "name": "getStream",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.netstream.NetStreamDecoder",
      "name": "NetStreamDecoder",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.netstream.NetStreamDecoder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.stream.thread.ThreadProxyPipe",
      "name": "org.graphstream.stream.thread.ThreadProxyPipe",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "Identifier of the stream.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the identified pipe.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDefaultStream()",
    "name": "getDefaultStream",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.netstream.NetStreamDecoder",
      "name": "NetStreamDecoder",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.netstream.NetStreamDecoder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.graphstream.stream.thread.ThreadProxyPipe",
      "name": "org.graphstream.stream.thread.ThreadProxyPipe",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "register(java.lang.String name, org.graphstream.stream.thread.ThreadProxyPipe stream)",
    "name": "register",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.netstream.NetStreamDecoder",
      "name": "NetStreamDecoder",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.netstream.NetStreamDecoder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "org.graphstream.stream.thread.ThreadProxyPipe",
          "name": "ThreadProxyPipe",
          "isArray": false
        },
        "name": "stream"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "Filter only message with this name to the given message box.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.graphstream.stream.thread.ThreadProxyPipe",
            "name": "ThreadProxyPipe",
            "isArray": false
          },
          "name": "stream"
        },
        "comment": "The ThreadProxyPipe to push the events to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.Exception",
          "name": "Exception",
          "isArray": false
        },
        "codeTags": [],
        "comment": "another Pipe is already registered at the given name.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "decodeMessage(java.io.InputStream in)",
    "name": "decodeMessage",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.netstream.NetStreamDecoder",
      "name": "NetStreamDecoder",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.netstream.NetStreamDecoder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setDebugOn(boolean on)",
    "name": "setDebugOn",
    "containingClass": {
      "qualifiedName": "org.graphstream.stream.netstream.NetStreamDecoder",
      "name": "NetStreamDecoder",
      "isArray": false
    },
    "targetClass": "org.graphstream.stream.netstream.NetStreamDecoder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "on"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]