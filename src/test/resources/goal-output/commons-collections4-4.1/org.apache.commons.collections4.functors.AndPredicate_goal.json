[
  {
    "signature": "AndPredicate(org.apache.commons.collections4.Predicate predicate1,org.apache.commons.collections4.Predicate predicate2)",
    "name": "AndPredicate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.AndPredicate",
      "name": "AndPredicate",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.AndPredicate",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate1"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate1"
        },
        "comment": "the first predicate to check, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate2"
        },
        "comment": "the second predicate to check, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "andPredicate(org.apache.commons.collections4.Predicate predicate1,org.apache.commons.collections4.Predicate predicate2)",
    "name": "andPredicate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.AndPredicate",
      "name": "AndPredicate",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.AndPredicate",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Predicate",
      "name": "Predicate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate1"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate1"
        },
        "comment": "the first predicate to check, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate2"
        },
        "comment": "the second predicate to check, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the and predicate",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either predicate is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "evaluate(java.lang.Object object)",
    "name": "evaluate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.AndPredicate",
      "name": "AndPredicate",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.AndPredicate",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the input object",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if both decorated predicates return true",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPredicates()",
    "name": "getPredicates",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.AndPredicate",
      "name": "AndPredicate",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.AndPredicate",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Predicate[]",
      "name": "Predicate[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.collections4.Predicate",
        "name": "Predicate",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the predicates",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]
