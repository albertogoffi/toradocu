[
  {
    "signature": "ArrayStack()",
    "name": "ArrayStack",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ArrayStack",
      "name": "ArrayStack",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ArrayStack",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "ArrayStack(int initialSize)",
    "name": "ArrayStack",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ArrayStack",
      "name": "ArrayStack",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ArrayStack",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialSize"
        },
        "comment": "the initial size to use",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified initial size is negative",
        "kind": "THROWS",
        "condition": "args[0]<0"
      }
    ]
  },
  {
    "signature": "empty()",
    "name": "empty",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ArrayStack",
      "name": "ArrayStack",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ArrayStack",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if the stack is currently empty",
      "kind": "RETURN",
      "condition": "target.isEmpty() ? result==true"
    },
    "throwsTags": []
  },
  {
    "signature": "peek()",
    "name": "peek",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ArrayStack",
      "name": "ArrayStack",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ArrayStack",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the top item on the stack",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.peek())"
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.util.EmptyStackException",
          "name": "EmptyStackException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the stack is empty",
        "kind": "THROWS",
        "condition": "target.isEmpty()"
      }
    ]
  },
  {
    "signature": "peek(int n)",
    "name": "peek",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ArrayStack",
      "name": "ArrayStack",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ArrayStack",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "the number of items down to go",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the n'th item on the stack, zero relative",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.get(target.size() - args[0])-1)"
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.util.EmptyStackException",
          "name": "EmptyStackException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are not enough items on the stack to satisfy this request",
        "kind": "THROWS",
        "condition": "target.size()<args[0]"
      }
    ]
  },
  {
    "signature": "pop()",
    "name": "pop",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ArrayStack",
      "name": "ArrayStack",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ArrayStack",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the top item on the stack",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.util.EmptyStackException",
          "name": "EmptyStackException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the stack is empty",
        "kind": "THROWS",
        "condition": "target.isEmpty()"
      }
    ]
  },
  {
    "signature": "push(java.lang.Object item)",
    "name": "push",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ArrayStack",
      "name": "ArrayStack",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ArrayStack",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "item"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "item"
        },
        "comment": "the item to be added",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the item just pushed",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "search(java.lang.Object object)",
    "name": "search",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ArrayStack",
      "name": "ArrayStack",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ArrayStack",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the object to be searched for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the 1-based depth into the stack of the object, or -1 if not found",
      "kind": "RETURN",
      "condition": "target.contains(args[0]) ? result==target.indexOf(args[0])+1 : result==-1"
    },
    "throwsTags": []
  }
]
