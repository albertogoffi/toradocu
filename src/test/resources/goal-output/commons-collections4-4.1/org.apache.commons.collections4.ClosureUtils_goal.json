[
  {
    "signature": "exceptionClosure()",
    "name": "exceptionClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "nopClosure()",
    "name": "nopClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "asClosure(org.apache.commons.collections4.Transformer transformer)",
    "name": "asClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transformer"
        },
        "comment": "the transformer to run each time in the closure, null means nop",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "forClosure(int count,org.apache.commons.collections4.Closure closure)",
    "name": "forClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "count"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "closure"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "count"
        },
        "comment": "the number of times to loop",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "closure"
        },
        "comment": "the closure to call repeatedly",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the for closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "whileClosure(org.apache.commons.collections4.Predicate predicate,org.apache.commons.collections4.Closure closure)",
    "name": "whileClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "closure"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use as an end of loop test, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "closure"
        },
        "comment": "the closure to call repeatedly, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the while closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either argument is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "doWhileClosure(org.apache.commons.collections4.Closure closure,org.apache.commons.collections4.Predicate predicate)",
    "name": "doWhileClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "closure"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "closure"
        },
        "comment": "the closure to call repeatedly, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use as an end of loop test, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the do-while closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either argument is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "invokerClosure(java.lang.String methodName)",
    "name": "invokerClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "methodName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "methodName"
        },
        "comment": "the name of the method",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the invoker closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the method name is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "invokerClosure(java.lang.String methodName,java.lang.Class[] paramTypes,java.lang.Object[] args)",
    "name": "invokerClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "methodName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class[]",
          "name": "Class[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          }
        },
        "name": "paramTypes"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "args"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "methodName"
        },
        "comment": "the name of the method",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class[]",
            "name": "Class[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Class",
              "name": "Class",
              "isArray": false
            }
          },
          "name": "paramTypes"
        },
        "comment": "the parameter types",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "args"
        },
        "comment": "the arguments",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the invoker closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the method name is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the paramTypes and args don't match",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "chainedClosure(org.apache.commons.collections4.Closure[] closures)",
    "name": "chainedClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure[]",
          "name": "Closure[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          }
        },
        "name": "closures"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure[]",
            "name": "Closure[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Closure",
              "name": "Closure",
              "isArray": false
            }
          },
          "name": "closures"
        },
        "comment": "an array of closures to chain",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the chained closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the closures array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any closure in the array is null",
        "kind": "THROWS",
        "condition": "java.util.Arrays.stream(args[0]).anyMatch(e -> e==null)"
      }
    ]
  },
  {
    "signature": "chainedClosure(java.util.Collection closures)",
    "name": "chainedClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "closures"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "closures"
        },
        "comment": "a collection of closures to chain",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the chained closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the closures collection is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any closure in the collection is null",
        "kind": "THROWS",
        "condition": "args[0].stream().anyMatch(e -> e==null)"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the closures collection is empty",
        "kind": "THROWS",
        "condition": "args[0].isEmpty()"
      }
    ]
  },
  {
    "signature": "ifClosure(org.apache.commons.collections4.Predicate predicate,org.apache.commons.collections4.Closure trueClosure)",
    "name": "ifClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "trueClosure"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the validating predicate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "trueClosure"
        },
        "comment": "the closure called if the predicate is true",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the if closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the predicate or closure is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "ifClosure(org.apache.commons.collections4.Predicate predicate,org.apache.commons.collections4.Closure trueClosure,org.apache.commons.collections4.Closure falseClosure)",
    "name": "ifClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "trueClosure"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "falseClosure"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to switch on",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "trueClosure"
        },
        "comment": "the closure called if the predicate is true",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "falseClosure"
        },
        "comment": "the closure called if the predicate is false",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the switch closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the predicate or either closure is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null || args[2]==null"
      }
    ]
  },
  {
    "signature": "switchClosure(org.apache.commons.collections4.Predicate[] predicates,org.apache.commons.collections4.Closure[] closures)",
    "name": "switchClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate[]",
          "name": "Predicate[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          }
        },
        "name": "predicates"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure[]",
          "name": "Closure[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          }
        },
        "name": "closures"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate[]",
            "name": "Predicate[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Predicate",
              "name": "Predicate",
              "isArray": false
            }
          },
          "name": "predicates"
        },
        "comment": "an array of predicates to check, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure[]",
            "name": "Closure[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Closure",
              "name": "Closure",
              "isArray": false
            }
          },
          "name": "closures"
        },
        "comment": "an array of closures to call, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the switch closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the either array is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any element in the arrays is null",
        "kind": "THROWS",
        "condition": "java.util.Arrays.stream(args[0]).anyMatch(e -> e==null) || java.util.Arrays.stream(args[1]).anyMatch(e -> e==null)"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the arrays have different sizes",
        "kind": "THROWS",
        "condition": "args[0].length != args[1].length"
      }
    ]
  },
  {
    "signature": "switchClosure(org.apache.commons.collections4.Predicate[] predicates,org.apache.commons.collections4.Closure[] closures,org.apache.commons.collections4.Closure defaultClosure)",
    "name": "switchClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate[]",
          "name": "Predicate[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          }
        },
        "name": "predicates"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure[]",
          "name": "Closure[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          }
        },
        "name": "closures"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "defaultClosure"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate[]",
            "name": "Predicate[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Predicate",
              "name": "Predicate",
              "isArray": false
            }
          },
          "name": "predicates"
        },
        "comment": "an array of predicates to check, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure[]",
            "name": "Closure[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Closure",
              "name": "Closure",
              "isArray": false
            }
          },
          "name": "closures"
        },
        "comment": "an array of closures to call, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "defaultClosure"
        },
        "comment": "the default to call if no predicate matches",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the switch closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the either array is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any element in the arrays is null",
        "kind": "THROWS",
        "condition": "java.util.Arrays.stream(args[0]).anyMatch(e -> e==null) || java.util.Arrays.stream(args[1]).anyMatch(e -> e==null)"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the arrays are different sizes",
        "kind": "THROWS",
        "condition": "args[0].length != args[1].length"
      }
    ]
  },
  {
    "signature": "switchClosure(java.util.Map predicatesAndClosures)",
    "name": "switchClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "predicatesAndClosures"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "predicatesAndClosures"
        },
        "comment": "a map of predicates to closures",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the switch closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any closure in the map is null",
        "kind": "THROWS",
        "condition": "args[0].values().stream().anyMatch(e -> e==null)"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is empty",
        "kind": "THROWS",
        "condition": "args[0].isEmpty()"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map elements are of the wrong type",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "switchMapClosure(java.util.Map objectsAndClosures)",
    "name": "switchMapClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.ClosureUtils",
      "name": "ClosureUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.ClosureUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "objectsAndClosures"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "objectsAndClosures"
        },
        "comment": "a map of objects to closures",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the closure",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any closure in the map is null",
        "kind": "THROWS",
        "condition": "args[0].values().stream().anyMatch(e -> e==null)"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is empty",
        "kind": "THROWS",
        "condition": "args[0].isEmpty()"
      }
    ]
  }
]
