[
  {
    "signature": "LRUMap()",
    "name": "LRUMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "LRUMap(int maxSize)",
    "name": "LRUMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximum size is less than one",
        "kind": "THROWS",
        "condition": "args[0]<1"
      }
    ]
  },
  {
    "signature": "LRUMap(int maxSize,int initialSize)",
    "name": "LRUMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialSize"
        },
        "comment": "the initial size of the map",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximum size is less than one",
        "kind": "THROWS",
        "condition": "args[0]<1"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the initial size is negative or larger than the maximum size",
        "kind": "THROWS",
        "condition": "args[1]<0 || args[1]>args[0]"
      }
    ]
  },
  {
    "signature": "LRUMap(int maxSize,boolean scanUntilRemovable)",
    "name": "LRUMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "scanUntilRemovable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "scanUntilRemovable"
        },
        "comment": "scan until a removeable entry is found, default false",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximum size is less than one",
        "kind": "THROWS",
        "condition": "args[0]<1"
      }
    ]
  },
  {
    "signature": "LRUMap(int maxSize,float loadFactor)",
    "name": "LRUMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "loadFactor"
        },
        "comment": "the load factor",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximum size is less than one",
        "kind": "THROWS",
        "condition": "args[0]<1"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the load factor is less than zero",
        "kind": "THROWS",
        "condition": "args[1]<0"
      }
    ]
  },
  {
    "signature": "LRUMap(int maxSize,int initialSize,float loadFactor)",
    "name": "LRUMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialSize"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialSize"
        },
        "comment": "the initial size of the map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "loadFactor"
        },
        "comment": "the load factor",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximum size is less than one",
        "kind": "THROWS",
        "condition": "args[0]<1"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the initial size is negative or larger than the maximum size",
        "kind": "THROWS",
        "condition": "args[1]<0 || args[1]>args[0]"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the load factor is less than zero",
        "kind": "THROWS",
        "condition": "args[2]<0"
      }
    ]
  },
  {
    "signature": "LRUMap(int maxSize,float loadFactor,boolean scanUntilRemovable)",
    "name": "LRUMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "scanUntilRemovable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "loadFactor"
        },
        "comment": "the load factor",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "scanUntilRemovable"
        },
        "comment": "scan until a removeable entry is found, default false",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximum size is less than one",
        "kind": "THROWS",
        "condition": "args[0]<1"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the load factor is less than zero",
        "kind": "THROWS",
        "condition": "args[1]<0"
      }
    ]
  },
  {
    "signature": "LRUMap(int maxSize,int initialSize,float loadFactor,boolean scanUntilRemovable)",
    "name": "LRUMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialSize"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "scanUntilRemovable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialSize"
        },
        "comment": "the initial size of the map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "loadFactor"
        },
        "comment": "the load factor",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "scanUntilRemovable"
        },
        "comment": "scan until a removeable entry is found, default false",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximum size is less than one",
        "kind": "THROWS",
        "condition": "args[0]<1"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the initial size is negative or larger than the maximum size",
        "kind": "THROWS",
        "condition": "args[1]<0 || args[1]>args[0]"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the load factor is less than zero",
        "kind": "THROWS",
        "condition": "args[2]<0"
      }
    ]
  },
  {
    "signature": "LRUMap(java.util.Map map)",
    "name": "LRUMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to copy",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is empty",
        "kind": "THROWS",
        "condition": "((args[0]==null)==false)&&(args[0].isEmpty())"
      }
    ]
  },
  {
    "signature": "LRUMap(java.util.Map map,boolean scanUntilRemovable)",
    "name": "LRUMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "scanUntilRemovable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to copy",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "scanUntilRemovable"
        },
        "comment": "scan until a removeable entry is found, default false",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is empty",
        "kind": "THROWS",
        "condition": "((args[0]==null)==false)&&(args[0].isEmpty())"
      }
    ]
  },
  {
    "signature": "get(java.lang.Object key)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the mapped value, null if no match",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "get(java.lang.Object key,boolean updateToMRU)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "updateToMRU"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "updateToMRU"
        },
        "comment": "whether the key shall be updated to the most recently used position",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the mapped value, null if no match",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry entry)",
    "name": "moveToMRU",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
          "name": "LinkEntry",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
            "name": "LinkEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to update",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry entry,java.lang.Object newValue)",
    "name": "updateEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "entry"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to update",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "newValue"
        },
        "comment": "the new value to store",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addMapping(int hashIndex,int hashCode,java.lang.Object key,java.lang.Object value)",
    "name": "addMapping",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashCode"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashIndex"
        },
        "comment": "the index into the data array to store at",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashCode"
        },
        "comment": "the hash code of the key to add",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to add",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to add",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry entry,int hashIndex,int hashCode,java.lang.Object key,java.lang.Object value)",
    "name": "reuseMapping",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
          "name": "LinkEntry",
          "isArray": false
        },
        "name": "entry"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashCode"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
            "name": "LinkEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to reuse",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashIndex"
        },
        "comment": "the index into the data array to store at",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashCode"
        },
        "comment": "the hash code of the key to add",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to add",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to add",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry entry)",
    "name": "removeLRU",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
          "name": "LinkEntry",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
            "name": "LinkEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to be removed",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true",
      "kind": "RETURN",
      "condition": "true ? methodResultID==true"
    },
    "throwsTags": []
  },
  {
    "signature": "isFull()",
    "name": "isFull",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if the map is full",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "maxSize()",
    "name": "maxSize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the maximum number of elements the map can hold",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isScanUntilRemovable()",
    "name": "isScanUntilRemovable",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if this map scans",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clone()",
    "name": "clone",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a shallow clone",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "doWriteObject(java.io.ObjectOutputStream out)",
    "name": "doWriteObject",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.ObjectOutputStream",
          "name": "ObjectOutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.ObjectOutputStream",
            "name": "ObjectOutputStream",
            "isArray": false
          },
          "name": "out"
        },
        "comment": "the output stream",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if an error occurs while writing to the stream",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "doReadObject(java.io.ObjectInputStream in)",
    "name": "doReadObject",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.LRUMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.ObjectInputStream",
          "name": "ObjectInputStream",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.ObjectInputStream",
            "name": "ObjectInputStream",
            "isArray": false
          },
          "name": "in"
        },
        "comment": "the input stream",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if an error occurs while reading from the stream",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ClassNotFoundException",
          "name": "ClassNotFoundException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if an object read from the stream can not be loaded",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]
