[
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "LRUMap",
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "LRUMap()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "LRUMap",
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the maximum size is less than one",
        "kind": "@throws",
        "condition": ""
      }
    ],
    "signature": "LRUMap(int maxSize)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "LRUMap",
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialSize"
        },
        "comment": "the initial size of the map",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the maximum size is less than one",
        "kind": "@throws",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the initial size is negative or larger than the maximum size",
        "kind": "@throws",
        "condition": "args[1]<0"
      }
    ],
    "signature": "LRUMap(int maxSize,int initialSize)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "LRUMap",
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "scanUntilRemovable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "scanUntilRemovable"
        },
        "comment": "scan until a removeable entry is found, default false",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the maximum size is less than one",
        "kind": "@throws",
        "condition": ""
      }
    ],
    "signature": "LRUMap(int maxSize,boolean scanUntilRemovable)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "LRUMap",
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "loadFactor"
        },
        "comment": "the load factor",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the maximum size is less than one",
        "kind": "@throws",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the load factor is less than zero",
        "kind": "@throws",
        "condition": ""
      }
    ],
    "signature": "LRUMap(int maxSize,float loadFactor)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "LRUMap",
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialSize"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialSize"
        },
        "comment": "the initial size of the map",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "loadFactor"
        },
        "comment": "the load factor",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the maximum size is less than one",
        "kind": "@throws",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the initial size is negative or larger than the maximum size",
        "kind": "@throws",
        "condition": "args[1]<0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the load factor is less than zero",
        "kind": "@throws",
        "condition": ""
      }
    ],
    "signature": "LRUMap(int maxSize,int initialSize,float loadFactor)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "LRUMap",
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "scanUntilRemovable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "loadFactor"
        },
        "comment": "the load factor",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "scanUntilRemovable"
        },
        "comment": "scan until a removeable entry is found, default false",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the maximum size is less than one",
        "kind": "@throws",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the load factor is less than zero",
        "kind": "@throws",
        "condition": ""
      }
    ],
    "signature": "LRUMap(int maxSize,float loadFactor,boolean scanUntilRemovable)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "LRUMap",
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialSize"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "scanUntilRemovable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxSize"
        },
        "comment": "the maximum size of the map",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialSize"
        },
        "comment": "the initial size of the map",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "loadFactor"
        },
        "comment": "the load factor",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "scanUntilRemovable"
        },
        "comment": "scan until a removeable entry is found, default false",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the maximum size is less than one",
        "kind": "@throws",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the initial size is negative or larger than the maximum size",
        "kind": "@throws",
        "condition": "args[1]<0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the load factor is less than zero",
        "kind": "@throws",
        "condition": ""
      }
    ],
    "signature": "LRUMap(int maxSize,int initialSize,float loadFactor,boolean scanUntilRemovable)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "LRUMap",
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to copy",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the map is null",
        "kind": "@throws",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the map is empty",
        "kind": "@throws",
        "condition": "args[0].isEmpty()"
      }
    ],
    "signature": "LRUMap(java.util.Map map)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "LRUMap",
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "scanUntilRemovable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to copy",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "scanUntilRemovable"
        },
        "comment": "scan until a removeable entry is found, default false",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the map is null",
        "kind": "@throws",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the map is empty",
        "kind": "@throws",
        "condition": "args[0].isEmpty()"
      }
    ],
    "signature": "LRUMap(java.util.Map map,boolean scanUntilRemovable)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "get",
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "get(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "get",
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "updateToMRU"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "updateToMRU"
        },
        "comment": "whether the key shall be updated to the most recently used position",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "get(java.lang.Object key,boolean updateToMRU)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "moveToMRU",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
          "name": "LinkEntry",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
            "name": "LinkEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to update",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry entry)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "updateEntry",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "entry"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to update",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "newValue"
        },
        "comment": "the new value to store",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry entry,java.lang.Object newValue)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "addMapping",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashCode"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashIndex"
        },
        "comment": "the index into the data array to store at",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashCode"
        },
        "comment": "the hash code of the key to add",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to add",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to add",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "addMapping(int hashIndex,int hashCode,java.lang.Object key,java.lang.Object value)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "reuseMapping",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
          "name": "LinkEntry",
          "isArray": false
        },
        "name": "entry"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashCode"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
            "name": "LinkEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to reuse",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashIndex"
        },
        "comment": "the index into the data array to store at",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashCode"
        },
        "comment": "the hash code of the key to add",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to add",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to add",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry entry,int hashIndex,int hashCode,java.lang.Object key,java.lang.Object value)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "removeLRU",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
          "name": "LinkEntry",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
            "name": "LinkEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to be removed",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry entry)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "isFull",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "isFull()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "maxSize",
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "maxSize()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "isScanUntilRemovable",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "isScanUntilRemovable()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "clone",
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "clone()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "writeObject",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.ObjectOutputStream",
          "name": "ObjectOutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "writeObject(java.io.ObjectOutputStream out)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "readObject",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.ObjectInputStream",
          "name": "ObjectInputStream",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "readObject(java.io.ObjectInputStream in)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "doWriteObject",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.ObjectOutputStream",
          "name": "ObjectOutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.ObjectOutputStream",
            "name": "ObjectOutputStream",
            "isArray": false
          },
          "name": "out"
        },
        "comment": "the output stream",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "comment": "if an error occurs while writing to the stream",
        "kind": "@throws",
        "condition": ""
      }
    ],
    "signature": "doWriteObject(java.io.ObjectOutputStream out)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.LRUMap",
      "name": "LRUMap",
      "isArray": false
    },
    "name": "doReadObject",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.ObjectInputStream",
          "name": "ObjectInputStream",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.ObjectInputStream",
            "name": "ObjectInputStream",
            "isArray": false
          },
          "name": "in"
        },
        "comment": "the input stream",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "comment": "if an error occurs while reading from the stream",
        "kind": "@throws",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ClassNotFoundException",
          "name": "ClassNotFoundException",
          "isArray": false
        },
        "comment": "if an object read from the stream can not be loaded",
        "kind": "@throws",
        "condition": ""
      }
    ],
    "signature": "doReadObject(java.io.ObjectInputStream in)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "init",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "init()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "containsValue",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to search for",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "containsValue(java.lang.Object value)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "clear",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "clear()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "firstKey",
    "returnType": {
      "qualifiedName": "K",
      "name": "K",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.util.NoSuchElementException",
          "name": "NoSuchElementException",
          "isArray": false
        },
        "comment": "if this map is empty",
        "kind": "@throws",
        "condition": "target.isEmpty()"
      }
    ],
    "signature": "firstKey()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "lastKey",
    "returnType": {
      "qualifiedName": "K",
      "name": "K",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.util.NoSuchElementException",
          "name": "NoSuchElementException",
          "isArray": false
        },
        "comment": "if this map is empty",
        "kind": "@throws",
        "condition": "target.isEmpty()"
      }
    ],
    "signature": "lastKey()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "nextKey",
    "returnType": {
      "qualifiedName": "K",
      "name": "K",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to get after",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to search for next from",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "nextKey(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "getEntry",
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
      "name": "LinkEntry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "getEntry(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "previousKey",
    "returnType": {
      "qualifiedName": "K",
      "name": "K",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to get before",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to search for previous from",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "previousKey(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "getEntry",
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
      "name": "LinkEntry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to retrieve",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "comment": "if the index is invalid",
        "kind": "@throws",
        "condition": ""
      }
    ],
    "signature": "getEntry(int index)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "addEntry",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "entry"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to add",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashIndex"
        },
        "comment": "the index into the data array to store at",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "addEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry entry,int hashIndex)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "createEntry",
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
      "name": "LinkEntry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "next"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashCode"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "next"
        },
        "comment": "the next entry in sequence",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashCode"
        },
        "comment": "the hash code to use",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to store",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to store",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "createEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry next,int hashCode,java.lang.Object key,java.lang.Object value)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "removeEntry",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "entry"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashIndex"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "previous"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to remove",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashIndex"
        },
        "comment": "the index into the data structure",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "previous"
        },
        "comment": "the previous entry in the chain",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry entry,int hashIndex,org.apache.commons.collections4.map.AbstractHashedMap.HashEntry previous)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "entryBefore",
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
      "name": "LinkEntry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
          "name": "LinkEntry",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
            "name": "LinkEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to query, must not be null",
        "kind": "@param",
        "condition": "(args[0]==null) == false"
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the entry is null",
        "kind": "@throws",
        "condition": "args[0]==null"
      }
    ],
    "signature": "entryBefore(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry entry)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "entryAfter",
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
      "name": "LinkEntry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
          "name": "LinkEntry",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry",
            "name": "LinkEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to query, must not be null",
        "kind": "@param",
        "condition": "(args[0]==null) == false"
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the entry is null",
        "kind": "@throws",
        "condition": "args[0]==null"
      }
    ],
    "signature": "entryAfter(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry entry)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "mapIterator",
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.OrderedMapIterator",
      "name": "OrderedMapIterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "mapIterator()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "createEntrySetIterator",
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "createEntrySetIterator()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "createKeySetIterator",
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "createKeySetIterator()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractLinkedMap",
      "name": "AbstractLinkedMap",
      "isArray": false
    },
    "name": "createValuesIterator",
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "createValuesIterator()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "size",
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "size()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "isEmpty",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "isEmpty()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "containsKey",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to search for",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "containsKey(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "put",
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to add",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to add",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "put(java.lang.Object key,java.lang.Object value)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "putAll",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to add",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the map is null",
        "kind": "@throws",
        "condition": "args[0]==null"
      }
    ],
    "signature": "putAll(java.util.Map map)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "_putAll",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to add",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the map is null",
        "kind": "@throws",
        "condition": "args[0]==null"
      }
    ],
    "signature": "_putAll(java.util.Map map)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "remove",
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the mapping to remove",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "remove(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "convertKey",
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "Object",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key convert",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "convertKey(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "hash",
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to get a hash code for",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "hash(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "isEqualKey",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key1"
        },
        "comment": "the first key to compare passed in from outside",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key2"
        },
        "comment": "the second key extracted from the entry via entry.key",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "isEqualKey(java.lang.Object key1,java.lang.Object key2)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "isEqualValue",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value1"
        },
        "comment": "the first value to compare passed in from outside",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value2"
        },
        "comment": "the second value extracted from the entry via getValue()",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "isEqualValue(java.lang.Object value1,java.lang.Object value2)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "hashIndex",
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashCode"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dataSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashCode"
        },
        "comment": "the hash code to use",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dataSize"
        },
        "comment": "the size of the data to pick a bucket from",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "hashIndex(int hashCode,int dataSize)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "reuseEntry",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "entry"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashCode"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to update, not null",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashIndex"
        },
        "comment": "the index in the data array",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashCode"
        },
        "comment": "the hash code of the key to add",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to add",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to add",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry entry,int hashIndex,int hashCode,java.lang.Object key,java.lang.Object value)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "removeMapping",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "entry"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hashIndex"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "previous"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to remove",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hashIndex"
        },
        "comment": "the index into the data structure",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "previous"
        },
        "comment": "the previous entry in the chain",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry entry,int hashIndex,org.apache.commons.collections4.map.AbstractHashedMap.HashEntry previous)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "destroyEntry",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to destroy",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry entry)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "checkCapacity",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "checkCapacity()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "ensureCapacity",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newCapacity"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "newCapacity"
        },
        "comment": "the new capacity of the array (a power of two, less or equal to max)",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "ensureCapacity(int newCapacity)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "calculateNewCapacity",
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "proposedCapacity"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "proposedCapacity"
        },
        "comment": "the proposed capacity",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "calculateNewCapacity(int proposedCapacity)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "calculateThreshold",
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newCapacity"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "factor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "newCapacity"
        },
        "comment": "the new capacity",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "factor"
        },
        "comment": "the load factor",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "calculateThreshold(int newCapacity,float factor)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "entryNext",
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
      "name": "HashEntry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to query, must not be null",
        "kind": "@param",
        "condition": "(args[0]==null) == false"
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the entry is null",
        "kind": "@throws",
        "condition": "args[0]==null"
      }
    ],
    "signature": "entryNext(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry entry)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "entryHashCode",
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to query, must not be null",
        "kind": "@param",
        "condition": "(args[0]==null) == false"
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the entry is null",
        "kind": "@throws",
        "condition": "args[0]==null"
      }
    ],
    "signature": "entryHashCode(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry entry)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "entryKey",
    "returnType": {
      "qualifiedName": "K",
      "name": "K",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to query, must not be null",
        "kind": "@param",
        "condition": "(args[0]==null) == false"
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the entry is null",
        "kind": "@throws",
        "condition": "args[0]==null"
      }
    ],
    "signature": "entryKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry entry)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "entryValue",
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
          "name": "HashEntry",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry",
            "name": "HashEntry",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry to query, must not be null",
        "kind": "@param",
        "condition": "(args[0]==null) == false"
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the entry is null",
        "kind": "@throws",
        "condition": "args[0]==null"
      }
    ],
    "signature": "entryValue(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry entry)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "entrySet",
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "entrySet()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "keySet",
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "keySet()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "values",
    "returnType": {
      "qualifiedName": "java.util.Collection",
      "name": "Collection",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "values()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "equals",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to compare to",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "equals(java.lang.Object obj)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "hashCode",
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "hashCode()"
  },
  {
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractHashedMap",
      "name": "AbstractHashedMap",
      "isArray": false
    },
    "name": "toString",
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "toString()"
  },
  {
    "containingClass": {
      "qualifiedName": "java.util.AbstractMap",
      "name": "AbstractMap",
      "isArray": false
    },
    "name": "eq",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "arg0"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "arg1"
      }
    ],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "eq(java.lang.Object arg0,java.lang.Object arg1)"
  }
]