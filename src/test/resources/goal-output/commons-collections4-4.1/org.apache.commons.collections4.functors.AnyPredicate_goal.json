[
  {
    "signature": "AnyPredicate(org.apache.commons.collections4.Predicate[] predicates)",
    "name": "AnyPredicate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.AnyPredicate",
      "name": "AnyPredicate",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.AnyPredicate",
    "isVarArgs": true,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate[]",
          "name": "Predicate[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          }
        },
        "name": "predicates"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate[]",
            "name": "Predicate[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Predicate",
              "name": "Predicate",
              "isArray": false
            }
          },
          "name": "predicates"
        },
        "comment": "the predicates to check, not cloned, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "anyPredicate(org.apache.commons.collections4.Predicate[] predicates)",
    "name": "anyPredicate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.AnyPredicate",
      "name": "AnyPredicate",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.AnyPredicate",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Predicate",
      "name": "Predicate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate[]",
          "name": "Predicate[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          }
        },
        "name": "predicates"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate[]",
            "name": "Predicate[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Predicate",
              "name": "Predicate",
              "isArray": false
            }
          },
          "name": "predicates"
        },
        "comment": "the predicates to check, cloned, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the any predicate",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the predicates array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any predicate in the array is null",
        "kind": "THROWS",
        "condition": "java.util.Arrays.stream(args[0]).anyMatch(e -> e==null)"
      }
    ]
  },
  {
    "signature": "anyPredicate(java.util.Collection predicates)",
    "name": "anyPredicate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.AnyPredicate",
      "name": "AnyPredicate",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.AnyPredicate",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Predicate",
      "name": "Predicate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "predicates"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "predicates"
        },
        "comment": "the predicates to check, cloned, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the all predicate",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the predicates array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any predicate in the array is null",
        "kind": "THROWS",
        "condition": "args[0].stream().anyMatch(e -> e==null)"
      }
    ]
  },
  {
    "signature": "evaluate(java.lang.Object object)",
    "name": "evaluate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.AnyPredicate",
      "name": "AnyPredicate",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.AnyPredicate",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the input object",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if any decorated predicate return true",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]
