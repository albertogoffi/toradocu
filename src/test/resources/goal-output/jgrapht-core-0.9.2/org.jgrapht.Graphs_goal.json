[
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "addEdge",
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "g"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "sourceVertex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "targetVertex"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "weight"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "g"
        },
        "comment": "the graph for which the edge to be added.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "sourceVertex"
        },
        "comment": "source vertex of the edge.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "targetVertex"
        },
        "comment": "target vertex of the edge.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "weight"
        },
        "comment": "weight of the edge.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "addEdge(org.jgrapht.Graph g,java.lang.Object sourceVertex,java.lang.Object targetVertex,double weight)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "addEdgeWithVertices",
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "g"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "sourceVertex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "targetVertex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "g"
        },
        "comment": "the graph for which the specified edge to be added.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "sourceVertex"
        },
        "comment": "source vertex of the edge.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "targetVertex"
        },
        "comment": "target vertex of the edge.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "addEdgeWithVertices(org.jgrapht.Graph g,java.lang.Object sourceVertex,java.lang.Object targetVertex)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "addEdgeWithVertices",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "targetGraph"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "sourceGraph"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "edge"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "targetGraph"
        },
        "comment": "the graph for which the specified edge to be added.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "sourceGraph"
        },
        "comment": "the graph in which the specified edge is already present",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "edge"
        },
        "comment": "edge to add",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "addEdgeWithVertices(org.jgrapht.Graph targetGraph,org.jgrapht.Graph sourceGraph,java.lang.Object edge)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "addEdgeWithVertices",
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "g"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "sourceVertex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "targetVertex"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "weight"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "g"
        },
        "comment": "the graph for which the specified edge to be added.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "sourceVertex"
        },
        "comment": "source vertex of the edge.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "targetVertex"
        },
        "comment": "target vertex of the edge.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "weight"
        },
        "comment": "weight of the edge.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "addEdgeWithVertices(org.jgrapht.Graph g,java.lang.Object sourceVertex,java.lang.Object targetVertex,double weight)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "addGraph",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "destination"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "source"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "destination"
        },
        "comment": "the graph to which vertices and edges are added.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "source"
        },
        "comment": "the graph used as source for vertices and edges to add.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "addGraph(org.jgrapht.Graph destination,org.jgrapht.Graph source)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "addGraphReversed",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.DirectedGraph",
          "name": "DirectedGraph",
          "isArray": false
        },
        "name": "destination"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.DirectedGraph",
          "name": "DirectedGraph",
          "isArray": false
        },
        "name": "source"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.DirectedGraph",
            "name": "DirectedGraph",
            "isArray": false
          },
          "name": "destination"
        },
        "comment": "the graph to which vertices and edges are added.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.DirectedGraph",
            "name": "DirectedGraph",
            "isArray": false
          },
          "name": "source"
        },
        "comment": "the graph used as source for vertices and edges to add.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "addGraphReversed(org.jgrapht.DirectedGraph destination,org.jgrapht.DirectedGraph source)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "addAllEdges",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "destination"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "source"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "edges"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "destination"
        },
        "comment": "the graph to which edges are to be added",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "source"
        },
        "comment": "the graph used as a source for edges to add",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "edges"
        },
        "comment": "the edges to be added",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "addAllEdges(org.jgrapht.Graph destination,org.jgrapht.Graph source,java.util.Collection edges)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "addAllVertices",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "destination"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "vertices"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "destination"
        },
        "comment": "the graph to which edges are to be added",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "vertices"
        },
        "comment": "the vertices to be added to the graph.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the specified vertices contains one or more null vertices, or if the specified vertex collection is null.",
        "kind": "@throws",
        "condition": "args[1].contains(null) || args[1]==null"
      }
    ],
    "signature": "addAllVertices(org.jgrapht.Graph destination,java.util.Collection vertices)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "neighborListOf",
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "g"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "g"
        },
        "comment": "the graph to look for neighbors in.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "vertex"
        },
        "comment": "the vertex to get the neighbors of.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "neighborListOf(org.jgrapht.Graph g,java.lang.Object vertex)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "predecessorListOf",
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.DirectedGraph",
          "name": "DirectedGraph",
          "isArray": false
        },
        "name": "g"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.DirectedGraph",
            "name": "DirectedGraph",
            "isArray": false
          },
          "name": "g"
        },
        "comment": "the graph to look for predecessors in.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "vertex"
        },
        "comment": "the vertex to get the predecessors of.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "predecessorListOf(org.jgrapht.DirectedGraph g,java.lang.Object vertex)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "successorListOf",
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.DirectedGraph",
          "name": "DirectedGraph",
          "isArray": false
        },
        "name": "g"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.DirectedGraph",
            "name": "DirectedGraph",
            "isArray": false
          },
          "name": "g"
        },
        "comment": "the graph to look for successors in.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "vertex"
        },
        "comment": "the vertex to get the successors of.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "successorListOf(org.jgrapht.DirectedGraph g,java.lang.Object vertex)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "undirectedGraph",
    "returnType": {
      "qualifiedName": "org.jgrapht.UndirectedGraph",
      "name": "UndirectedGraph",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "g"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "g"
        },
        "comment": "the graph for which an undirected view is to be returned.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "if the graph is neither DirectedGraph nor UndirectedGraph.",
        "kind": "@throws",
        "condition": "!(args[0] instanceof org.jgrapht.DirectedGraph) && !(args[0] instanceof org.jgrapht.UndirectedGraph)"
      }
    ],
    "signature": "undirectedGraph(org.jgrapht.Graph g)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "testIncidence",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "g"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "g"
        },
        "comment": "graph containing e and v",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "e"
        },
        "comment": "edge in g",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "vertex in g",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "testIncidence(org.jgrapht.Graph g,java.lang.Object e,java.lang.Object v)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "getOppositeVertex",
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "g"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "g"
        },
        "comment": "graph containing e and v",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "e"
        },
        "comment": "edge in g",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "vertex in g",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "getOppositeVertex(org.jgrapht.Graph g,java.lang.Object e,java.lang.Object v)"
  },
  {
    "containingClass": {
      "qualifiedName": "org.jgrapht.Graphs",
      "name": "Graphs",
      "isArray": false
    },
    "name": "getPathVertexList",
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.GraphPath",
          "name": "GraphPath",
          "isArray": false
        },
        "name": "path"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.GraphPath",
            "name": "GraphPath",
            "isArray": false
          },
          "name": "path"
        },
        "comment": "path of interest",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "getPathVertexList(org.jgrapht.GraphPath path)"
  }
]
