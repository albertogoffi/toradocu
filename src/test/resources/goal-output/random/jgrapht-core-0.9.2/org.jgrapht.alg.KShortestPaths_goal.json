[
  {
    "signature": "KShortestPaths(org.jgrapht.Graph graph,java.lang.Object startVertex,int k)",
    "name": "KShortestPaths",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.KShortestPaths",
      "name": "KShortestPaths",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.KShortestPaths",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "graph"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "startVertex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "k"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "graph"
        },
        "comment": "",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "startVertex"
        },
        "comment": "",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "k"
        },
        "comment": "number of paths to be computed.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "KShortestPaths(org.jgrapht.Graph graph,java.lang.Object startVertex,int nPaths,int nMaxHops)",
    "name": "KShortestPaths",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.KShortestPaths",
      "name": "KShortestPaths",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.KShortestPaths",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "graph"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "startVertex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "nPaths"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "nMaxHops"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "graph"
        },
        "comment": "graph on which shortest paths are searched.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "startVertex"
        },
        "comment": "start vertex of the calculated paths.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "nPaths"
        },
        "comment": "number of ranking paths between the start vertex and an end vertex.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "nMaxHops"
        },
        "comment": "maximum number of edges of the calculated paths.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "null"
        ],
        "comment": "if the specified graph or startVertex is null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if nPaths is negative or 0.",
        "kind": "THROWS",
        "condition": "args[2]<0 || args[2]==0"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if nMaxHops is negative or 0.",
        "kind": "THROWS",
        "condition": "args[3]<0 || args[3]==0"
      }
    ]
  },
  {
    "signature": "getPaths(java.lang.Object endVertex)",
    "name": "getPaths",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.KShortestPaths",
      "name": "KShortestPaths",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.KShortestPaths",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "endVertex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "endVertex"
        },
        "comment": "target vertex of the calculated paths.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "list of paths, or null if no path exists between the start vertex and the end vertex.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]
