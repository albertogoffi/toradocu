[
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "WeakIdentityHashMap",
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialCapacity"
        },
        "comment": "the initial capacity of the WeakIdentityHashMap",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "loadFactor"
        },
        "comment": "the load factor of the WeakIdentityHashMap",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "If the initial capacity is negative, or if the load factor is nonpositive.",
        "kind": "@throws",
        "condition": "args[0]<0"
      }
    ],
    "signature": "WeakIdentityHashMap(int initialCapacity,float loadFactor)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "WeakIdentityHashMap",
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialCapacity"
        },
        "comment": "the initial capacity of the WeakIdentityHashMap",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "comment": "If the initial capacity is negative.",
        "kind": "@throws",
        "condition": "args[0]<0"
      }
    ],
    "signature": "WeakIdentityHashMap(int initialCapacity)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "WeakIdentityHashMap",
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "WeakIdentityHashMap()"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "WeakIdentityHashMap",
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "t"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "the map whose mappings are to be placed in this map.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the specified map is null.",
        "kind": "@throws",
        "condition": "args[0]==null"
      }
    ],
    "signature": "WeakIdentityHashMap(java.util.Map t)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "maskNull",
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "Object",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "maskNull(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "unmaskNull",
    "returnType": {
      "qualifiedName": "K",
      "name": "K",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "unmaskNull(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "eq",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "eq(java.lang.Object x,java.lang.Object y)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "hasher",
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "hasher(java.lang.Object x)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "indexFor",
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "h"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "indexFor(int h,int length)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "expungeStaleEntries",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "expungeStaleEntries()"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "getTable",
    "returnType": {
      "qualifiedName": "plume.WeakIdentityHashMap.Entry[]",
      "name": "Entry[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "plume.WeakIdentityHashMap.Entry",
        "name": "Entry",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "getTable()"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "size",
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "size()"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "isEmpty",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "isEmpty()"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "get",
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key whose associated value is to be returned.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "get(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "containsKey",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key whose presence in this map is to be tested",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "containsKey(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "getEntry",
    "returnType": {
      "qualifiedName": "plume.WeakIdentityHashMap.Entry",
      "name": "Entry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "getEntry(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "put",
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "key with which the specified value is to be associated.",
        "kind": "@param",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value to be associated with the specified key.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "put(java.lang.Object key,java.lang.Object value)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "resize",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newCapacity"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "newCapacity"
        },
        "comment": "the new capacity, MUST be a power of two; must be greater than current capacity unless current capacity is MAXIMUM_CAPACITY (in which case value is irrelevant).",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "resize(int newCapacity)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "transfer",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "plume.WeakIdentityHashMap.Entry[]",
          "name": "Entry[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "plume.WeakIdentityHashMap.Entry",
            "name": "Entry",
            "isArray": false
          }
        },
        "name": "src"
      },
      {
        "type": {
          "qualifiedName": "plume.WeakIdentityHashMap.Entry[]",
          "name": "Entry[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "plume.WeakIdentityHashMap.Entry",
            "name": "Entry",
            "isArray": false
          }
        },
        "name": "dest"
      }
    ],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "transfer(plume.WeakIdentityHashMap.Entry[] src,plume.WeakIdentityHashMap.Entry[] dest)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "putAll",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "m"
        },
        "comment": "mappings to be stored in this map.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "comment": "if the specified map is null.",
        "kind": "@throws",
        "condition": "args[0]==null"
      }
    ],
    "signature": "putAll(java.util.Map m)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "remove",
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "key whose mapping is to be removed from the map.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "remove(java.lang.Object key)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "removeMapping",
    "returnType": {
      "qualifiedName": "plume.WeakIdentityHashMap.Entry",
      "name": "Entry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "removeMapping(java.lang.Object o)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "clear",
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "clear()"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "containsValue",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value whose presence in this map is to be tested.",
        "kind": "@param",
        "condition": ""
      }
    ],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "containsValue(java.lang.Object value)"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "containsNullValue",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "containsNullValue()"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "keySet",
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "keySet()"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "values",
    "returnType": {
      "qualifiedName": "java.util.Collection",
      "name": "Collection",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "values()"
  },
  {
    "containingClass": {
      "qualifiedName": "plume.WeakIdentityHashMap",
      "name": "WeakIdentityHashMap",
      "isArray": false
    },
    "name": "entrySet",
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "entrySet()"
  },
  {
    "containingClass": {
      "qualifiedName": "java.util.AbstractMap",
      "name": "AbstractMap",
      "isArray": false
    },
    "name": "equals",
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "arg0"
      }
    ],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "equals(java.lang.Object arg0)"
  },
  {
    "containingClass": {
      "qualifiedName": "java.util.AbstractMap",
      "name": "AbstractMap",
      "isArray": false
    },
    "name": "hashCode",
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "hashCode()"
  },
  {
    "containingClass": {
      "qualifiedName": "java.util.AbstractMap",
      "name": "AbstractMap",
      "isArray": false
    },
    "name": "toString",
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "toString()"
  },
  {
    "containingClass": {
      "qualifiedName": "java.util.AbstractMap",
      "name": "AbstractMap",
      "isArray": false
    },
    "name": "clone",
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "isVarArgs": false,
    "throwsTags": [],
    "signature": "clone()"
  }
]