[
  {
    "signature": "min(int[] a)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min(long[] a)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min(double[] a)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min(java.lang.Integer[] a)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Integer",
      "name": "Integer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Integer[]",
          "name": "Integer[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Integer",
            "name": "Integer",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Integer[]",
            "name": "Integer[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Integer",
              "name": "Integer",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min(java.lang.Long[] a)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Long",
      "name": "Long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Long[]",
          "name": "Long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Long",
            "name": "Long",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Long[]",
            "name": "Long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Long",
              "name": "Long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min(java.lang.Double[] a)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Double",
      "name": "Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Double[]",
          "name": "Double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Double",
            "name": "Double",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Double[]",
            "name": "Double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Double",
              "name": "Double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(int[] a)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(long[] a)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(double[] a)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(java.lang.Integer[] a)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Integer",
      "name": "Integer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Integer[]",
          "name": "Integer[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Integer",
            "name": "Integer",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Integer[]",
            "name": "Integer[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Integer",
              "name": "Integer",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(java.lang.Long[] a)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Long",
      "name": "Long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Long[]",
          "name": "Long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Long",
            "name": "Long",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Long[]",
            "name": "Long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Long",
              "name": "Long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(java.lang.Double[] a)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Double",
      "name": "Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Double[]",
          "name": "Double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Double",
            "name": "Double",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Double[]",
            "name": "Double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Double",
              "name": "Double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min_max(int[] a)",
    "name": "min_max",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "int",
        "name": "int",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a two-element array containing the smallest and largest values in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min_max(long[] a)",
    "name": "min_max",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long[]",
      "name": "long[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "long",
        "name": "long",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a two-element array containing the smallest and largest values in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "element_range(int[] a)",
    "name": "element_range",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the difference between the smallest and largest array elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "element_range(long[] a)",
    "name": "element_range",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the difference between the smallest and largest array elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array has length 0",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "sum(int[] a)",
    "name": "sum",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the sum of an array of integers",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sum(int[][] a)",
    "name": "sum",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[][]",
          "name": "int[][]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[][]",
            "name": "int[][]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "a 2d array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the sum of all the elements of a 2d array of integers",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sum(double[] a)",
    "name": "sum",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the sum of an array of doubles",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sum(double[][] a)",
    "name": "sum",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[][]",
          "name": "double[][]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[][]",
            "name": "double[][]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "a 2d array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the sum of all the elements of a 2d array of doubles",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(java.lang.Object[] a,java.lang.Object elt)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "elt"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index whose element is equal to the specified element, or -1 if no such element is found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(java.lang.Object[] a,java.lang.Object elt,int minindex,int indexlimit)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "elt"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexlimit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minindex"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "indexlimit"
        },
        "comment": "first index at which not to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index i containing the specified element, such that minindex ≤ i < indexlimit, or -1 if the element is not found in that section of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(java.util.List a,java.lang.Object elt)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "elt"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a list",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index whose element is equal to the specified element, or -1 if no such element is found in the list",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(java.util.List a,java.lang.Object elt,int minindex,int indexlimit)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "elt"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexlimit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a list",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minindex"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "indexlimit"
        },
        "comment": "first index at which not to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index i containing the specified element, such that minindex ≤ i < indexlimit, or -1 if the element is not found in that section of the list",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOfEq(java.lang.Object[] a,java.lang.Object elt)",
    "name": "indexOfEq",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "elt"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index containing the specified element, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOfEq(java.lang.Object[] a,java.lang.Object elt,int minindex,int indexlimit)",
    "name": "indexOfEq",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "elt"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexlimit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minindex"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "indexlimit"
        },
        "comment": "first index at which not to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index i containing the specified element, such that minindex ≤ i < indexlimit, or -1 if the element is not found in that section of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOfEq(java.util.List a,java.lang.Object elt)",
    "name": "indexOfEq",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "elt"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a list",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index containing the specified element, or -1 if the element is not found in the list",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOfEq(java.util.List a,java.lang.Object elt,int minindex,int indexlimit)",
    "name": "indexOfEq",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "elt"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexlimit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a list",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minindex"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "indexlimit"
        },
        "comment": "first index at which not to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index i containing the specified element, such that minindex ≤ i < indexlimit, or -1 if the element is not found in that section of the list",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(int[] a,int elt)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "elt"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index containing the specified element, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(long[] a,long elt)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "elt"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index containing the specified element, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(int[] a,int elt,int minindex,int indexlimit)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "elt"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexlimit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minindex"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "indexlimit"
        },
        "comment": "first index at which not to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index i containing the specified element, such that minindex ≤ i < indexlimit, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(long[] a,long elt,int minindex,int indexlimit)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "elt"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexlimit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minindex"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "indexlimit"
        },
        "comment": "first index at which not to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index i containing the specified element, such that minindex ≤ i < indexlimit, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(boolean[] a,boolean elt)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean[]",
          "name": "boolean[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "elt"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean[]",
            "name": "boolean[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index containing the specified element, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(double[] a,double elt)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "elt"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index containing the specified element, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(boolean[] a,boolean elt,int minindex,int indexlimit)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean[]",
          "name": "boolean[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "elt"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexlimit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean[]",
            "name": "boolean[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "elt"
        },
        "comment": "the element to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minindex"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "indexlimit"
        },
        "comment": "first index at which not to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index i containing the specified element, such that minindex ≤ i < indexlimit, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(java.lang.Object[] a,java.lang.Object[] sub)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "sub"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second array starts in the first array, or -1 if no such element is found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOfEq(java.lang.Object[] a,java.lang.Object[] sub)",
    "name": "indexOfEq",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "sub"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second array starts in the first array, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(java.util.List a,java.lang.Object[] sub)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "sub"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a list",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second array starts in the first list, or -1 if no such element is found in the list",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOfEq(java.util.List a,java.lang.Object[] sub)",
    "name": "indexOfEq",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "sub"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a list",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second array starts in the first list, or -1 if the element is not found in the list",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(java.lang.Object[] a,java.util.List sub)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "sub"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "a list",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second list starts in the first array, or -1 if no such element is found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOfEq(java.lang.Object[] a,java.util.List sub)",
    "name": "indexOfEq",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "sub"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "a list",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second list starts in the first array, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(java.util.List a,java.util.List sub)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "sub"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a list",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second list starts in the first list, or -1 if no such element is found in the list",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOfEq(java.util.List a,java.util.List sub)",
    "name": "indexOfEq",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "sub"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a list",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second list starts in the first list, or -1 if the element is not found in the list",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(int[] a,int[] sub)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "sub"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second array starts in the first array, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(double[] a,double[] sub)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "sub"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second array starts in the first array, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(long[] a,long[] sub)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "sub"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second array starts in the first array, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(boolean[] a,boolean[] sub)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean[]",
          "name": "boolean[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "boolean[]",
          "name": "boolean[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          }
        },
        "name": "sub"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean[]",
            "name": "boolean[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean[]",
            "name": "boolean[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index containing the specified element, or -1 if the element is not found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "subarray(java.lang.Object[] a,int startindex,int length)",
    "name": "subarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object[]",
      "name": "Object[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.Object",
        "name": "Object",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the original array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startindex"
        },
        "comment": "the first index to be included",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of elements to include (not an end index, to avoid confusion over whether it would be the last included index or the first non-included index)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subarray of the given array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "subarray(java.util.List a,int startindex,int length)",
    "name": "subarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "the original list",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startindex"
        },
        "comment": "the first index to be included",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of elements to include (not an end index, to avoid confusion over whether it would be the last included index or the first non-included index)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a sublist of the given list",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "subarray(java.lang.String[] a,int startindex,int length)",
    "name": "subarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "String[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.String",
        "name": "String",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the original array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startindex"
        },
        "comment": "the first index to be included",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of elements to include (not an end index, to avoid confusion over whether it would be the last included index or the first non-included index)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subarray of the given array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "subarray(byte[] a,int startindex,int length)",
    "name": "subarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte[]",
      "name": "byte[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "byte",
        "name": "byte",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "byte[]",
          "name": "byte[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte[]",
            "name": "byte[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "byte",
              "name": "byte",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the original array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startindex"
        },
        "comment": "the first index to be included",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of elements to include (not an end index, to avoid confusion over whether it would be the last included index or the first non-included index)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subarray of the given array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "subarray(boolean[] a,int startindex,int length)",
    "name": "subarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean[]",
      "name": "boolean[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "boolean",
        "name": "boolean",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean[]",
          "name": "boolean[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean[]",
            "name": "boolean[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the original array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startindex"
        },
        "comment": "the first index to be included",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of elements to include (not an end index, to avoid confusion over whether it would be the last included index or the first non-included index)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subarray of the given array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "subarray(char[] a,int startindex,int length)",
    "name": "subarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char[]",
      "name": "char[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "char",
        "name": "char",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the original array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startindex"
        },
        "comment": "the first index to be included",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of elements to include (not an end index, to avoid confusion over whether it would be the last included index or the first non-included index)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subarray of the given array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "subarray(double[] a,int startindex,int length)",
    "name": "subarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the original array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startindex"
        },
        "comment": "the first index to be included",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of elements to include (not an end index, to avoid confusion over whether it would be the last included index or the first non-included index)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subarray of the given array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "subarray(float[] a,int startindex,int length)",
    "name": "subarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float[]",
      "name": "float[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "float",
        "name": "float",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float[]",
          "name": "float[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float[]",
            "name": "float[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "float",
              "name": "float",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the original array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startindex"
        },
        "comment": "the first index to be included",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of elements to include (not an end index, to avoid confusion over whether it would be the last included index or the first non-included index)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subarray of the given array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "subarray(int[] a,int startindex,int length)",
    "name": "subarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "int",
        "name": "int",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the original array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startindex"
        },
        "comment": "the first index to be included",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of elements to include (not an end index, to avoid confusion over whether it would be the last included index or the first non-included index)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subarray of the given array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "subarray(long[] a,int startindex,int length)",
    "name": "subarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long[]",
      "name": "long[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "long",
        "name": "long",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the original array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startindex"
        },
        "comment": "the first index to be included",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of elements to include (not an end index, to avoid confusion over whether it would be the last included index or the first non-included index)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subarray of the given array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "subarray(short[] a,int startindex,int length)",
    "name": "subarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "short[]",
      "name": "short[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "short",
        "name": "short",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "short[]",
          "name": "short[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startindex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "short[]",
            "name": "short[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "short",
              "name": "short",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the original array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startindex"
        },
        "comment": "the first index to be included",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of elements to include (not an end index, to avoid confusion over whether it would be the last included index or the first non-included index)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subarray of the given array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubarray(java.lang.Object[] a,java.lang.Object[] sub,int a_offset)",
    "name": "isSubarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "sub"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a_offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a_offset"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff sub is a contiguous subarray of a",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubarrayEq(java.lang.Object[] a,java.lang.Object[] sub,int a_offset)",
    "name": "isSubarrayEq",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "sub"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a_offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a_offset"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff sub is a contiguous subarray of a",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubarray(java.lang.Object[] a,java.util.List sub,int a_offset)",
    "name": "isSubarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "sub"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a_offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a_offset"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second array starts in the first array, or -1 if no such element is found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubarrayEq(java.lang.Object[] a,java.util.List sub,int a_offset)",
    "name": "isSubarrayEq",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "sub"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a_offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a_offset"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff sub is a contiguous subarray of a",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubarray(java.util.List a,java.lang.Object[] sub,int a_offset)",
    "name": "isSubarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "sub"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a_offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a_offset"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second array starts in the first array, or -1 if no such element is found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubarrayEq(java.util.List a,java.lang.Object[] sub,int a_offset)",
    "name": "isSubarrayEq",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "sub"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a_offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a_offset"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff sub is a contiguous subarray of a",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubarray(java.util.List a,java.util.List sub,int a_offset)",
    "name": "isSubarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "sub"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a_offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a_offset"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index at which the second array starts in the first array, or -1 if no such element is found in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubarrayEq(java.util.List a,java.util.List sub,int a_offset)",
    "name": "isSubarrayEq",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "sub"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a_offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a_offset"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff sub is a contiguous subarray of a",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubarray(int[] a,int[] sub,int a_offset)",
    "name": "isSubarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "sub"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a_offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a_offset"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff sub is a contiguous subarray of a",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubarray(long[] a,long[] sub,int a_offset)",
    "name": "isSubarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "sub"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a_offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a_offset"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff sub is a contiguous subarray of a",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubarray(double[] a,double[] sub,int a_offset)",
    "name": "isSubarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "sub"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a_offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a_offset"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff sub is a contiguous subarray of a",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubarray(boolean[] a,boolean[] sub,int a_offset)",
    "name": "isSubarray",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean[]",
          "name": "boolean[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "boolean[]",
          "name": "boolean[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          }
        },
        "name": "sub"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a_offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean[]",
            "name": "boolean[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean[]",
            "name": "boolean[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "isArray": false
            }
          },
          "name": "sub"
        },
        "comment": "subsequence to search for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a_offset"
        },
        "comment": "first index at which to search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff sub is a contiguous subarray of a",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(java.lang.Object[] a,java.lang.Object[] b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "T",
        "name": "T",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the first sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "b"
        },
        "comment": "the second sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(java.lang.Object[] a,java.util.List b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "T",
        "name": "T",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the first sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "the second sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(java.util.List a,java.lang.Object[] b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "T",
        "name": "T",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "the first sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "b"
        },
        "comment": "the second sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(java.util.List a,java.util.List b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "T",
        "name": "T",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "the first sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "the second sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(java.lang.String[] a,java.lang.String[] b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "String[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.String",
        "name": "String",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the first array to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "b"
        },
        "comment": "the second array to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(byte[] a,byte[] b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte[]",
      "name": "byte[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "byte",
        "name": "byte",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "byte[]",
          "name": "byte[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "byte[]",
          "name": "byte[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          }
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte[]",
            "name": "byte[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "byte",
              "name": "byte",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the first sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte[]",
            "name": "byte[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "byte",
              "name": "byte",
              "isArray": false
            }
          },
          "name": "b"
        },
        "comment": "the second sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(boolean[] a,boolean[] b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean[]",
      "name": "boolean[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "boolean",
        "name": "boolean",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean[]",
          "name": "boolean[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "boolean[]",
          "name": "boolean[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          }
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean[]",
            "name": "boolean[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the first sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean[]",
            "name": "boolean[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "isArray": false
            }
          },
          "name": "b"
        },
        "comment": "the second sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(char[] a,char[] b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char[]",
      "name": "char[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "char",
        "name": "char",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the first sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "b"
        },
        "comment": "the second sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(double[] a,double[] b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the first sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "b"
        },
        "comment": "the second sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(float[] a,float[] b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float[]",
      "name": "float[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "float",
        "name": "float",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float[]",
          "name": "float[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "float[]",
          "name": "float[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          }
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float[]",
            "name": "float[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "float",
              "name": "float",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the first sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float[]",
            "name": "float[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "float",
              "name": "float",
              "isArray": false
            }
          },
          "name": "b"
        },
        "comment": "the second sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(int[] a,int[] b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "int",
        "name": "int",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the first sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "b"
        },
        "comment": "the second sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(long[] a,long[] b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long[]",
      "name": "long[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "long",
        "name": "long",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the first sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "b"
        },
        "comment": "the second sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "concat(short[] a,short[] b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "short[]",
      "name": "short[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "short",
        "name": "short",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "short[]",
          "name": "short[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "short[]",
          "name": "short[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          }
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "short[]",
            "name": "short[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "short",
              "name": "short",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the first sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "short[]",
            "name": "short[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "short",
              "name": "short",
              "isArray": false
            }
          },
          "name": "b"
        },
        "comment": "the second sequence to concatenate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array that concatenates the arguments",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(java.lang.Object[] a)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toStringQuoted(java.lang.Object[] a)",
    "name": "toStringQuoted",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the array, with the elements quoted",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(java.lang.Object[] a,boolean quoted)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "quoted"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "quoted"
        },
        "comment": "whether to quote the array elements",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(java.util.Collection a)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a collection",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the collection",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toStringQuoted(java.util.Collection a)",
    "name": "toStringQuoted",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a collection",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the collection, with the elements quoted",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(java.util.Collection a,boolean quoted)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "quoted"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a collection",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "quoted"
        },
        "comment": "whether to quote the collection elements that are Java strings",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the list",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(int[] a)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(long[] a)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(double[] a)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(float[] a)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float[]",
          "name": "float[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float[]",
            "name": "float[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "float",
              "name": "float",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(boolean[] a)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean[]",
          "name": "boolean[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean[]",
            "name": "boolean[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(java.lang.Object obj)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if obj is null or is not one of the types mentioned above.",
        "kind": "THROWS",
        "condition": "args[0]==null || ! (args[0] instanceof boolean[] || args[0] instanceof double[] || args[0] instanceof int[] || args[0] instanceof long[] || args[0] instanceof Object[])"
      }
    ]
  },
  {
    "signature": "length(java.lang.Object obj)",
    "name": "length",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "a list",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if obj is null or is not one of the types mentioned above.",
        "kind": "THROWS",
        "condition": "args[0]==null || ! (args[0] instanceof boolean[] || args[0] instanceof double[] || args[0] instanceof int[] || args[0] instanceof long[] || args[0] instanceof Object[])"
      }
    ]
  },
  {
    "signature": "sorted(int[] a)",
    "name": "sorted",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff the array is sorted",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sorted(long[] a)",
    "name": "sorted",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff the array is sorted",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sorted_descending(int[] a)",
    "name": "sorted_descending",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff the array is sorted in desending order",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sorted_descending(long[] a)",
    "name": "sorted_descending",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff the array is sorted in desending order",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "noDuplicates(boolean[] a)",
    "name": "noDuplicates",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean[]",
          "name": "boolean[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean[]",
            "name": "boolean[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff a does not contain duplicate elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "noDuplicates(byte[] a)",
    "name": "noDuplicates",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "byte[]",
          "name": "byte[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte[]",
            "name": "byte[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "byte",
              "name": "byte",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff a does not contain duplicate elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "noDuplicates(char[] a)",
    "name": "noDuplicates",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff a does not contain duplicate elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "noDuplicates(float[] a)",
    "name": "noDuplicates",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float[]",
          "name": "float[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float[]",
            "name": "float[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "float",
              "name": "float",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff a does not contain duplicate elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "noDuplicates(short[] a)",
    "name": "noDuplicates",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "short[]",
          "name": "short[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "short[]",
            "name": "short[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "short",
              "name": "short",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff a does not contain duplicate elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "noDuplicates(int[] a)",
    "name": "noDuplicates",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff a does not contain duplicate elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "noDuplicates(double[] a)",
    "name": "noDuplicates",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff a does not contain duplicate elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "noDuplicates(long[] a)",
    "name": "noDuplicates",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff a does not contain duplicate elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "noDuplicates(java.lang.String[] a)",
    "name": "noDuplicates",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff a does not contain duplicate elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "noDuplicates(java.lang.Object[] a)",
    "name": "noDuplicates",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff a does not contain duplicate elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "noDuplicates(java.util.List a)",
    "name": "noDuplicates",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a list",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff a does not contain duplicate elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "fn_is_permutation(int[] a)",
    "name": "fn_is_permutation",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array, representing a function",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff all elements of a are in [0..a.length) and a contains no duplicates.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "fn_is_total(int[] a)",
    "name": "fn_is_total",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array, representing a function",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff no element of a maps to -1",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "fn_identity(int length)",
    "name": "fn_identity",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "int",
        "name": "int",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the length of the result",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "fresh array that is the identity function of the given length",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "fn_inverse_permutation(int[] a)",
    "name": "fn_inverse_permutation",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "int",
        "name": "int",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the input permutation",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "fresh array which is the inverse of the given permutation",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "fn_inverse(int[] a,int arange)",
    "name": "fn_inverse",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "int",
        "name": "int",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "arange"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array representing a function from [0..a.length) to [0..arange); each element of a is between 0 and arange inclusive",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "arange"
        },
        "comment": "length of the argument's range and the result's domain",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "function from [0..arange) to [0..a.length) that is the inverse of a",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a value of a is outside of arange",
        "kind": "THROWS",
        "condition": "min(args[0])<0 || max(args[0])>=args[1]"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "when the function is not invertible",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "fn_compose(int[] a,int[] b)",
    "name": "fn_compose",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "int",
        "name": "int",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "function from [0..a.length) to [0..b.length)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "b"
        },
        "comment": "function from [0..b.length) to range R",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "function from [0..a.length) to range R that is the composition of a and b",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubset(long[] smaller,long[] bigger)",
    "name": "isSubset",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "smaller"
      },
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "bigger"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "smaller"
        },
        "comment": "first set to test",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "bigger"
        },
        "comment": "second set to test",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff smaller is a subset of bigger",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubset(double[] smaller,double[] bigger)",
    "name": "isSubset",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "smaller"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "bigger"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "smaller"
        },
        "comment": "first set to test",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "bigger"
        },
        "comment": "second set to test",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff smaller is a subset of bigger",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSubset(java.lang.String[] smaller,java.lang.String[] bigger)",
    "name": "isSubset",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "smaller"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "bigger"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "smaller"
        },
        "comment": "first set to test",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "bigger"
        },
        "comment": "second set to test",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff smaller is a subset of bigger",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "any_null(java.lang.Object[] a)",
    "name": "any_null",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff some element of a is null (false if a is zero-sized)",
      "kind": "RETURN",
      "condition": "java.util.Arrays.contains(null) ? methodResultID == true : methodResultID == false"
    },
    "throwsTags": []
  },
  {
    "signature": "all_null(java.lang.Object[] a)",
    "name": "all_null",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff all elements of a are null (unspecified result if a is zero-sized)",
      "kind": "RETURN",
      "condition": "java.util.Arrays.asList(args[0]).stream().allMatch(e -> e==null)?methodResultID==true : methodResultID==false"
    },
    "throwsTags": []
  },
  {
    "signature": "any_null(java.util.List a)",
    "name": "any_null",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff some element of a is null (false if a is zero-sized)",
      "kind": "RETURN",
      "condition": "java.util.Arrays.asList(array).stream().anyMatch(e -> e==null) ? methodResultID==true: methodResultID==false"
    },
    "throwsTags": []
  },
  {
    "signature": "all_null(java.util.List a)",
    "name": "all_null",
    "containingClass": {
      "qualifiedName": "plume.ArraysMDE",
      "name": "ArraysMDE",
      "isArray": false
    },
    "targetClass": "plume.ArraysMDE",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "an array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff all elements of a are null (unspecified result if a is zero-sized)",
      "kind": "RETURN",
      "condition": "args[0].stream().allMatch(e -> e==null) ? methodResultID==true : methodResultID==false"
    },
    "throwsTags": []
  }
]
